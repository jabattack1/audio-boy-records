{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\n\nif (process.browser) {\n  window.onload = function () {\n    var SETTINGS = {\n      navBarTravelling: false,\n      navBarTravelDirection: \"\",\n      navBarTravelDistance: 500\n    };\n    var colours = {\n      0: \"#867100\",\n      1: \"#7F4200\",\n      2: \"#99813D\",\n      3: \"#40FEFF\",\n      4: \"#14CC99\",\n      5: \"#00BAFF\",\n      6: \"#0082B2\",\n      7: \"#B25D7A\",\n      8: \"#00FF17\",\n      9: \"#006B49\",\n      10: \"#00B27A\",\n      11: \"#996B3D\",\n      12: \"#CC7014\",\n      13: \"#40FF8C\",\n      14: \"#FF3400\",\n      15: \"#ECBB5E\",\n      16: \"#ECBB0C\",\n      17: \"#B9D912\",\n      18: \"#253A93\",\n      19: \"#125FB9\"\n    };\n    document.documentElement.classList.remove(\"no-js\");\n    document.documentElement.classList.add(\"js\");\n    console.log('lion1');\n    console.log(document.getElementById(\"pnAdvancerLeft\")); // Out advancer buttons\n\n    var pnAdvancerLeft = document.getElementById(\"pnAdvancerLeft\");\n    var pnAdvancerRight = document.getElementById(\"pnAdvancerRight\"); // the indicator\n\n    var pnIndicator = document.getElementById(\"pnIndicator\");\n    var pnProductNav = document.getElementById(\"pnProductNav\");\n    var pnProductNavContents = document.getElementById(\"pnProductNavContents\");\n    pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav)); // Set the indicator\n\n    moveIndicator(pnProductNav.querySelector(\"[aria-selected=\\\"true\\\"]\"), colours[0]); // Handle the scroll of the horizontal container\n\n    var last_known_scroll_position = 0;\n    var ticking = false;\n\n    function doSomething(scroll_pos) {\n      pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n    }\n\n    pnProductNav.addEventListener(\"scroll\", function () {\n      last_known_scroll_position = window.scrollY;\n\n      if (!ticking) {\n        window.requestAnimationFrame(function () {\n          doSomething(last_known_scroll_position);\n          ticking = false;\n        });\n      }\n\n      ticking = true;\n    });\n    pnAdvancerLeft.addEventListener(\"click\", function () {\n      // If in the middle of a move return\n      if (SETTINGS.navBarTravelling === true) {\n        return;\n      } // If we have content overflowing both sides or on the left\n\n\n      if (determineOverflow(pnProductNavContents, pnProductNav) === \"left\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n        // Find how far this panel has been scrolled\n        var availableScrollLeft = pnProductNav.scrollLeft; // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n\n        if (availableScrollLeft < SETTINGS.navBarTravelDistance * 2) {\n          pnProductNavContents.style.transform = \"translateX(\" + availableScrollLeft + \"px)\";\n        } else {\n          pnProductNavContents.style.transform = \"translateX(\" + SETTINGS.navBarTravelDistance + \"px)\";\n        } // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\n\n        pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\"); // Update our settings\n\n        SETTINGS.navBarTravelDirection = \"left\";\n        SETTINGS.navBarTravelling = true;\n      } // Now update the attribute in the DOM\n\n\n      pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n    });\n    pnAdvancerRight.addEventListener(\"click\", function () {\n      // If in the middle of a move return\n      if (SETTINGS.navBarTravelling === true) {\n        return;\n      } // If we have content overflowing both sides or on the right\n\n\n      if (determineOverflow(pnProductNavContents, pnProductNav) === \"right\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n        // Get the right edge of the container and content\n        var navBarRightEdge = pnProductNavContents.getBoundingClientRect().right;\n        var navBarScrollerRightEdge = pnProductNav.getBoundingClientRect().right; // Now we know how much space we have available to scroll\n\n        var availableScrollRight = Math.floor(navBarRightEdge - navBarScrollerRightEdge); // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n\n        if (availableScrollRight < SETTINGS.navBarTravelDistance * 2) {\n          pnProductNavContents.style.transform = \"translateX(-\" + availableScrollRight + \"px)\";\n        } else {\n          pnProductNavContents.style.transform = \"translateX(-\" + SETTINGS.navBarTravelDistance + \"px)\";\n        } // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\n\n        pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\"); // Update our settings\n\n        SETTINGS.navBarTravelDirection = \"right\";\n        SETTINGS.navBarTravelling = true;\n      } // Now update the attribute in the DOM\n\n\n      pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n    });\n    pnProductNavContents.addEventListener(\"transitionend\", function () {\n      // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform\n      var styleOfTransform = window.getComputedStyle(pnProductNavContents, null);\n      var tr = styleOfTransform.getPropertyValue(\"-webkit-transform\") || styleOfTransform.getPropertyValue(\"transform\"); // If there is no transition we want to default to 0 and not null\n\n      var amount = Math.abs(_parseInt(tr.split(\",\")[4]) || 0);\n      pnProductNavContents.style.transform = \"none\";\n      pnProductNavContents.classList.add(\"pn-ProductNav_Contents-no-transition\"); // Now lets set the scroll position\n\n      if (SETTINGS.navBarTravelDirection === \"left\") {\n        pnProductNav.scrollLeft = pnProductNav.scrollLeft - amount;\n      } else {\n        pnProductNav.scrollLeft = pnProductNav.scrollLeft + amount;\n      }\n\n      SETTINGS.navBarTravelling = false;\n    }, false); // Handle setting the currently active link\n\n    pnProductNavContents.addEventListener(\"click\", function (e) {\n      var links = [].slice.call(document.querySelectorAll(\".pn-ProductNav_Link\"));\n      links.forEach(function (item) {\n        item.setAttribute(\"aria-selected\", \"false\");\n      });\n      e.target.setAttribute(\"aria-selected\", \"true\"); // Pass the clicked item and it's colour to the move indicator function\n\n      moveIndicator(e.target, colours[links.indexOf(e.target)]);\n    }); // var count = 0;\n\n    function moveIndicator(item, color) {\n      var textPosition = item.getBoundingClientRect();\n      var container = pnProductNavContents.getBoundingClientRect().left;\n      var distance = textPosition.left - container;\n      var scroll = pnProductNavContents.scrollLeft;\n      pnIndicator.style.transform = \"translateX(\" + (distance + scroll) + \"px) scaleX(\" + textPosition.width * 0.01 + \")\"; // count = count += 100;\n      // pnIndicator.style.transform = \"translateX(\" + count + \"px)\";\n\n      if (color) {\n        pnIndicator.style.backgroundColor = color;\n      }\n    }\n\n    function determineOverflow(content, container) {\n      var containerMetrics = container.getBoundingClientRect();\n      var containerMetricsRight = Math.floor(containerMetrics.right);\n      var containerMetricsLeft = Math.floor(containerMetrics.left);\n      var contentMetrics = content.getBoundingClientRect();\n      var contentMetricsRight = Math.floor(contentMetrics.right);\n      var contentMetricsLeft = Math.floor(contentMetrics.left);\n\n      if (containerMetricsLeft > contentMetricsLeft && containerMetricsRight < contentMetricsRight) {\n        return \"both\";\n      } else if (contentMetricsLeft < containerMetricsLeft) {\n        return \"left\";\n      } else if (contentMetricsRight > containerMetricsRight) {\n        return \"right\";\n      } else {\n        return \"none\";\n      }\n    }\n    /**\n     * @fileoverview dragscroll - scroll area by dragging\n     * @version 0.0.8\n     * \n     * @license MIT, see https://github.com/asvd/dragscroll\n     * @copyright 2015 asvd <heliosframework@gmail.com> \n     */\n\n\n    (function (root, factory) {\n      if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n      } else if (typeof exports !== 'undefined') {\n        factory(exports);\n      } else {\n        factory(root.dragscroll = {});\n      }\n    })(this, function (exports) {\n      var _window = window;\n      var _document = document;\n      var mousemove = 'mousemove';\n      var mouseup = 'mouseup';\n      var mousedown = 'mousedown';\n      var EventListener = 'EventListener';\n      var addEventListener = 'add' + EventListener;\n      var removeEventListener = 'remove' + EventListener;\n      var newScrollX, newScrollY;\n      var dragged = [];\n\n      var reset = function reset(i, el) {\n        for (i = 0; i < dragged.length;) {\n          el = dragged[i++];\n          el = el.container || el;\n          el[removeEventListener](mousedown, el.md, 0);\n\n          _window[removeEventListener](mouseup, el.mu, 0);\n\n          _window[removeEventListener](mousemove, el.mm, 0);\n        } // cloning into array since HTMLCollection is updated dynamically\n\n\n        dragged = [].slice.call(_document.getElementsByClassName('dragscroll'));\n\n        for (i = 0; i < dragged.length;) {\n          (function (el, lastClientX, lastClientY, pushed, scroller, cont) {\n            (cont = el.container || el)[addEventListener](mousedown, cont.md = function (e) {\n              if (!el.hasAttribute('nochilddrag') || _document.elementFromPoint(e.pageX, e.pageY) == cont) {\n                pushed = 1;\n                lastClientX = e.clientX;\n                lastClientY = e.clientY;\n                e.preventDefault();\n              }\n            }, 0);\n\n            _window[addEventListener](mouseup, cont.mu = function () {\n              pushed = 0;\n            }, 0);\n\n            _window[addEventListener](mousemove, cont.mm = function (e) {\n              if (pushed) {\n                (scroller = el.scroller || el).scrollLeft -= newScrollX = -lastClientX + (lastClientX = e.clientX);\n                scroller.scrollTop -= newScrollY = -lastClientY + (lastClientY = e.clientY);\n\n                if (el == _document.body) {\n                  (scroller = _document.documentElement).scrollLeft -= newScrollX;\n                  scroller.scrollTop -= newScrollY;\n                }\n              }\n            }, 0);\n          })(dragged[i++]);\n        }\n      };\n\n      if (_document.readyState == 'complete') {\n        reset();\n      } else {\n        _window[addEventListener]('load', reset, 0);\n      }\n\n      exports.reset = reset;\n    });\n\n    if (process.browser) {\n      window.onload = function () {\n        var SETTINGSStore = {\n          navBarTravellingStore: false,\n          navBarTravelDirectionStore: \"\",\n          navBarTravelDistanceStore: 250\n        };\n        var coloursStore = {\n          0: \"#867100\",\n          1: \"#7F4200\",\n          2: \"#99813D\",\n          3: \"#40FEFF\",\n          4: \"#14CC99\",\n          5: \"#00BAFF\",\n          6: \"#0082B2\",\n          7: \"#B25D7A\",\n          8: \"#00FF17\",\n          9: \"#006B49\",\n          10: \"#00B27A\",\n          11: \"#996B3D\",\n          12: \"#CC7014\",\n          13: \"#40FF8C\",\n          14: \"#FF3400\",\n          15: \"#ECBB5E\",\n          16: \"#ECBB0C\",\n          17: \"#B9D912\",\n          18: \"#253A93\",\n          19: \"#125FB9\"\n        };\n        document.documentElement.classList.remove(\"no-js\");\n        document.documentElement.classList.add(\"js\");\n        console.log('lion2');\n        console.log(document.getElementById(\"pnAdvancerLeftStore\")); // Out advancer buttons\n\n        var pnAdvancerLeftStore = document.getElementById(\"pnAdvancerLeftStore\");\n        var pnAdvancerRightStore = document.getElementById(\"pnAdvancerRightStore\"); // the indicator\n\n        var pnIndicatorStore = document.getElementById(\"pnIndicatorStore\");\n        var pnProductNavStore = document.getElementById(\"pnProductNavStore\");\n        var pnProductNavContentsStore = document.getElementById(\"pnProductNavContentsStore\");\n        pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore)); // Set the indicator\n\n        moveIndicatorStore(pnProductNavStore.querySelector(\"[aria-selected=\\\"true\\\"]\"), coloursStore[0]); // Handle the scroll of the horizontal container\n\n        var last_known_scroll_positionStore = 0;\n        var tickingStore = false;\n\n        function doSomethingStore(scroll_pos) {\n          pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n        }\n\n        pnProductNavStore.addEventListener(\"scroll\", function () {\n          last_known_scroll_positionStore = window.scrollY;\n\n          if (!tickingStore) {\n            window.requestAnimationFrame(function () {\n              doSomethingStore(last_known_scroll_positionStore);\n              tickingStore = false;\n            });\n          }\n\n          tickingStore = true;\n        });\n        pnAdvancerLeftStore.addEventListener(\"click\", function () {\n          // If in the middle of a move return\n          if (SETTINGSStore.navBarTravellingStore === true) {\n            return;\n          } // If we have content overflowing both sides or on the left\n\n\n          if (determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"left\" || determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"both\") {\n            // Find how far this panel has been scrolled\n            var availableScrollLeftStore = pnProductNavStore.scrollLeft; // If the space available is less than two lots of our desired distance, just move the whole amount\n            // otherwise, move by the amount in the settingsStore\n\n            if (availableScrollLeftStore < SETTINGSStore.navBarTravelDistanceStore * 2) {\n              pnProductNavContentsStore.style.transform = \"translateX(\" + availableScrollLeftStore + \"px)\";\n            } else {\n              pnProductNavContentsStore.style.transform = \"translateX(\" + SETTINGSStore.navBarTravelDistanceStore + \"px)\";\n            } // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\n\n            pnProductNavContentsStore.classList.remove(\"pn-ProductNav_Contents-no-transition\"); // Update our settingsStore\n\n            SETTINGSStore.navBarTravelDirectionStore = \"left\";\n            SETTINGSStore.navBarTravellingStore = true;\n          } // Now update the attribute in the DOM\n\n\n          pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n        });\n        pnAdvancerRightStore.addEventListener(\"click\", function () {\n          // If in the middle of a move return\n          if (SETTINGSStore.navBarTravellingStore === true) {\n            return;\n          } // If we have content overflowing both sides or on the right\n\n\n          if (determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"right\" || determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"both\") {\n            // Get the right edge of the container and content\n            var navBarRightEdgeStore = pnProductNavContentsStore.getBoundingClientRect().right;\n            var navBarScrollerRightEdgeStore = pnProductNavStore.getBoundingClientRect().right; // Now we know how much space we have available to scroll\n\n            var availableScrollRightStore = Math.floor(navBarRightEdgeStore - navBarScrollerRightEdgeStore); // If the space available is less than two lots of our desired distance, just move the whole amount\n            // otherwise, move by the amount in the settingsStore\n\n            if (availableScrollRightStore < SETTINGSStore.navBarTravelDistanceStore * 2) {\n              pnProductNavContentsStore.style.transform = \"translateX(-\" + availableScrollRightStore + \"px)\";\n            } else {\n              pnProductNavContentsStore.style.transform = \"translateX(-\" + SETTINGSStore.navBarTravelDistanceStore + \"px)\";\n            } // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\n\n            pnProductNavContentsStore.classList.remove(\"pn-ProductNav_Contents-no-transition\"); // Update our settingsStore\n\n            SETTINGSStore.navBarTravelDirectionStore = \"right\";\n            SETTINGSStore.navBarTravellingStore = true;\n          } // Now update the attribute in the DOM\n\n\n          pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n        });\n        pnProductNavContentsStore.addEventListener(\"transitionend\", function () {\n          // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform\n          var styleOfTransformStore = window.getComputedStyle(pnProductNavContentsStore, null);\n          var trStore = styleOfTransformStore.getPropertyValue(\"-webkit-transform\") || styleOfTransformStore.getPropertyValue(\"transform\"); // If there is no transition we want to default to 0 and not null\n\n          var amountStore = Math.abs(_parseInt(trStore.split(\",\")[4]) || 0);\n          pnProductNavContentsStore.style.transform = \"none\";\n          pnProductNavContentsStore.classList.add(\"pn-ProductNav_Contents-no-transition\"); // Now lets set the scroll position\n\n          if (SETTINGSStore.navBarTravelDirectionStore === \"left\") {\n            pnProductNavStore.scrollLeft = pnProductNavStore.scrollLeft - amountStore;\n          } else {\n            pnProductNavStore.scrollLeft = pnProductNavStore.scrollLeft + amountStore;\n          }\n\n          SETTINGSStore.navBarTravellingStore = false;\n        }, false); // Handle setting the currently active link\n\n        pnProductNavContentsStore.addEventListener(\"click\", function (e) {\n          var linksStore = [].slice.call(document.querySelectorAll(\".pn-ProductNav_LinkStore\"));\n          linksStore.forEach(function (item) {\n            item.setAttribute(\"aria-selected\", \"false\");\n          });\n          e.target.setAttribute(\"aria-selected\", \"true\"); // Pass the clicked item and it's colour to the move indicator function\n\n          moveIndicatorStore(e.target, coloursStore[linksStore.indexOf(e.target)]);\n        }); // var count = 0;\n\n        function moveIndicatorStore(item, color) {\n          var textPosition = item.getBoundingClientRect();\n          var container = pnProductNavContentsStore.getBoundingClientRect().left;\n          var distance = textPosition.left - container;\n          var scroll = pnProductNavContentsStore.scrollLeft;\n          pnIndicatorStore.style.transform = \"translateX(\" + (distance + scroll) + \"px) scaleX(\" + textPosition.width * 0.01 + \")\"; // count = count += 100;\n          // pnIndicator.style.transform = \"translateX(\" + count + \"px)\";\n\n          if (color) {\n            pnIndicatorStore.style.backgroundColor = color;\n          }\n        }\n\n        function determineOverflowStore(content, container) {\n          var containerMetrics = container.getBoundingClientRect();\n          var containerMetricsRight = Math.floor(containerMetrics.right);\n          var containerMetricsLeft = Math.floor(containerMetrics.left);\n          var contentMetrics = content.getBoundingClientRect();\n          var contentMetricsRight = Math.floor(contentMetrics.right);\n          var contentMetricsLeft = Math.floor(contentMetrics.left);\n\n          if (containerMetricsLeft > contentMetricsLeft && containerMetricsRight < contentMetricsRight) {\n            return \"both\";\n          } else if (contentMetricsLeft < containerMetricsLeft) {\n            return \"left\";\n          } else if (contentMetricsRight > containerMetricsRight) {\n            return \"right\";\n          } else {\n            return \"none\";\n          }\n        }\n        /**\n         * @fileoverview dragscroll - scroll area by dragging\n         * @version 0.0.8\n         * \n         * @license MIT, see https://github.com/asvd/dragscroll\n         * @copyright 2015 asvd <heliosframework@gmail.com> \n         */\n\n\n        (function (root, factory) {\n          if (typeof define === 'function' && define.amd) {\n            define(['exports'], factory);\n          } else if (typeof exports !== 'undefined') {\n            factory(exports);\n          } else {\n            factory(root.dragscroll = {});\n          }\n        })(this, function (exports) {\n          var _windowStore = window;\n          var _documentStore = document;\n          var mousemoveStore = 'mousemove';\n          var mouseupStore = 'mouseup';\n          var mousedownStore = 'mousedown';\n          var EventListenerStore = 'EventListener';\n          var addEventListenerStore = 'add' + EventListenerStore;\n          var removeEventListenerStore = 'remove' + EventListenerStore;\n          var newScrollXStore, newScrollYStore;\n          var dragged = [];\n\n          var resetStore = function resetStore(i, el) {\n            for (i = 0; i < dragged.length;) {\n              el = dragged[i++];\n              el = el.container || el;\n              el[removeEventListenerStore](mousedownStore, el.md, 0);\n\n              _windowStore[removeEventListenerStore](mouseupStore, el.mu, 0);\n\n              _windowStore[removeEventListenerStore](mousemoveStore, el.mm, 0);\n            } // cloning into array since HTMLCollection is updated dynamically\n\n\n            dragged = [].slice.call(_documentStore.getElementsByClassName('dragscroll'));\n\n            for (i = 0; i < dragged.length;) {\n              (function (el, lastClientX, lastClientY, pushed, scroller, cont) {\n                (cont = el.container || el)[addEventListenerStore](mousedownStore, cont.md = function (e) {\n                  if (!el.hasAttribute('nochilddrag') || _documentStore.elementFromPoint(e.pageX, e.pageY) == cont) {\n                    pushed = 1;\n                    lastClientX = e.clientX;\n                    lastClientY = e.clientY;\n                    e.preventDefault();\n                  }\n                }, 0);\n\n                _windowStore[addEventListenerStore](mouseupStore, cont.mu = function () {\n                  pushed = 0;\n                }, 0);\n\n                _windowStore[addEventListenerStore](mousemoveStore, cont.mm = function (e) {\n                  if (pushed) {\n                    (scroller = el.scroller || el).scrollLeft -= newScrollXStore = -lastClientX + (lastClientX = e.clientX);\n                    scroller.scrollTop -= newScrollYStore = -lastClientY + (lastClientY = e.clientY);\n\n                    if (el == _documentStore.body) {\n                      (scroller = _documentStore.documentElement).scrollLeft -= newScrollXStore;\n                      scroller.scrollTop -= newScrollYStore;\n                    }\n                  }\n                }, 0);\n              })(dragged[i++]);\n            }\n          };\n\n          if (_documentStore.readyState == 'complete') {\n            resetStore();\n          } else {\n            _windowStore[addEventListenerStore]('load', resetStore, 0);\n          }\n\n          exports.resetStore = resetStore;\n        });\n      };\n    }\n\n    if (process.browser) {\n      window.onload = function () {\n        var SETTINGSStore = {\n          navBarTravellingStore: false,\n          navBarTravelDirectionStore: \"\",\n          navBarTravelDistanceStore: 250\n        };\n        var coloursStore = {\n          0: \"#867100\",\n          1: \"#7F4200\",\n          2: \"#99813D\",\n          3: \"#40FEFF\",\n          4: \"#14CC99\",\n          5: \"#00BAFF\",\n          6: \"#0082B2\",\n          7: \"#B25D7A\",\n          8: \"#00FF17\",\n          9: \"#006B49\",\n          10: \"#00B27A\",\n          11: \"#996B3D\",\n          12: \"#CC7014\",\n          13: \"#40FF8C\",\n          14: \"#FF3400\",\n          15: \"#ECBB5E\",\n          16: \"#ECBB0C\",\n          17: \"#B9D912\",\n          18: \"#253A93\",\n          19: \"#125FB9\"\n        };\n        document.documentElement.classList.remove(\"no-js\");\n        document.documentElement.classList.add(\"js\");\n        console.log('lion2');\n        console.log(document.getElementById(\"pnAdvancerLeftStore\")); // Out advancer buttons\n\n        var pnAdvancerLeftStore = document.getElementById(\"pnAdvancerLeftStore\");\n        var pnAdvancerRightStore = document.getElementById(\"pnAdvancerRightStore\"); // the indicator\n\n        var pnIndicatorStore = document.getElementById(\"pnIndicatorStore\");\n        var pnProductNavStore = document.getElementById(\"pnProductNavStore\");\n        var pnProductNavContentsStore = document.getElementById(\"pnProductNavContentsStore\");\n        pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore)); // Set the indicator\n\n        moveIndicatorStore(pnProductNavStore.querySelector(\"[aria-selected=\\\"true\\\"]\"), coloursStore[0]); // Handle the scroll of the horizontal container\n\n        var last_known_scroll_positionStore = 0;\n        var tickingStore = false;\n\n        function doSomethingStore(scroll_pos) {\n          pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n        }\n\n        pnProductNavStore.addEventListener(\"scroll\", function () {\n          last_known_scroll_positionStore = window.scrollY;\n\n          if (!tickingStore) {\n            window.requestAnimationFrame(function () {\n              doSomethingStore(last_known_scroll_positionStore);\n              tickingStore = false;\n            });\n          }\n\n          tickingStore = true;\n        });\n        pnAdvancerLeftStore.addEventListener(\"click\", function () {\n          // If in the middle of a move return\n          if (SETTINGSStore.navBarTravellingStore === true) {\n            return;\n          } // If we have content overflowing both sides or on the left\n\n\n          if (determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"left\" || determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"both\") {\n            // Find how far this panel has been scrolled\n            var availableScrollLeftStore = pnProductNavStore.scrollLeft; // If the space available is less than two lots of our desired distance, just move the whole amount\n            // otherwise, move by the amount in the settingsStore\n\n            if (availableScrollLeftStore < SETTINGSStore.navBarTravelDistanceStore * 2) {\n              pnProductNavContentsStore.style.transform = \"translateX(\" + availableScrollLeftStore + \"px)\";\n            } else {\n              pnProductNavContentsStore.style.transform = \"translateX(\" + SETTINGSStore.navBarTravelDistanceStore + \"px)\";\n            } // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\n\n            pnProductNavContentsStore.classList.remove(\"pn-ProductNav_Contents-no-transition\"); // Update our settingsStore\n\n            SETTINGSStore.navBarTravelDirectionStore = \"left\";\n            SETTINGSStore.navBarTravellingStore = true;\n          } // Now update the attribute in the DOM\n\n\n          pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n        });\n        pnAdvancerRightStore.addEventListener(\"click\", function () {\n          // If in the middle of a move return\n          if (SETTINGSStore.navBarTravellingStore === true) {\n            return;\n          } // If we have content overflowing both sides or on the right\n\n\n          if (determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"right\" || determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"both\") {\n            // Get the right edge of the container and content\n            var navBarRightEdgeStore = pnProductNavContentsStore.getBoundingClientRect().right;\n            var navBarScrollerRightEdgeStore = pnProductNavStore.getBoundingClientRect().right; // Now we know how much space we have available to scroll\n\n            var availableScrollRightStore = Math.floor(navBarRightEdgeStore - navBarScrollerRightEdgeStore); // If the space available is less than two lots of our desired distance, just move the whole amount\n            // otherwise, move by the amount in the settingsStore\n\n            if (availableScrollRightStore < SETTINGSStore.navBarTravelDistanceStore * 2) {\n              pnProductNavContentsStore.style.transform = \"translateX(-\" + availableScrollRightStore + \"px)\";\n            } else {\n              pnProductNavContentsStore.style.transform = \"translateX(-\" + SETTINGSStore.navBarTravelDistanceStore + \"px)\";\n            } // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\n\n            pnProductNavContentsStore.classList.remove(\"pn-ProductNav_Contents-no-transition\"); // Update our settingsStore\n\n            SETTINGSStore.navBarTravelDirectionStore = \"right\";\n            SETTINGSStore.navBarTravellingStore = true;\n          } // Now update the attribute in the DOM\n\n\n          pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n        });\n        pnProductNavContentsStore.addEventListener(\"transitionend\", function () {\n          // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform\n          var styleOfTransformStore = window.getComputedStyle(pnProductNavContentsStore, null);\n          var trStore = styleOfTransformStore.getPropertyValue(\"-webkit-transform\") || styleOfTransformStore.getPropertyValue(\"transform\"); // If there is no transition we want to default to 0 and not null\n\n          var amountStore = Math.abs(_parseInt(trStore.split(\",\")[4]) || 0);\n          pnProductNavContentsStore.style.transform = \"none\";\n          pnProductNavContentsStore.classList.add(\"pn-ProductNav_Contents-no-transition\"); // Now lets set the scroll position\n\n          if (SETTINGSStore.navBarTravelDirectionStore === \"left\") {\n            pnProductNavStore.scrollLeft = pnProductNavStore.scrollLeft - amountStore;\n          } else {\n            pnProductNavStore.scrollLeft = pnProductNavStore.scrollLeft + amountStore;\n          }\n\n          SETTINGSStore.navBarTravellingStore = false;\n        }, false); // Handle setting the currently active link\n\n        pnProductNavContentsStore.addEventListener(\"click\", function (e) {\n          var linksStore = [].slice.call(document.querySelectorAll(\".pn-ProductNav_LinkStore\"));\n          linksStore.forEach(function (item) {\n            item.setAttribute(\"aria-selected\", \"false\");\n          });\n          e.target.setAttribute(\"aria-selected\", \"true\"); // Pass the clicked item and it's colour to the move indicator function\n\n          moveIndicatorStore(e.target, coloursStore[linksStore.indexOf(e.target)]);\n        }); // var count = 0;\n\n        function moveIndicatorStore(item, color) {\n          var textPosition = item.getBoundingClientRect();\n          var container = pnProductNavContentsStore.getBoundingClientRect().left;\n          var distance = textPosition.left - container;\n          var scroll = pnProductNavContentsStore.scrollLeft;\n          pnIndicatorStore.style.transform = \"translateX(\" + (distance + scroll) + \"px) scaleX(\" + textPosition.width * 0.01 + \")\"; // count = count += 100;\n          // pnIndicator.style.transform = \"translateX(\" + count + \"px)\";\n\n          if (color) {\n            pnIndicatorStore.style.backgroundColor = color;\n          }\n        }\n\n        function determineOverflowStore(content, container) {\n          var containerMetrics = container.getBoundingClientRect();\n          var containerMetricsRight = Math.floor(containerMetrics.right);\n          var containerMetricsLeft = Math.floor(containerMetrics.left);\n          var contentMetrics = content.getBoundingClientRect();\n          var contentMetricsRight = Math.floor(contentMetrics.right);\n          var contentMetricsLeft = Math.floor(contentMetrics.left);\n\n          if (containerMetricsLeft > contentMetricsLeft && containerMetricsRight < contentMetricsRight) {\n            return \"both\";\n          } else if (contentMetricsLeft < containerMetricsLeft) {\n            return \"left\";\n          } else if (contentMetricsRight > containerMetricsRight) {\n            return \"right\";\n          } else {\n            return \"none\";\n          }\n        }\n        /**\n         * @fileoverview dragscroll - scroll area by dragging\n         * @version 0.0.8\n         * \n         * @license MIT, see https://github.com/asvd/dragscroll\n         * @copyright 2015 asvd <heliosframework@gmail.com> \n         */\n\n\n        (function (root, factory) {\n          if (typeof define === 'function' && define.amd) {\n            define(['exports'], factory);\n          } else if (typeof exports !== 'undefined') {\n            factory(exports);\n          } else {\n            factory(root.dragscroll = {});\n          }\n        })(this, function (exports) {\n          var _windowStore = window;\n          var _documentStore = document;\n          var mousemoveStore = 'mousemove';\n          var mouseupStore = 'mouseup';\n          var mousedownStore = 'mousedown';\n          var EventListenerStore = 'EventListener';\n          var addEventListenerStore = 'add' + EventListenerStore;\n          var removeEventListenerStore = 'remove' + EventListenerStore;\n          var newScrollXStore, newScrollYStore;\n          var dragged = [];\n\n          var resetStore = function resetStore(i, el) {\n            for (i = 0; i < dragged.length;) {\n              el = dragged[i++];\n              el = el.container || el;\n              el[removeEventListenerStore](mousedownStore, el.md, 0);\n\n              _windowStore[removeEventListenerStore](mouseupStore, el.mu, 0);\n\n              _windowStore[removeEventListenerStore](mousemoveStore, el.mm, 0);\n            } // cloning into array since HTMLCollection is updated dynamically\n\n\n            dragged = [].slice.call(_documentStore.getElementsByClassName('dragscroll'));\n\n            for (i = 0; i < dragged.length;) {\n              (function (el, lastClientX, lastClientY, pushed, scroller, cont) {\n                (cont = el.container || el)[addEventListenerStore](mousedownStore, cont.md = function (e) {\n                  if (!el.hasAttribute('nochilddrag') || _documentStore.elementFromPoint(e.pageX, e.pageY) == cont) {\n                    pushed = 1;\n                    lastClientX = e.clientX;\n                    lastClientY = e.clientY;\n                    e.preventDefault();\n                  }\n                }, 0);\n\n                _windowStore[addEventListenerStore](mouseupStore, cont.mu = function () {\n                  pushed = 0;\n                }, 0);\n\n                _windowStore[addEventListenerStore](mousemoveStore, cont.mm = function (e) {\n                  if (pushed) {\n                    (scroller = el.scroller || el).scrollLeft -= newScrollXStore = -lastClientX + (lastClientX = e.clientX);\n                    scroller.scrollTop -= newScrollYStore = -lastClientY + (lastClientY = e.clientY);\n\n                    if (el == _documentStore.body) {\n                      (scroller = _documentStore.documentElement).scrollLeft -= newScrollXStore;\n                      scroller.scrollTop -= newScrollYStore;\n                    }\n                  }\n                }, 0);\n              })(dragged[i++]);\n            }\n          };\n\n          if (_documentStore.readyState == 'complete') {\n            resetStore();\n          } else {\n            _windowStore[addEventListenerStore]('load', resetStore, 0);\n          }\n\n          exports.resetStore = resetStore;\n        });\n      };\n    }\n  };\n}","map":{"version":3,"sources":["/Users/peterhahn/src/new/audio-boy/scroll.js"],"names":["process","browser","window","onload","SETTINGS","navBarTravelling","navBarTravelDirection","navBarTravelDistance","colours","document","documentElement","classList","remove","add","console","log","getElementById","pnAdvancerLeft","pnAdvancerRight","pnIndicator","pnProductNav","pnProductNavContents","setAttribute","determineOverflow","moveIndicator","querySelector","last_known_scroll_position","ticking","doSomething","scroll_pos","addEventListener","scrollY","requestAnimationFrame","availableScrollLeft","scrollLeft","style","transform","navBarRightEdge","getBoundingClientRect","right","navBarScrollerRightEdge","availableScrollRight","Math","floor","styleOfTransform","getComputedStyle","tr","getPropertyValue","amount","abs","split","e","links","slice","call","querySelectorAll","forEach","item","target","indexOf","color","textPosition","container","left","distance","scroll","width","backgroundColor","content","containerMetrics","containerMetricsRight","containerMetricsLeft","contentMetrics","contentMetricsRight","contentMetricsLeft","root","factory","define","amd","exports","dragscroll","_window","_document","mousemove","mouseup","mousedown","EventListener","removeEventListener","newScrollX","newScrollY","dragged","reset","i","el","length","md","mu","mm","getElementsByClassName","lastClientX","lastClientY","pushed","scroller","cont","hasAttribute","elementFromPoint","pageX","pageY","clientX","clientY","preventDefault","scrollTop","body","readyState","SETTINGSStore","navBarTravellingStore","navBarTravelDirectionStore","navBarTravelDistanceStore","coloursStore","pnAdvancerLeftStore","pnAdvancerRightStore","pnIndicatorStore","pnProductNavStore","pnProductNavContentsStore","determineOverflowStore","moveIndicatorStore","last_known_scroll_positionStore","tickingStore","doSomethingStore","availableScrollLeftStore","navBarRightEdgeStore","navBarScrollerRightEdgeStore","availableScrollRightStore","styleOfTransformStore","trStore","amountStore","linksStore","_windowStore","_documentStore","mousemoveStore","mouseupStore","mousedownStore","EventListenerStore","addEventListenerStore","removeEventListenerStore","newScrollXStore","newScrollYStore","resetStore"],"mappings":";;AAAA,IAAIA,OAAO,CAACC,OAAZ,EAAoB;AACpBC,EAAAA,MAAM,CAACC,MAAP,GAAgB,YAAU;AAE1B,QAAIC,QAAQ,GAAG;AACXC,MAAAA,gBAAgB,EAAE,KADP;AAEXC,MAAAA,qBAAqB,EAAE,EAFZ;AAGVC,MAAAA,oBAAoB,EAAE;AAHZ,KAAf;AAMA,QAAIC,OAAO,GAAG;AACV,SAAG,SADO;AAEV,SAAG,SAFO;AAGV,SAAG,SAHO;AAIV,SAAG,SAJO;AAKV,SAAG,SALO;AAMV,SAAG,SANO;AAOV,SAAG,SAPO;AAQV,SAAG,SARO;AASV,SAAG,SATO;AAUV,SAAG,SAVO;AAWV,UAAI,SAXM;AAYV,UAAI,SAZM;AAaV,UAAI,SAbM;AAcV,UAAI,SAdM;AAeV,UAAI,SAfM;AAgBV,UAAI,SAhBM;AAiBV,UAAI,SAjBM;AAkBV,UAAI,SAlBM;AAmBV,UAAI,SAnBM;AAoBV,UAAI;AApBM,KAAd;AAuBAC,IAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCC,MAAnC,CAA0C,OAA1C;AACAH,IAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCE,GAAnC,CAAuC,IAAvC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACO,cAAT,CAAwB,gBAAxB,CAAZ,EAlC0B,CAmC1B;;AACA,QAAIC,cAAc,GAAGR,QAAQ,CAACO,cAAT,CAAwB,gBAAxB,CAArB;AACA,QAAIE,eAAe,GAAGT,QAAQ,CAACO,cAAT,CAAwB,iBAAxB,CAAtB,CArC0B,CAsC1B;;AACA,QAAIG,WAAW,GAAGV,QAAQ,CAACO,cAAT,CAAwB,aAAxB,CAAlB;AAEA,QAAII,YAAY,GAAGX,QAAQ,CAACO,cAAT,CAAwB,cAAxB,CAAnB;AACA,QAAIK,oBAAoB,GAAGZ,QAAQ,CAACO,cAAT,CAAwB,sBAAxB,CAA3B;AAEAI,IAAAA,YAAY,CAACE,YAAb,CAA0B,kBAA1B,EAA8CC,iBAAiB,CAACF,oBAAD,EAAuBD,YAAvB,CAA/D,EA5C0B,CA8C1B;;AACAI,IAAAA,aAAa,CAACJ,YAAY,CAACK,aAAb,CAA2B,0BAA3B,CAAD,EAAyDjB,OAAO,CAAC,CAAD,CAAhE,CAAb,CA/C0B,CAiD1B;;AACA,QAAIkB,0BAA0B,GAAG,CAAjC;AACA,QAAIC,OAAO,GAAG,KAAd;;AAEA,aAASC,WAAT,CAAqBC,UAArB,EAAiC;AAC7BT,MAAAA,YAAY,CAACE,YAAb,CAA0B,kBAA1B,EAA8CC,iBAAiB,CAACF,oBAAD,EAAuBD,YAAvB,CAA/D;AACH;;AAEDA,IAAAA,YAAY,CAACU,gBAAb,CAA8B,QAA9B,EAAwC,YAAW;AAC/CJ,MAAAA,0BAA0B,GAAGxB,MAAM,CAAC6B,OAApC;;AACA,UAAI,CAACJ,OAAL,EAAc;AACVzB,QAAAA,MAAM,CAAC8B,qBAAP,CAA6B,YAAW;AACpCJ,UAAAA,WAAW,CAACF,0BAAD,CAAX;AACAC,UAAAA,OAAO,GAAG,KAAV;AACH,SAHD;AAIH;;AACDA,MAAAA,OAAO,GAAG,IAAV;AACH,KATD;AAYAV,IAAAA,cAAc,CAACa,gBAAf,CAAgC,OAAhC,EAAyC,YAAW;AAChD;AACA,UAAI1B,QAAQ,CAACC,gBAAT,KAA8B,IAAlC,EAAwC;AACpC;AACH,OAJ+C,CAKhD;;;AACA,UAAIkB,iBAAiB,CAACF,oBAAD,EAAuBD,YAAvB,CAAjB,KAA0D,MAA1D,IAAoEG,iBAAiB,CAACF,oBAAD,EAAuBD,YAAvB,CAAjB,KAA0D,MAAlI,EAA0I;AACtI;AACA,YAAIa,mBAAmB,GAAGb,YAAY,CAACc,UAAvC,CAFsI,CAGtI;AACA;;AACA,YAAID,mBAAmB,GAAG7B,QAAQ,CAACG,oBAAT,GAAgC,CAA1D,EAA6D;AACzDc,UAAAA,oBAAoB,CAACc,KAArB,CAA2BC,SAA3B,GAAuC,gBAAgBH,mBAAhB,GAAsC,KAA7E;AACH,SAFD,MAEO;AACHZ,UAAAA,oBAAoB,CAACc,KAArB,CAA2BC,SAA3B,GAAuC,gBAAgBhC,QAAQ,CAACG,oBAAzB,GAAgD,KAAvF;AACH,SATqI,CAUtI;;;AACAc,QAAAA,oBAAoB,CAACV,SAArB,CAA+BC,MAA/B,CAAsC,sCAAtC,EAXsI,CAYtI;;AACAR,QAAAA,QAAQ,CAACE,qBAAT,GAAiC,MAAjC;AACAF,QAAAA,QAAQ,CAACC,gBAAT,GAA4B,IAA5B;AACH,OArB+C,CAsBhD;;;AACAe,MAAAA,YAAY,CAACE,YAAb,CAA0B,kBAA1B,EAA8CC,iBAAiB,CAACF,oBAAD,EAAuBD,YAAvB,CAA/D;AACH,KAxBD;AA0BAF,IAAAA,eAAe,CAACY,gBAAhB,CAAiC,OAAjC,EAA0C,YAAW;AACjD;AACA,UAAI1B,QAAQ,CAACC,gBAAT,KAA8B,IAAlC,EAAwC;AACpC;AACH,OAJgD,CAKjD;;;AACA,UAAIkB,iBAAiB,CAACF,oBAAD,EAAuBD,YAAvB,CAAjB,KAA0D,OAA1D,IAAqEG,iBAAiB,CAACF,oBAAD,EAAuBD,YAAvB,CAAjB,KAA0D,MAAnI,EAA2I;AACvI;AACA,YAAIiB,eAAe,GAAGhB,oBAAoB,CAACiB,qBAArB,GAA6CC,KAAnE;AACA,YAAIC,uBAAuB,GAAGpB,YAAY,CAACkB,qBAAb,GAAqCC,KAAnE,CAHuI,CAIvI;;AACA,YAAIE,oBAAoB,GAAGC,IAAI,CAACC,KAAL,CAAWN,eAAe,GAAGG,uBAA7B,CAA3B,CALuI,CAMvI;AACA;;AACA,YAAIC,oBAAoB,GAAGrC,QAAQ,CAACG,oBAAT,GAAgC,CAA3D,EAA8D;AAC1Dc,UAAAA,oBAAoB,CAACc,KAArB,CAA2BC,SAA3B,GAAuC,iBAAiBK,oBAAjB,GAAwC,KAA/E;AACH,SAFD,MAEO;AACHpB,UAAAA,oBAAoB,CAACc,KAArB,CAA2BC,SAA3B,GAAuC,iBAAiBhC,QAAQ,CAACG,oBAA1B,GAAiD,KAAxF;AACH,SAZsI,CAavI;;;AACAc,QAAAA,oBAAoB,CAACV,SAArB,CAA+BC,MAA/B,CAAsC,sCAAtC,EAduI,CAevI;;AACAR,QAAAA,QAAQ,CAACE,qBAAT,GAAiC,OAAjC;AACAF,QAAAA,QAAQ,CAACC,gBAAT,GAA4B,IAA5B;AACH,OAxBgD,CAyBjD;;;AACAe,MAAAA,YAAY,CAACE,YAAb,CAA0B,kBAA1B,EAA8CC,iBAAiB,CAACF,oBAAD,EAAuBD,YAAvB,CAA/D;AACH,KA3BD;AA6BAC,IAAAA,oBAAoB,CAACS,gBAArB,CACI,eADJ,EAEI,YAAW;AACP;AACA,UAAIc,gBAAgB,GAAG1C,MAAM,CAAC2C,gBAAP,CAAwBxB,oBAAxB,EAA8C,IAA9C,CAAvB;AACA,UAAIyB,EAAE,GAAGF,gBAAgB,CAACG,gBAAjB,CAAkC,mBAAlC,KAA0DH,gBAAgB,CAACG,gBAAjB,CAAkC,WAAlC,CAAnE,CAHO,CAIP;;AACA,UAAIC,MAAM,GAAGN,IAAI,CAACO,GAAL,CAAS,UAASH,EAAE,CAACI,KAAH,CAAS,GAAT,EAAc,CAAd,CAAT,KAA8B,CAAvC,CAAb;AACA7B,MAAAA,oBAAoB,CAACc,KAArB,CAA2BC,SAA3B,GAAuC,MAAvC;AACAf,MAAAA,oBAAoB,CAACV,SAArB,CAA+BE,GAA/B,CAAmC,sCAAnC,EAPO,CAQP;;AACA,UAAIT,QAAQ,CAACE,qBAAT,KAAmC,MAAvC,EAA+C;AAC3Cc,QAAAA,YAAY,CAACc,UAAb,GAA0Bd,YAAY,CAACc,UAAb,GAA0Bc,MAApD;AACH,OAFD,MAEO;AACH5B,QAAAA,YAAY,CAACc,UAAb,GAA0Bd,YAAY,CAACc,UAAb,GAA0Bc,MAApD;AACH;;AACD5C,MAAAA,QAAQ,CAACC,gBAAT,GAA4B,KAA5B;AACH,KAjBL,EAkBI,KAlBJ,EA5H0B,CAiJ1B;;AACAgB,IAAAA,oBAAoB,CAACS,gBAArB,CAAsC,OAAtC,EAA+C,UAASqB,CAAT,EAAY;AACvD,UAAIC,KAAK,GAAG,GAAGC,KAAH,CAASC,IAAT,CAAc7C,QAAQ,CAAC8C,gBAAT,CAA0B,qBAA1B,CAAd,CAAZ;AACAH,MAAAA,KAAK,CAACI,OAAN,CAAc,UAASC,IAAT,EAAe;AACzBA,QAAAA,IAAI,CAACnC,YAAL,CAAkB,eAAlB,EAAmC,OAAnC;AACH,OAFD;AAGA6B,MAAAA,CAAC,CAACO,MAAF,CAASpC,YAAT,CAAsB,eAAtB,EAAuC,MAAvC,EALuD,CAMvD;;AACAE,MAAAA,aAAa,CAAC2B,CAAC,CAACO,MAAH,EAAWlD,OAAO,CAAC4C,KAAK,CAACO,OAAN,CAAcR,CAAC,CAACO,MAAhB,CAAD,CAAlB,CAAb;AACH,KARD,EAlJ0B,CA4J1B;;AACA,aAASlC,aAAT,CAAuBiC,IAAvB,EAA6BG,KAA7B,EAAoC;AAChC,UAAIC,YAAY,GAAGJ,IAAI,CAACnB,qBAAL,EAAnB;AACA,UAAIwB,SAAS,GAAGzC,oBAAoB,CAACiB,qBAArB,GAA6CyB,IAA7D;AACA,UAAIC,QAAQ,GAAGH,YAAY,CAACE,IAAb,GAAoBD,SAAnC;AACC,UAAIG,MAAM,GAAG5C,oBAAoB,CAACa,UAAlC;AACDf,MAAAA,WAAW,CAACgB,KAAZ,CAAkBC,SAAlB,GAA8B,iBAAiB4B,QAAQ,GAAGC,MAA5B,IAAsC,aAAtC,GAAsDJ,YAAY,CAACK,KAAb,GAAqB,IAA3E,GAAkF,GAAhH,CALgC,CAMhC;AACA;;AAEA,UAAIN,KAAJ,EAAW;AACPzC,QAAAA,WAAW,CAACgB,KAAZ,CAAkBgC,eAAlB,GAAoCP,KAApC;AACH;AACJ;;AAED,aAASrC,iBAAT,CAA2B6C,OAA3B,EAAoCN,SAApC,EAA+C;AAC3C,UAAIO,gBAAgB,GAAGP,SAAS,CAACxB,qBAAV,EAAvB;AACA,UAAIgC,qBAAqB,GAAG5B,IAAI,CAACC,KAAL,CAAW0B,gBAAgB,CAAC9B,KAA5B,CAA5B;AACA,UAAIgC,oBAAoB,GAAG7B,IAAI,CAACC,KAAL,CAAW0B,gBAAgB,CAACN,IAA5B,CAA3B;AACA,UAAIS,cAAc,GAAGJ,OAAO,CAAC9B,qBAAR,EAArB;AACA,UAAImC,mBAAmB,GAAG/B,IAAI,CAACC,KAAL,CAAW6B,cAAc,CAACjC,KAA1B,CAA1B;AACA,UAAImC,kBAAkB,GAAGhC,IAAI,CAACC,KAAL,CAAW6B,cAAc,CAACT,IAA1B,CAAzB;;AACC,UAAIQ,oBAAoB,GAAGG,kBAAvB,IAA6CJ,qBAAqB,GAAGG,mBAAzE,EAA8F;AAC3F,eAAO,MAAP;AACH,OAFA,MAEM,IAAIC,kBAAkB,GAAGH,oBAAzB,EAA+C;AAClD,eAAO,MAAP;AACH,OAFM,MAEA,IAAIE,mBAAmB,GAAGH,qBAA1B,EAAiD;AACpD,eAAO,OAAP;AACH,OAFM,MAEA;AACH,eAAO,MAAP;AACH;AACJ;AAED;;;;;;;;;AASC,eAAUK,IAAV,EAAgBC,OAAhB,EAAyB;AACtB,UAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AAC5CD,QAAAA,MAAM,CAAC,CAAC,SAAD,CAAD,EAAcD,OAAd,CAAN;AACH,OAFD,MAEO,IAAI,OAAOG,OAAP,KAAmB,WAAvB,EAAoC;AACvCH,QAAAA,OAAO,CAACG,OAAD,CAAP;AACH,OAFM,MAEA;AACHH,QAAAA,OAAO,CAAED,IAAI,CAACK,UAAL,GAAkB,EAApB,CAAP;AACH;AACJ,KARA,EAQC,IARD,EAQO,UAAUD,OAAV,EAAmB;AACvB,UAAIE,OAAO,GAAG/E,MAAd;AACA,UAAIgF,SAAS,GAAGzE,QAAhB;AACA,UAAI0E,SAAS,GAAG,WAAhB;AACA,UAAIC,OAAO,GAAG,SAAd;AACA,UAAIC,SAAS,GAAG,WAAhB;AACA,UAAIC,aAAa,GAAG,eAApB;AACA,UAAIxD,gBAAgB,GAAG,QAAMwD,aAA7B;AACA,UAAIC,mBAAmB,GAAG,WAASD,aAAnC;AACA,UAAIE,UAAJ,EAAgBC,UAAhB;AAEA,UAAIC,OAAO,GAAG,EAAd;;AACA,UAAIC,KAAK,GAAG,SAARA,KAAQ,CAASC,CAAT,EAAYC,EAAZ,EAAgB;AACxB,aAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,OAAO,CAACI,MAAxB,GAAiC;AAC7BD,UAAAA,EAAE,GAAGH,OAAO,CAACE,CAAC,EAAF,CAAZ;AACAC,UAAAA,EAAE,GAAGA,EAAE,CAAC/B,SAAH,IAAgB+B,EAArB;AACAA,UAAAA,EAAE,CAACN,mBAAD,CAAF,CAAwBF,SAAxB,EAAmCQ,EAAE,CAACE,EAAtC,EAA0C,CAA1C;;AACAd,UAAAA,OAAO,CAACM,mBAAD,CAAP,CAA6BH,OAA7B,EAAsCS,EAAE,CAACG,EAAzC,EAA6C,CAA7C;;AACAf,UAAAA,OAAO,CAACM,mBAAD,CAAP,CAA6BJ,SAA7B,EAAwCU,EAAE,CAACI,EAA3C,EAA+C,CAA/C;AACH,SAPuB,CASxB;;;AACAP,QAAAA,OAAO,GAAG,GAAGrC,KAAH,CAASC,IAAT,CAAc4B,SAAS,CAACgB,sBAAV,CAAiC,YAAjC,CAAd,CAAV;;AACA,aAAKN,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,OAAO,CAACI,MAAxB,GAAiC;AAC7B,WAAC,UAASD,EAAT,EAAaM,WAAb,EAA0BC,WAA1B,EAAuCC,MAAvC,EAA+CC,QAA/C,EAAyDC,IAAzD,EAA8D;AAC3D,aAACA,IAAI,GAAGV,EAAE,CAAC/B,SAAH,IAAgB+B,EAAxB,EAA4B/D,gBAA5B,EACIuD,SADJ,EAEIkB,IAAI,CAACR,EAAL,GAAU,UAAS5C,CAAT,EAAY;AAClB,kBAAI,CAAC0C,EAAE,CAACW,YAAH,CAAgB,aAAhB,CAAD,IACAtB,SAAS,CAACuB,gBAAV,CACItD,CAAC,CAACuD,KADN,EACavD,CAAC,CAACwD,KADf,KAEKJ,IAHT,EAIE;AACEF,gBAAAA,MAAM,GAAG,CAAT;AACAF,gBAAAA,WAAW,GAAGhD,CAAC,CAACyD,OAAhB;AACAR,gBAAAA,WAAW,GAAGjD,CAAC,CAAC0D,OAAhB;AAEA1D,gBAAAA,CAAC,CAAC2D,cAAF;AACH;AACJ,aAdL,EAcO,CAdP;;AAiBA7B,YAAAA,OAAO,CAACnD,gBAAD,CAAP,CACIsD,OADJ,EACamB,IAAI,CAACP,EAAL,GAAU,YAAW;AAACK,cAAAA,MAAM,GAAG,CAAT;AAAY,aAD/C,EACiD,CADjD;;AAIApB,YAAAA,OAAO,CAACnD,gBAAD,CAAP,CACIqD,SADJ,EAEIoB,IAAI,CAACN,EAAL,GAAU,UAAS9C,CAAT,EAAY;AAClB,kBAAIkD,MAAJ,EAAY;AACR,iBAACC,QAAQ,GAAGT,EAAE,CAACS,QAAH,IAAaT,EAAzB,EAA6B3D,UAA7B,IACIsD,UAAU,GAAI,CAAEW,WAAF,IAAiBA,WAAW,GAAChD,CAAC,CAACyD,OAA/B,CADlB;AAEAN,gBAAAA,QAAQ,CAACS,SAAT,IACItB,UAAU,GAAI,CAAEW,WAAF,IAAiBA,WAAW,GAACjD,CAAC,CAAC0D,OAA/B,CADlB;;AAEA,oBAAIhB,EAAE,IAAIX,SAAS,CAAC8B,IAApB,EAA0B;AACtB,mBAACV,QAAQ,GAAGpB,SAAS,CAACxE,eAAtB,EAAuCwB,UAAvC,IAAqDsD,UAArD;AACAc,kBAAAA,QAAQ,CAACS,SAAT,IAAsBtB,UAAtB;AACH;AACJ;AACJ,aAbL,EAaO,CAbP;AAeF,WArCF,EAqCIC,OAAO,CAACE,CAAC,EAAF,CArCX;AAsCH;AACJ,OAnDD;;AAsDA,UAAIV,SAAS,CAAC+B,UAAV,IAAwB,UAA5B,EAAwC;AACpCtB,QAAAA,KAAK;AACR,OAFD,MAEO;AACHV,QAAAA,OAAO,CAACnD,gBAAD,CAAP,CAA0B,MAA1B,EAAkC6D,KAAlC,EAAyC,CAAzC;AACH;;AAEDZ,MAAAA,OAAO,CAACY,KAAR,GAAgBA,KAAhB;AACH,KAjFA,CAAD;;AAuFA,QAAI3F,OAAO,CAACC,OAAZ,EAAoB;AACpBC,MAAAA,MAAM,CAACC,MAAP,GAAgB,YAAU;AAE1B,YAAI+G,aAAa,GAAG;AAChBC,UAAAA,qBAAqB,EAAE,KADP;AAEhBC,UAAAA,0BAA0B,EAAE,EAFZ;AAGhBC,UAAAA,yBAAyB,EAAE;AAHX,SAApB;AAMA,YAAIC,YAAY,GAAG;AACf,aAAG,SADY;AAEf,aAAG,SAFY;AAGf,aAAG,SAHY;AAIf,aAAG,SAJY;AAKf,aAAG,SALY;AAMf,aAAG,SANY;AAOf,aAAG,SAPY;AAQf,aAAG,SARY;AASf,aAAG,SATY;AAUf,aAAG,SAVY;AAWf,cAAI,SAXW;AAYf,cAAI,SAZW;AAaf,cAAI,SAbW;AAcf,cAAI,SAdW;AAef,cAAI,SAfW;AAgBf,cAAI,SAhBW;AAiBf,cAAI,SAjBW;AAkBf,cAAI,SAlBW;AAmBf,cAAI,SAnBW;AAoBf,cAAI;AApBW,SAAnB;AAuBA7G,QAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCC,MAAnC,CAA0C,OAA1C;AACAH,QAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCE,GAAnC,CAAuC,IAAvC;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACO,cAAT,CAAwB,qBAAxB,CAAZ,EAlC0B,CAmC1B;;AACA,YAAIuG,mBAAmB,GAAG9G,QAAQ,CAACO,cAAT,CAAwB,qBAAxB,CAA1B;AACA,YAAIwG,oBAAoB,GAAG/G,QAAQ,CAACO,cAAT,CAAwB,sBAAxB,CAA3B,CArC0B,CAsC1B;;AACA,YAAIyG,gBAAgB,GAAGhH,QAAQ,CAACO,cAAT,CAAwB,kBAAxB,CAAvB;AAEA,YAAI0G,iBAAiB,GAAGjH,QAAQ,CAACO,cAAT,CAAwB,mBAAxB,CAAxB;AACA,YAAI2G,yBAAyB,GAAGlH,QAAQ,CAACO,cAAT,CAAwB,2BAAxB,CAAhC;AAEA0G,QAAAA,iBAAiB,CAACpG,YAAlB,CAA+B,kBAA/B,EAAmDsG,sBAAsB,CAACD,yBAAD,EAA4BD,iBAA5B,CAAzE,EA5C0B,CA8C1B;;AACAG,QAAAA,kBAAkB,CAACH,iBAAiB,CAACjG,aAAlB,CAAgC,0BAAhC,CAAD,EAA8D6F,YAAY,CAAC,CAAD,CAA1E,CAAlB,CA/C0B,CAiD1B;;AACA,YAAIQ,+BAA+B,GAAG,CAAtC;AACA,YAAIC,YAAY,GAAG,KAAnB;;AAEA,iBAASC,gBAAT,CAA0BnG,UAA1B,EAAsC;AAClC6F,UAAAA,iBAAiB,CAACpG,YAAlB,CAA+B,kBAA/B,EAAmDsG,sBAAsB,CAACD,yBAAD,EAA4BD,iBAA5B,CAAzE;AACH;;AAEDA,QAAAA,iBAAiB,CAAC5F,gBAAlB,CAAmC,QAAnC,EAA6C,YAAW;AACpDgG,UAAAA,+BAA+B,GAAG5H,MAAM,CAAC6B,OAAzC;;AACA,cAAI,CAACgG,YAAL,EAAmB;AACf7H,YAAAA,MAAM,CAAC8B,qBAAP,CAA6B,YAAW;AACpCgG,cAAAA,gBAAgB,CAACF,+BAAD,CAAhB;AACAC,cAAAA,YAAY,GAAG,KAAf;AACH,aAHD;AAIH;;AACDA,UAAAA,YAAY,GAAG,IAAf;AACH,SATD;AAYAR,QAAAA,mBAAmB,CAACzF,gBAApB,CAAqC,OAArC,EAA8C,YAAW;AACrD;AACA,cAAIoF,aAAa,CAACC,qBAAd,KAAwC,IAA5C,EAAkD;AAC9C;AACH,WAJoD,CAKrD;;;AACA,cAAIS,sBAAsB,CAACD,yBAAD,EAA4BD,iBAA5B,CAAtB,KAAyE,MAAzE,IAAmFE,sBAAsB,CAACD,yBAAD,EAA4BD,iBAA5B,CAAtB,KAAyE,MAAhK,EAAwK;AACpK;AACA,gBAAIO,wBAAwB,GAAGP,iBAAiB,CAACxF,UAAjD,CAFoK,CAGpK;AACA;;AACA,gBAAI+F,wBAAwB,GAAGf,aAAa,CAACG,yBAAd,GAA0C,CAAzE,EAA4E;AACxEM,cAAAA,yBAAyB,CAACxF,KAA1B,CAAgCC,SAAhC,GAA4C,gBAAgB6F,wBAAhB,GAA2C,KAAvF;AACH,aAFD,MAEO;AACHN,cAAAA,yBAAyB,CAACxF,KAA1B,CAAgCC,SAAhC,GAA4C,gBAAgB8E,aAAa,CAACG,yBAA9B,GAA0D,KAAtG;AACH,aATmK,CAUpK;;;AACAM,YAAAA,yBAAyB,CAAChH,SAA1B,CAAoCC,MAApC,CAA2C,sCAA3C,EAXoK,CAYpK;;AACAsG,YAAAA,aAAa,CAACE,0BAAd,GAA2C,MAA3C;AACAF,YAAAA,aAAa,CAACC,qBAAd,GAAsC,IAAtC;AACH,WArBoD,CAsBrD;;;AACAO,UAAAA,iBAAiB,CAACpG,YAAlB,CAA+B,kBAA/B,EAAmDsG,sBAAsB,CAACD,yBAAD,EAA4BD,iBAA5B,CAAzE;AACH,SAxBD;AA0BAF,QAAAA,oBAAoB,CAAC1F,gBAArB,CAAsC,OAAtC,EAA+C,YAAW;AACtD;AACA,cAAIoF,aAAa,CAACC,qBAAd,KAAwC,IAA5C,EAAkD;AAC9C;AACH,WAJqD,CAKtD;;;AACA,cAAIS,sBAAsB,CAACD,yBAAD,EAA4BD,iBAA5B,CAAtB,KAAyE,OAAzE,IAAoFE,sBAAsB,CAACD,yBAAD,EAA4BD,iBAA5B,CAAtB,KAAyE,MAAjK,EAAyK;AACrK;AACA,gBAAIQ,oBAAoB,GAAGP,yBAAyB,CAACrF,qBAA1B,GAAkDC,KAA7E;AACA,gBAAI4F,4BAA4B,GAAGT,iBAAiB,CAACpF,qBAAlB,GAA0CC,KAA7E,CAHqK,CAIrK;;AACA,gBAAI6F,yBAAyB,GAAG1F,IAAI,CAACC,KAAL,CAAWuF,oBAAoB,GAAGC,4BAAlC,CAAhC,CALqK,CAMrK;AACA;;AACA,gBAAIC,yBAAyB,GAAGlB,aAAa,CAACG,yBAAd,GAA0C,CAA1E,EAA6E;AACzEM,cAAAA,yBAAyB,CAACxF,KAA1B,CAAgCC,SAAhC,GAA4C,iBAAiBgG,yBAAjB,GAA6C,KAAzF;AACH,aAFD,MAEO;AACHT,cAAAA,yBAAyB,CAACxF,KAA1B,CAAgCC,SAAhC,GAA4C,iBAAiB8E,aAAa,CAACG,yBAA/B,GAA2D,KAAvG;AACH,aAZoK,CAarK;;;AACAM,YAAAA,yBAAyB,CAAChH,SAA1B,CAAoCC,MAApC,CAA2C,sCAA3C,EAdqK,CAerK;;AACAsG,YAAAA,aAAa,CAACE,0BAAd,GAA2C,OAA3C;AACAF,YAAAA,aAAa,CAACC,qBAAd,GAAsC,IAAtC;AACH,WAxBqD,CAyBtD;;;AACAO,UAAAA,iBAAiB,CAACpG,YAAlB,CAA+B,kBAA/B,EAAmDsG,sBAAsB,CAACD,yBAAD,EAA4BD,iBAA5B,CAAzE;AACH,SA3BD;AA6BAC,QAAAA,yBAAyB,CAAC7F,gBAA1B,CACI,eADJ,EAEI,YAAW;AACP;AACA,cAAIuG,qBAAqB,GAAGnI,MAAM,CAAC2C,gBAAP,CAAwB8E,yBAAxB,EAAmD,IAAnD,CAA5B;AACA,cAAIW,OAAO,GAAGD,qBAAqB,CAACtF,gBAAtB,CAAuC,mBAAvC,KAA+DsF,qBAAqB,CAACtF,gBAAtB,CAAuC,WAAvC,CAA7E,CAHO,CAIP;;AACA,cAAIwF,WAAW,GAAG7F,IAAI,CAACO,GAAL,CAAS,UAASqF,OAAO,CAACpF,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAT,KAAmC,CAA5C,CAAlB;AACAyE,UAAAA,yBAAyB,CAACxF,KAA1B,CAAgCC,SAAhC,GAA4C,MAA5C;AACAuF,UAAAA,yBAAyB,CAAChH,SAA1B,CAAoCE,GAApC,CAAwC,sCAAxC,EAPO,CAQP;;AACA,cAAIqG,aAAa,CAACE,0BAAd,KAA6C,MAAjD,EAAyD;AACrDM,YAAAA,iBAAiB,CAACxF,UAAlB,GAA+BwF,iBAAiB,CAACxF,UAAlB,GAA+BqG,WAA9D;AACH,WAFD,MAEO;AACHb,YAAAA,iBAAiB,CAACxF,UAAlB,GAA+BwF,iBAAiB,CAACxF,UAAlB,GAA+BqG,WAA9D;AACH;;AACDrB,UAAAA,aAAa,CAACC,qBAAd,GAAsC,KAAtC;AACH,SAjBL,EAkBI,KAlBJ,EA5H0B,CAiJ1B;;AACAQ,QAAAA,yBAAyB,CAAC7F,gBAA1B,CAA2C,OAA3C,EAAoD,UAASqB,CAAT,EAAY;AAC5D,cAAIqF,UAAU,GAAG,GAAGnF,KAAH,CAASC,IAAT,CAAc7C,QAAQ,CAAC8C,gBAAT,CAA0B,0BAA1B,CAAd,CAAjB;AACAiF,UAAAA,UAAU,CAAChF,OAAX,CAAmB,UAASC,IAAT,EAAe;AAC9BA,YAAAA,IAAI,CAACnC,YAAL,CAAkB,eAAlB,EAAmC,OAAnC;AACH,WAFD;AAGA6B,UAAAA,CAAC,CAACO,MAAF,CAASpC,YAAT,CAAsB,eAAtB,EAAuC,MAAvC,EAL4D,CAM5D;;AACAuG,UAAAA,kBAAkB,CAAC1E,CAAC,CAACO,MAAH,EAAW4D,YAAY,CAACkB,UAAU,CAAC7E,OAAX,CAAmBR,CAAC,CAACO,MAArB,CAAD,CAAvB,CAAlB;AACH,SARD,EAlJ0B,CA4J1B;;AACA,iBAASmE,kBAAT,CAA4BpE,IAA5B,EAAkCG,KAAlC,EAAyC;AACrC,cAAIC,YAAY,GAAGJ,IAAI,CAACnB,qBAAL,EAAnB;AACA,cAAIwB,SAAS,GAAG6D,yBAAyB,CAACrF,qBAA1B,GAAkDyB,IAAlE;AACA,cAAIC,QAAQ,GAAGH,YAAY,CAACE,IAAb,GAAoBD,SAAnC;AACC,cAAIG,MAAM,GAAG0D,yBAAyB,CAACzF,UAAvC;AACDuF,UAAAA,gBAAgB,CAACtF,KAAjB,CAAuBC,SAAvB,GAAmC,iBAAiB4B,QAAQ,GAAGC,MAA5B,IAAsC,aAAtC,GAAsDJ,YAAY,CAACK,KAAb,GAAqB,IAA3E,GAAkF,GAArH,CALqC,CAMrC;AACA;;AAEA,cAAIN,KAAJ,EAAW;AACP6D,YAAAA,gBAAgB,CAACtF,KAAjB,CAAuBgC,eAAvB,GAAyCP,KAAzC;AACH;AACJ;;AAED,iBAASgE,sBAAT,CAAgCxD,OAAhC,EAAyCN,SAAzC,EAAoD;AAChD,cAAIO,gBAAgB,GAAGP,SAAS,CAACxB,qBAAV,EAAvB;AACA,cAAIgC,qBAAqB,GAAG5B,IAAI,CAACC,KAAL,CAAW0B,gBAAgB,CAAC9B,KAA5B,CAA5B;AACA,cAAIgC,oBAAoB,GAAG7B,IAAI,CAACC,KAAL,CAAW0B,gBAAgB,CAACN,IAA5B,CAA3B;AACA,cAAIS,cAAc,GAAGJ,OAAO,CAAC9B,qBAAR,EAArB;AACA,cAAImC,mBAAmB,GAAG/B,IAAI,CAACC,KAAL,CAAW6B,cAAc,CAACjC,KAA1B,CAA1B;AACA,cAAImC,kBAAkB,GAAGhC,IAAI,CAACC,KAAL,CAAW6B,cAAc,CAACT,IAA1B,CAAzB;;AACC,cAAIQ,oBAAoB,GAAGG,kBAAvB,IAA6CJ,qBAAqB,GAAGG,mBAAzE,EAA8F;AAC3F,mBAAO,MAAP;AACH,WAFA,MAEM,IAAIC,kBAAkB,GAAGH,oBAAzB,EAA+C;AAClD,mBAAO,MAAP;AACH,WAFM,MAEA,IAAIE,mBAAmB,GAAGH,qBAA1B,EAAiD;AACpD,mBAAO,OAAP;AACH,WAFM,MAEA;AACH,mBAAO,MAAP;AACH;AACJ;AAED;;;;;;;;;AASC,mBAAUK,IAAV,EAAgBC,OAAhB,EAAyB;AACtB,cAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AAC5CD,YAAAA,MAAM,CAAC,CAAC,SAAD,CAAD,EAAcD,OAAd,CAAN;AACH,WAFD,MAEO,IAAI,OAAOG,OAAP,KAAmB,WAAvB,EAAoC;AACvCH,YAAAA,OAAO,CAACG,OAAD,CAAP;AACH,WAFM,MAEA;AACHH,YAAAA,OAAO,CAAED,IAAI,CAACK,UAAL,GAAkB,EAApB,CAAP;AACH;AACJ,SARA,EAQC,IARD,EAQO,UAAUD,OAAV,EAAmB;AACvB,cAAI0D,YAAY,GAAGvI,MAAnB;AACA,cAAIwI,cAAc,GAAGjI,QAArB;AACA,cAAIkI,cAAc,GAAG,WAArB;AACA,cAAIC,YAAY,GAAI,SAApB;AACA,cAAIC,cAAc,GAAI,WAAtB;AACA,cAAIC,kBAAkB,GAAG,eAAzB;AACA,cAAIC,qBAAqB,GAAI,QAAMD,kBAAnC;AACA,cAAIE,wBAAwB,GAAI,WAASF,kBAAzC;AACA,cAAIG,eAAJ,EAAqBC,eAArB;AAEA,cAAIxD,OAAO,GAAG,EAAd;;AACA,cAAIyD,UAAU,GAAG,SAAbA,UAAa,CAASvD,CAAT,EAAYC,EAAZ,EAAgB;AAC7B,iBAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,OAAO,CAACI,MAAxB,GAAiC;AAC7BD,cAAAA,EAAE,GAAGH,OAAO,CAACE,CAAC,EAAF,CAAZ;AACAC,cAAAA,EAAE,GAAGA,EAAE,CAAC/B,SAAH,IAAgB+B,EAArB;AACAA,cAAAA,EAAE,CAACmD,wBAAD,CAAF,CAA8BH,cAA9B,EAA+ChD,EAAE,CAACE,EAAlD,EAAsD,CAAtD;;AACA0C,cAAAA,YAAY,CAACO,wBAAD,CAAZ,CAAwCJ,YAAxC,EAAuD/C,EAAE,CAACG,EAA1D,EAA8D,CAA9D;;AACAyC,cAAAA,YAAY,CAACO,wBAAD,CAAZ,CAAwCL,cAAxC,EAAyD9C,EAAE,CAACI,EAA5D,EAAgE,CAAhE;AACH,aAP4B,CAS7B;;;AACAP,YAAAA,OAAO,GAAG,GAAGrC,KAAH,CAASC,IAAT,CAAcoF,cAAc,CAACxC,sBAAf,CAAsC,YAAtC,CAAd,CAAV;;AACA,iBAAKN,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,OAAO,CAACI,MAAxB,GAAiC;AAC7B,eAAC,UAASD,EAAT,EAAaM,WAAb,EAA0BC,WAA1B,EAAuCC,MAAvC,EAA+CC,QAA/C,EAAyDC,IAAzD,EAA8D;AAC3D,iBAACA,IAAI,GAAGV,EAAE,CAAC/B,SAAH,IAAgB+B,EAAxB,EAA4BkD,qBAA5B,EACIF,cADJ,EAEItC,IAAI,CAACR,EAAL,GAAU,UAAS5C,CAAT,EAAY;AAClB,sBAAI,CAAC0C,EAAE,CAACW,YAAH,CAAgB,aAAhB,CAAD,IACAkC,cAAc,CAACjC,gBAAf,CACItD,CAAC,CAACuD,KADN,EACavD,CAAC,CAACwD,KADf,KAEKJ,IAHT,EAIE;AACEF,oBAAAA,MAAM,GAAG,CAAT;AACAF,oBAAAA,WAAW,GAAGhD,CAAC,CAACyD,OAAhB;AACAR,oBAAAA,WAAW,GAAGjD,CAAC,CAAC0D,OAAhB;AAEA1D,oBAAAA,CAAC,CAAC2D,cAAF;AACH;AACJ,iBAdL,EAcO,CAdP;;AAiBA2B,gBAAAA,YAAY,CAACM,qBAAD,CAAZ,CACIH,YADJ,EACmBrC,IAAI,CAACP,EAAL,GAAU,YAAW;AAACK,kBAAAA,MAAM,GAAG,CAAT;AAAY,iBADrD,EACuD,CADvD;;AAIAoC,gBAAAA,YAAY,CAACM,qBAAD,CAAZ,CACIJ,cADJ,EAEIpC,IAAI,CAACN,EAAL,GAAU,UAAS9C,CAAT,EAAY;AAClB,sBAAIkD,MAAJ,EAAY;AACR,qBAACC,QAAQ,GAAGT,EAAE,CAACS,QAAH,IAAaT,EAAzB,EAA6B3D,UAA7B,IACI+G,eAAe,GAAI,CAAE9C,WAAF,IAAiBA,WAAW,GAAChD,CAAC,CAACyD,OAA/B,CADvB;AAEAN,oBAAAA,QAAQ,CAACS,SAAT,IACImC,eAAe,GAAI,CAAE9C,WAAF,IAAiBA,WAAW,GAACjD,CAAC,CAAC0D,OAA/B,CADvB;;AAEA,wBAAIhB,EAAE,IAAI6C,cAAc,CAAC1B,IAAzB,EAA+B;AAC3B,uBAACV,QAAQ,GAAGoC,cAAc,CAAChI,eAA3B,EAA4CwB,UAA5C,IAA0D+G,eAA1D;AACA3C,sBAAAA,QAAQ,CAACS,SAAT,IAAsBmC,eAAtB;AACH;AACJ;AACJ,iBAbL,EAaO,CAbP;AAeF,eArCF,EAqCIxD,OAAO,CAACE,CAAC,EAAF,CArCX;AAsCH;AACJ,WAnDD;;AAsDA,cAAI8C,cAAc,CAACzB,UAAf,IAA6B,UAAjC,EAA6C;AACzCkC,YAAAA,UAAU;AACb,WAFD,MAEO;AACHV,YAAAA,YAAY,CAACM,qBAAD,CAAZ,CAAqC,MAArC,EAA6CI,UAA7C,EAAyD,CAAzD;AACH;;AAEDpE,UAAAA,OAAO,CAACoE,UAAR,GAAqBA,UAArB;AACH,SAjFA,CAAD;AAkFC,OAxRD;AAyRC;;AAID,QAAInJ,OAAO,CAACC,OAAZ,EAAoB;AACpBC,MAAAA,MAAM,CAACC,MAAP,GAAgB,YAAU;AAE1B,YAAI+G,aAAa,GAAG;AAChBC,UAAAA,qBAAqB,EAAE,KADP;AAEhBC,UAAAA,0BAA0B,EAAE,EAFZ;AAGhBC,UAAAA,yBAAyB,EAAE;AAHX,SAApB;AAMA,YAAIC,YAAY,GAAG;AACf,aAAG,SADY;AAEf,aAAG,SAFY;AAGf,aAAG,SAHY;AAIf,aAAG,SAJY;AAKf,aAAG,SALY;AAMf,aAAG,SANY;AAOf,aAAG,SAPY;AAQf,aAAG,SARY;AASf,aAAG,SATY;AAUf,aAAG,SAVY;AAWf,cAAI,SAXW;AAYf,cAAI,SAZW;AAaf,cAAI,SAbW;AAcf,cAAI,SAdW;AAef,cAAI,SAfW;AAgBf,cAAI,SAhBW;AAiBf,cAAI,SAjBW;AAkBf,cAAI,SAlBW;AAmBf,cAAI,SAnBW;AAoBf,cAAI;AApBW,SAAnB;AAuBA7G,QAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCC,MAAnC,CAA0C,OAA1C;AACAH,QAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCE,GAAnC,CAAuC,IAAvC;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACO,cAAT,CAAwB,qBAAxB,CAAZ,EAlC0B,CAmC1B;;AACA,YAAIuG,mBAAmB,GAAG9G,QAAQ,CAACO,cAAT,CAAwB,qBAAxB,CAA1B;AACA,YAAIwG,oBAAoB,GAAG/G,QAAQ,CAACO,cAAT,CAAwB,sBAAxB,CAA3B,CArC0B,CAsC1B;;AACA,YAAIyG,gBAAgB,GAAGhH,QAAQ,CAACO,cAAT,CAAwB,kBAAxB,CAAvB;AAEA,YAAI0G,iBAAiB,GAAGjH,QAAQ,CAACO,cAAT,CAAwB,mBAAxB,CAAxB;AACA,YAAI2G,yBAAyB,GAAGlH,QAAQ,CAACO,cAAT,CAAwB,2BAAxB,CAAhC;AAEA0G,QAAAA,iBAAiB,CAACpG,YAAlB,CAA+B,kBAA/B,EAAmDsG,sBAAsB,CAACD,yBAAD,EAA4BD,iBAA5B,CAAzE,EA5C0B,CA8C1B;;AACAG,QAAAA,kBAAkB,CAACH,iBAAiB,CAACjG,aAAlB,CAAgC,0BAAhC,CAAD,EAA8D6F,YAAY,CAAC,CAAD,CAA1E,CAAlB,CA/C0B,CAiD1B;;AACA,YAAIQ,+BAA+B,GAAG,CAAtC;AACA,YAAIC,YAAY,GAAG,KAAnB;;AAEA,iBAASC,gBAAT,CAA0BnG,UAA1B,EAAsC;AAClC6F,UAAAA,iBAAiB,CAACpG,YAAlB,CAA+B,kBAA/B,EAAmDsG,sBAAsB,CAACD,yBAAD,EAA4BD,iBAA5B,CAAzE;AACH;;AAEDA,QAAAA,iBAAiB,CAAC5F,gBAAlB,CAAmC,QAAnC,EAA6C,YAAW;AACpDgG,UAAAA,+BAA+B,GAAG5H,MAAM,CAAC6B,OAAzC;;AACA,cAAI,CAACgG,YAAL,EAAmB;AACf7H,YAAAA,MAAM,CAAC8B,qBAAP,CAA6B,YAAW;AACpCgG,cAAAA,gBAAgB,CAACF,+BAAD,CAAhB;AACAC,cAAAA,YAAY,GAAG,KAAf;AACH,aAHD;AAIH;;AACDA,UAAAA,YAAY,GAAG,IAAf;AACH,SATD;AAYAR,QAAAA,mBAAmB,CAACzF,gBAApB,CAAqC,OAArC,EAA8C,YAAW;AACrD;AACA,cAAIoF,aAAa,CAACC,qBAAd,KAAwC,IAA5C,EAAkD;AAC9C;AACH,WAJoD,CAKrD;;;AACA,cAAIS,sBAAsB,CAACD,yBAAD,EAA4BD,iBAA5B,CAAtB,KAAyE,MAAzE,IAAmFE,sBAAsB,CAACD,yBAAD,EAA4BD,iBAA5B,CAAtB,KAAyE,MAAhK,EAAwK;AACpK;AACA,gBAAIO,wBAAwB,GAAGP,iBAAiB,CAACxF,UAAjD,CAFoK,CAGpK;AACA;;AACA,gBAAI+F,wBAAwB,GAAGf,aAAa,CAACG,yBAAd,GAA0C,CAAzE,EAA4E;AACxEM,cAAAA,yBAAyB,CAACxF,KAA1B,CAAgCC,SAAhC,GAA4C,gBAAgB6F,wBAAhB,GAA2C,KAAvF;AACH,aAFD,MAEO;AACHN,cAAAA,yBAAyB,CAACxF,KAA1B,CAAgCC,SAAhC,GAA4C,gBAAgB8E,aAAa,CAACG,yBAA9B,GAA0D,KAAtG;AACH,aATmK,CAUpK;;;AACAM,YAAAA,yBAAyB,CAAChH,SAA1B,CAAoCC,MAApC,CAA2C,sCAA3C,EAXoK,CAYpK;;AACAsG,YAAAA,aAAa,CAACE,0BAAd,GAA2C,MAA3C;AACAF,YAAAA,aAAa,CAACC,qBAAd,GAAsC,IAAtC;AACH,WArBoD,CAsBrD;;;AACAO,UAAAA,iBAAiB,CAACpG,YAAlB,CAA+B,kBAA/B,EAAmDsG,sBAAsB,CAACD,yBAAD,EAA4BD,iBAA5B,CAAzE;AACH,SAxBD;AA0BAF,QAAAA,oBAAoB,CAAC1F,gBAArB,CAAsC,OAAtC,EAA+C,YAAW;AACtD;AACA,cAAIoF,aAAa,CAACC,qBAAd,KAAwC,IAA5C,EAAkD;AAC9C;AACH,WAJqD,CAKtD;;;AACA,cAAIS,sBAAsB,CAACD,yBAAD,EAA4BD,iBAA5B,CAAtB,KAAyE,OAAzE,IAAoFE,sBAAsB,CAACD,yBAAD,EAA4BD,iBAA5B,CAAtB,KAAyE,MAAjK,EAAyK;AACrK;AACA,gBAAIQ,oBAAoB,GAAGP,yBAAyB,CAACrF,qBAA1B,GAAkDC,KAA7E;AACA,gBAAI4F,4BAA4B,GAAGT,iBAAiB,CAACpF,qBAAlB,GAA0CC,KAA7E,CAHqK,CAIrK;;AACA,gBAAI6F,yBAAyB,GAAG1F,IAAI,CAACC,KAAL,CAAWuF,oBAAoB,GAAGC,4BAAlC,CAAhC,CALqK,CAMrK;AACA;;AACA,gBAAIC,yBAAyB,GAAGlB,aAAa,CAACG,yBAAd,GAA0C,CAA1E,EAA6E;AACzEM,cAAAA,yBAAyB,CAACxF,KAA1B,CAAgCC,SAAhC,GAA4C,iBAAiBgG,yBAAjB,GAA6C,KAAzF;AACH,aAFD,MAEO;AACHT,cAAAA,yBAAyB,CAACxF,KAA1B,CAAgCC,SAAhC,GAA4C,iBAAiB8E,aAAa,CAACG,yBAA/B,GAA2D,KAAvG;AACH,aAZoK,CAarK;;;AACAM,YAAAA,yBAAyB,CAAChH,SAA1B,CAAoCC,MAApC,CAA2C,sCAA3C,EAdqK,CAerK;;AACAsG,YAAAA,aAAa,CAACE,0BAAd,GAA2C,OAA3C;AACAF,YAAAA,aAAa,CAACC,qBAAd,GAAsC,IAAtC;AACH,WAxBqD,CAyBtD;;;AACAO,UAAAA,iBAAiB,CAACpG,YAAlB,CAA+B,kBAA/B,EAAmDsG,sBAAsB,CAACD,yBAAD,EAA4BD,iBAA5B,CAAzE;AACH,SA3BD;AA6BAC,QAAAA,yBAAyB,CAAC7F,gBAA1B,CACI,eADJ,EAEI,YAAW;AACP;AACA,cAAIuG,qBAAqB,GAAGnI,MAAM,CAAC2C,gBAAP,CAAwB8E,yBAAxB,EAAmD,IAAnD,CAA5B;AACA,cAAIW,OAAO,GAAGD,qBAAqB,CAACtF,gBAAtB,CAAuC,mBAAvC,KAA+DsF,qBAAqB,CAACtF,gBAAtB,CAAuC,WAAvC,CAA7E,CAHO,CAIP;;AACA,cAAIwF,WAAW,GAAG7F,IAAI,CAACO,GAAL,CAAS,UAASqF,OAAO,CAACpF,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAT,KAAmC,CAA5C,CAAlB;AACAyE,UAAAA,yBAAyB,CAACxF,KAA1B,CAAgCC,SAAhC,GAA4C,MAA5C;AACAuF,UAAAA,yBAAyB,CAAChH,SAA1B,CAAoCE,GAApC,CAAwC,sCAAxC,EAPO,CAQP;;AACA,cAAIqG,aAAa,CAACE,0BAAd,KAA6C,MAAjD,EAAyD;AACrDM,YAAAA,iBAAiB,CAACxF,UAAlB,GAA+BwF,iBAAiB,CAACxF,UAAlB,GAA+BqG,WAA9D;AACH,WAFD,MAEO;AACHb,YAAAA,iBAAiB,CAACxF,UAAlB,GAA+BwF,iBAAiB,CAACxF,UAAlB,GAA+BqG,WAA9D;AACH;;AACDrB,UAAAA,aAAa,CAACC,qBAAd,GAAsC,KAAtC;AACH,SAjBL,EAkBI,KAlBJ,EA5H0B,CAiJ1B;;AACAQ,QAAAA,yBAAyB,CAAC7F,gBAA1B,CAA2C,OAA3C,EAAoD,UAASqB,CAAT,EAAY;AAC5D,cAAIqF,UAAU,GAAG,GAAGnF,KAAH,CAASC,IAAT,CAAc7C,QAAQ,CAAC8C,gBAAT,CAA0B,0BAA1B,CAAd,CAAjB;AACAiF,UAAAA,UAAU,CAAChF,OAAX,CAAmB,UAASC,IAAT,EAAe;AAC9BA,YAAAA,IAAI,CAACnC,YAAL,CAAkB,eAAlB,EAAmC,OAAnC;AACH,WAFD;AAGA6B,UAAAA,CAAC,CAACO,MAAF,CAASpC,YAAT,CAAsB,eAAtB,EAAuC,MAAvC,EAL4D,CAM5D;;AACAuG,UAAAA,kBAAkB,CAAC1E,CAAC,CAACO,MAAH,EAAW4D,YAAY,CAACkB,UAAU,CAAC7E,OAAX,CAAmBR,CAAC,CAACO,MAArB,CAAD,CAAvB,CAAlB;AACH,SARD,EAlJ0B,CA4J1B;;AACA,iBAASmE,kBAAT,CAA4BpE,IAA5B,EAAkCG,KAAlC,EAAyC;AACrC,cAAIC,YAAY,GAAGJ,IAAI,CAACnB,qBAAL,EAAnB;AACA,cAAIwB,SAAS,GAAG6D,yBAAyB,CAACrF,qBAA1B,GAAkDyB,IAAlE;AACA,cAAIC,QAAQ,GAAGH,YAAY,CAACE,IAAb,GAAoBD,SAAnC;AACC,cAAIG,MAAM,GAAG0D,yBAAyB,CAACzF,UAAvC;AACDuF,UAAAA,gBAAgB,CAACtF,KAAjB,CAAuBC,SAAvB,GAAmC,iBAAiB4B,QAAQ,GAAGC,MAA5B,IAAsC,aAAtC,GAAsDJ,YAAY,CAACK,KAAb,GAAqB,IAA3E,GAAkF,GAArH,CALqC,CAMrC;AACA;;AAEA,cAAIN,KAAJ,EAAW;AACP6D,YAAAA,gBAAgB,CAACtF,KAAjB,CAAuBgC,eAAvB,GAAyCP,KAAzC;AACH;AACJ;;AAED,iBAASgE,sBAAT,CAAgCxD,OAAhC,EAAyCN,SAAzC,EAAoD;AAChD,cAAIO,gBAAgB,GAAGP,SAAS,CAACxB,qBAAV,EAAvB;AACA,cAAIgC,qBAAqB,GAAG5B,IAAI,CAACC,KAAL,CAAW0B,gBAAgB,CAAC9B,KAA5B,CAA5B;AACA,cAAIgC,oBAAoB,GAAG7B,IAAI,CAACC,KAAL,CAAW0B,gBAAgB,CAACN,IAA5B,CAA3B;AACA,cAAIS,cAAc,GAAGJ,OAAO,CAAC9B,qBAAR,EAArB;AACA,cAAImC,mBAAmB,GAAG/B,IAAI,CAACC,KAAL,CAAW6B,cAAc,CAACjC,KAA1B,CAA1B;AACA,cAAImC,kBAAkB,GAAGhC,IAAI,CAACC,KAAL,CAAW6B,cAAc,CAACT,IAA1B,CAAzB;;AACC,cAAIQ,oBAAoB,GAAGG,kBAAvB,IAA6CJ,qBAAqB,GAAGG,mBAAzE,EAA8F;AAC3F,mBAAO,MAAP;AACH,WAFA,MAEM,IAAIC,kBAAkB,GAAGH,oBAAzB,EAA+C;AAClD,mBAAO,MAAP;AACH,WAFM,MAEA,IAAIE,mBAAmB,GAAGH,qBAA1B,EAAiD;AACpD,mBAAO,OAAP;AACH,WAFM,MAEA;AACH,mBAAO,MAAP;AACH;AACJ;AAED;;;;;;;;;AASC,mBAAUK,IAAV,EAAgBC,OAAhB,EAAyB;AACtB,cAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AAC5CD,YAAAA,MAAM,CAAC,CAAC,SAAD,CAAD,EAAcD,OAAd,CAAN;AACH,WAFD,MAEO,IAAI,OAAOG,OAAP,KAAmB,WAAvB,EAAoC;AACvCH,YAAAA,OAAO,CAACG,OAAD,CAAP;AACH,WAFM,MAEA;AACHH,YAAAA,OAAO,CAAED,IAAI,CAACK,UAAL,GAAkB,EAApB,CAAP;AACH;AACJ,SARA,EAQC,IARD,EAQO,UAAUD,OAAV,EAAmB;AACvB,cAAI0D,YAAY,GAAGvI,MAAnB;AACA,cAAIwI,cAAc,GAAGjI,QAArB;AACA,cAAIkI,cAAc,GAAG,WAArB;AACA,cAAIC,YAAY,GAAI,SAApB;AACA,cAAIC,cAAc,GAAI,WAAtB;AACA,cAAIC,kBAAkB,GAAG,eAAzB;AACA,cAAIC,qBAAqB,GAAI,QAAMD,kBAAnC;AACA,cAAIE,wBAAwB,GAAI,WAASF,kBAAzC;AACA,cAAIG,eAAJ,EAAqBC,eAArB;AAEA,cAAIxD,OAAO,GAAG,EAAd;;AACA,cAAIyD,UAAU,GAAG,SAAbA,UAAa,CAASvD,CAAT,EAAYC,EAAZ,EAAgB;AAC7B,iBAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,OAAO,CAACI,MAAxB,GAAiC;AAC7BD,cAAAA,EAAE,GAAGH,OAAO,CAACE,CAAC,EAAF,CAAZ;AACAC,cAAAA,EAAE,GAAGA,EAAE,CAAC/B,SAAH,IAAgB+B,EAArB;AACAA,cAAAA,EAAE,CAACmD,wBAAD,CAAF,CAA8BH,cAA9B,EAA+ChD,EAAE,CAACE,EAAlD,EAAsD,CAAtD;;AACA0C,cAAAA,YAAY,CAACO,wBAAD,CAAZ,CAAwCJ,YAAxC,EAAuD/C,EAAE,CAACG,EAA1D,EAA8D,CAA9D;;AACAyC,cAAAA,YAAY,CAACO,wBAAD,CAAZ,CAAwCL,cAAxC,EAAyD9C,EAAE,CAACI,EAA5D,EAAgE,CAAhE;AACH,aAP4B,CAS7B;;;AACAP,YAAAA,OAAO,GAAG,GAAGrC,KAAH,CAASC,IAAT,CAAcoF,cAAc,CAACxC,sBAAf,CAAsC,YAAtC,CAAd,CAAV;;AACA,iBAAKN,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,OAAO,CAACI,MAAxB,GAAiC;AAC7B,eAAC,UAASD,EAAT,EAAaM,WAAb,EAA0BC,WAA1B,EAAuCC,MAAvC,EAA+CC,QAA/C,EAAyDC,IAAzD,EAA8D;AAC3D,iBAACA,IAAI,GAAGV,EAAE,CAAC/B,SAAH,IAAgB+B,EAAxB,EAA4BkD,qBAA5B,EACIF,cADJ,EAEItC,IAAI,CAACR,EAAL,GAAU,UAAS5C,CAAT,EAAY;AAClB,sBAAI,CAAC0C,EAAE,CAACW,YAAH,CAAgB,aAAhB,CAAD,IACAkC,cAAc,CAACjC,gBAAf,CACItD,CAAC,CAACuD,KADN,EACavD,CAAC,CAACwD,KADf,KAEKJ,IAHT,EAIE;AACEF,oBAAAA,MAAM,GAAG,CAAT;AACAF,oBAAAA,WAAW,GAAGhD,CAAC,CAACyD,OAAhB;AACAR,oBAAAA,WAAW,GAAGjD,CAAC,CAAC0D,OAAhB;AAEA1D,oBAAAA,CAAC,CAAC2D,cAAF;AACH;AACJ,iBAdL,EAcO,CAdP;;AAiBA2B,gBAAAA,YAAY,CAACM,qBAAD,CAAZ,CACIH,YADJ,EACmBrC,IAAI,CAACP,EAAL,GAAU,YAAW;AAACK,kBAAAA,MAAM,GAAG,CAAT;AAAY,iBADrD,EACuD,CADvD;;AAIAoC,gBAAAA,YAAY,CAACM,qBAAD,CAAZ,CACIJ,cADJ,EAEIpC,IAAI,CAACN,EAAL,GAAU,UAAS9C,CAAT,EAAY;AAClB,sBAAIkD,MAAJ,EAAY;AACR,qBAACC,QAAQ,GAAGT,EAAE,CAACS,QAAH,IAAaT,EAAzB,EAA6B3D,UAA7B,IACI+G,eAAe,GAAI,CAAE9C,WAAF,IAAiBA,WAAW,GAAChD,CAAC,CAACyD,OAA/B,CADvB;AAEAN,oBAAAA,QAAQ,CAACS,SAAT,IACImC,eAAe,GAAI,CAAE9C,WAAF,IAAiBA,WAAW,GAACjD,CAAC,CAAC0D,OAA/B,CADvB;;AAEA,wBAAIhB,EAAE,IAAI6C,cAAc,CAAC1B,IAAzB,EAA+B;AAC3B,uBAACV,QAAQ,GAAGoC,cAAc,CAAChI,eAA3B,EAA4CwB,UAA5C,IAA0D+G,eAA1D;AACA3C,sBAAAA,QAAQ,CAACS,SAAT,IAAsBmC,eAAtB;AACH;AACJ;AACJ,iBAbL,EAaO,CAbP;AAeF,eArCF,EAqCIxD,OAAO,CAACE,CAAC,EAAF,CArCX;AAsCH;AACJ,WAnDD;;AAsDA,cAAI8C,cAAc,CAACzB,UAAf,IAA6B,UAAjC,EAA6C;AACzCkC,YAAAA,UAAU;AACb,WAFD,MAEO;AACHV,YAAAA,YAAY,CAACM,qBAAD,CAAZ,CAAqC,MAArC,EAA6CI,UAA7C,EAAyD,CAAzD;AACH;;AAEDpE,UAAAA,OAAO,CAACoE,UAAR,GAAqBA,UAArB;AACH,SAjFA,CAAD;AAkFC,OAxRD;AAyRC;AAIA,GAz1BD;AA01BC","sourcesContent":["if (process.browser){\nwindow.onload = function(){\n\nvar SETTINGS = {\n    navBarTravelling: false,\n    navBarTravelDirection: \"\",\n     navBarTravelDistance: 500\n}\n\nvar colours = {\n    0: \"#867100\",\n    1: \"#7F4200\",\n    2: \"#99813D\",\n    3: \"#40FEFF\",\n    4: \"#14CC99\",\n    5: \"#00BAFF\",\n    6: \"#0082B2\",\n    7: \"#B25D7A\",\n    8: \"#00FF17\",\n    9: \"#006B49\",\n    10: \"#00B27A\",\n    11: \"#996B3D\",\n    12: \"#CC7014\",\n    13: \"#40FF8C\",\n    14: \"#FF3400\",\n    15: \"#ECBB5E\",\n    16: \"#ECBB0C\",\n    17: \"#B9D912\",\n    18: \"#253A93\",\n    19: \"#125FB9\",\n}\n\ndocument.documentElement.classList.remove(\"no-js\");\ndocument.documentElement.classList.add(\"js\");\nconsole.log('lion1');\nconsole.log(document.getElementById(\"pnAdvancerLeft\"));\n// Out advancer buttons\nvar pnAdvancerLeft = document.getElementById(\"pnAdvancerLeft\");\nvar pnAdvancerRight = document.getElementById(\"pnAdvancerRight\");\n// the indicator\nvar pnIndicator = document.getElementById(\"pnIndicator\");\n\nvar pnProductNav = document.getElementById(\"pnProductNav\");\nvar pnProductNavContents = document.getElementById(\"pnProductNavContents\");\n\npnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n\n// Set the indicator\nmoveIndicator(pnProductNav.querySelector(\"[aria-selected=\\\"true\\\"]\"), colours[0]);\n\n// Handle the scroll of the horizontal container\nvar last_known_scroll_position = 0;\nvar ticking = false;\n\nfunction doSomething(scroll_pos) {\n    pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n}\n\npnProductNav.addEventListener(\"scroll\", function() {\n    last_known_scroll_position = window.scrollY;\n    if (!ticking) {\n        window.requestAnimationFrame(function() {\n            doSomething(last_known_scroll_position);\n            ticking = false;\n        });\n    }\n    ticking = true;\n});\n\n\npnAdvancerLeft.addEventListener(\"click\", function() {\n    // If in the middle of a move return\n    if (SETTINGS.navBarTravelling === true) {\n        return;\n    }\n    // If we have content overflowing both sides or on the left\n    if (determineOverflow(pnProductNavContents, pnProductNav) === \"left\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n        // Find how far this panel has been scrolled\n        var availableScrollLeft = pnProductNav.scrollLeft;\n        // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n        if (availableScrollLeft < SETTINGS.navBarTravelDistance * 2) {\n            pnProductNavContents.style.transform = \"translateX(\" + availableScrollLeft + \"px)\";\n        } else {\n            pnProductNavContents.style.transform = \"translateX(\" + SETTINGS.navBarTravelDistance + \"px)\";\n        }\n        // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n        pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n        // Update our settings\n        SETTINGS.navBarTravelDirection = \"left\";\n        SETTINGS.navBarTravelling = true;\n    }\n    // Now update the attribute in the DOM\n    pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n});\n\npnAdvancerRight.addEventListener(\"click\", function() {\n    // If in the middle of a move return\n    if (SETTINGS.navBarTravelling === true) {\n        return;\n    }\n    // If we have content overflowing both sides or on the right\n    if (determineOverflow(pnProductNavContents, pnProductNav) === \"right\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n        // Get the right edge of the container and content\n        var navBarRightEdge = pnProductNavContents.getBoundingClientRect().right;\n        var navBarScrollerRightEdge = pnProductNav.getBoundingClientRect().right;\n        // Now we know how much space we have available to scroll\n        var availableScrollRight = Math.floor(navBarRightEdge - navBarScrollerRightEdge);\n        // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n        if (availableScrollRight < SETTINGS.navBarTravelDistance * 2) {\n            pnProductNavContents.style.transform = \"translateX(-\" + availableScrollRight + \"px)\";\n        } else {\n            pnProductNavContents.style.transform = \"translateX(-\" + SETTINGS.navBarTravelDistance + \"px)\";\n        }\n        // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n        pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n        // Update our settings\n        SETTINGS.navBarTravelDirection = \"right\";\n        SETTINGS.navBarTravelling = true;\n    }\n    // Now update the attribute in the DOM\n    pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n});\n\npnProductNavContents.addEventListener(\n    \"transitionend\",\n    function() {\n        // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform\n        var styleOfTransform = window.getComputedStyle(pnProductNavContents, null);\n        var tr = styleOfTransform.getPropertyValue(\"-webkit-transform\") || styleOfTransform.getPropertyValue(\"transform\");\n        // If there is no transition we want to default to 0 and not null\n        var amount = Math.abs(parseInt(tr.split(\",\")[4]) || 0);\n        pnProductNavContents.style.transform = \"none\";\n        pnProductNavContents.classList.add(\"pn-ProductNav_Contents-no-transition\");\n        // Now lets set the scroll position\n        if (SETTINGS.navBarTravelDirection === \"left\") {\n            pnProductNav.scrollLeft = pnProductNav.scrollLeft - amount;\n        } else {\n            pnProductNav.scrollLeft = pnProductNav.scrollLeft + amount;\n        }\n        SETTINGS.navBarTravelling = false;\n    },\n    false\n);\n\n// Handle setting the currently active link\npnProductNavContents.addEventListener(\"click\", function(e) {\n    var links = [].slice.call(document.querySelectorAll(\".pn-ProductNav_Link\"));\n    links.forEach(function(item) {\n        item.setAttribute(\"aria-selected\", \"false\");\n    })\n    e.target.setAttribute(\"aria-selected\", \"true\");\n    // Pass the clicked item and it's colour to the move indicator function\n    moveIndicator(e.target, colours[links.indexOf(e.target)]);\n});\n\n// var count = 0;\nfunction moveIndicator(item, color) {\n    var textPosition = item.getBoundingClientRect();\n    var container = pnProductNavContents.getBoundingClientRect().left;\n    var distance = textPosition.left - container;\n     var scroll = pnProductNavContents.scrollLeft;\n    pnIndicator.style.transform = \"translateX(\" + (distance + scroll) + \"px) scaleX(\" + textPosition.width * 0.01 + \")\";\n    // count = count += 100;\n    // pnIndicator.style.transform = \"translateX(\" + count + \"px)\";\n    \n    if (color) {\n        pnIndicator.style.backgroundColor = color;\n    }\n}\n\nfunction determineOverflow(content, container) {\n    var containerMetrics = container.getBoundingClientRect();\n    var containerMetricsRight = Math.floor(containerMetrics.right);\n    var containerMetricsLeft = Math.floor(containerMetrics.left);\n    var contentMetrics = content.getBoundingClientRect();\n    var contentMetricsRight = Math.floor(contentMetrics.right);\n    var contentMetricsLeft = Math.floor(contentMetrics.left);\n     if (containerMetricsLeft > contentMetricsLeft && containerMetricsRight < contentMetricsRight) {\n        return \"both\";\n    } else if (contentMetricsLeft < containerMetricsLeft) {\n        return \"left\";\n    } else if (contentMetricsRight > containerMetricsRight) {\n        return \"right\";\n    } else {\n        return \"none\";\n    }\n}\n\n/**\n * @fileoverview dragscroll - scroll area by dragging\n * @version 0.0.8\n * \n * @license MIT, see https://github.com/asvd/dragscroll\n * @copyright 2015 asvd <heliosframework@gmail.com> \n */\n\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== 'undefined') {\n        factory(exports);\n    } else {\n        factory((root.dragscroll = {}));\n    }\n}(this, function (exports) {\n    var _window = window;\n    var _document = document;\n    var mousemove = 'mousemove';\n    var mouseup = 'mouseup';\n    var mousedown = 'mousedown';\n    var EventListener = 'EventListener';\n    var addEventListener = 'add'+EventListener;\n    var removeEventListener = 'remove'+EventListener;\n    var newScrollX, newScrollY;\n\n    var dragged = [];\n    var reset = function(i, el) {\n        for (i = 0; i < dragged.length;) {\n            el = dragged[i++];\n            el = el.container || el;\n            el[removeEventListener](mousedown, el.md, 0);\n            _window[removeEventListener](mouseup, el.mu, 0);\n            _window[removeEventListener](mousemove, el.mm, 0);\n        }\n\n        // cloning into array since HTMLCollection is updated dynamically\n        dragged = [].slice.call(_document.getElementsByClassName('dragscroll'));\n        for (i = 0; i < dragged.length;) {\n            (function(el, lastClientX, lastClientY, pushed, scroller, cont){\n                (cont = el.container || el)[addEventListener](\n                    mousedown,\n                    cont.md = function(e) {\n                        if (!el.hasAttribute('nochilddrag') ||\n                            _document.elementFromPoint(\n                                e.pageX, e.pageY\n                            ) == cont\n                        ) {\n                            pushed = 1;\n                            lastClientX = e.clientX;\n                            lastClientY = e.clientY;\n\n                            e.preventDefault();\n                        }\n                    }, 0\n                );\n\n                _window[addEventListener](\n                    mouseup, cont.mu = function() {pushed = 0;}, 0\n                );\n\n                _window[addEventListener](\n                    mousemove,\n                    cont.mm = function(e) {\n                        if (pushed) {\n                            (scroller = el.scroller||el).scrollLeft -=\n                                newScrollX = (- lastClientX + (lastClientX=e.clientX));\n                            scroller.scrollTop -=\n                                newScrollY = (- lastClientY + (lastClientY=e.clientY));\n                            if (el == _document.body) {\n                                (scroller = _document.documentElement).scrollLeft -= newScrollX;\n                                scroller.scrollTop -= newScrollY;\n                            }\n                        }\n                    }, 0\n                );\n             })(dragged[i++]);\n        }\n    }\n\n      \n    if (_document.readyState == 'complete') {\n        reset();\n    } else {\n        _window[addEventListener]('load', reset, 0);\n    }\n\n    exports.reset = reset;\n}));\n\n\n\n\n\nif (process.browser){\nwindow.onload = function(){\n\nvar SETTINGSStore = {\n    navBarTravellingStore: false,\n    navBarTravelDirectionStore: \"\",\n    navBarTravelDistanceStore: 250\n}\n\nvar coloursStore = {\n    0: \"#867100\",\n    1: \"#7F4200\",\n    2: \"#99813D\",\n    3: \"#40FEFF\",\n    4: \"#14CC99\",\n    5: \"#00BAFF\",\n    6: \"#0082B2\",\n    7: \"#B25D7A\",\n    8: \"#00FF17\",\n    9: \"#006B49\",\n    10: \"#00B27A\",\n    11: \"#996B3D\",\n    12: \"#CC7014\",\n    13: \"#40FF8C\",\n    14: \"#FF3400\",\n    15: \"#ECBB5E\",\n    16: \"#ECBB0C\",\n    17: \"#B9D912\",\n    18: \"#253A93\",\n    19: \"#125FB9\",\n}\n\ndocument.documentElement.classList.remove(\"no-js\");\ndocument.documentElement.classList.add(\"js\");\nconsole.log('lion2');\nconsole.log(document.getElementById(\"pnAdvancerLeftStore\"));\n// Out advancer buttons\nvar pnAdvancerLeftStore = document.getElementById(\"pnAdvancerLeftStore\");\nvar pnAdvancerRightStore = document.getElementById(\"pnAdvancerRightStore\");\n// the indicator\nvar pnIndicatorStore = document.getElementById(\"pnIndicatorStore\");\n\nvar pnProductNavStore = document.getElementById(\"pnProductNavStore\");\nvar pnProductNavContentsStore = document.getElementById(\"pnProductNavContentsStore\");\n\npnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n\n// Set the indicator\nmoveIndicatorStore(pnProductNavStore.querySelector(\"[aria-selected=\\\"true\\\"]\"), coloursStore[0]);\n\n// Handle the scroll of the horizontal container\nvar last_known_scroll_positionStore = 0;\nvar tickingStore = false;\n\nfunction doSomethingStore(scroll_pos) {\n    pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n}\n\npnProductNavStore.addEventListener(\"scroll\", function() {\n    last_known_scroll_positionStore = window.scrollY;\n    if (!tickingStore) {\n        window.requestAnimationFrame(function() {\n            doSomethingStore(last_known_scroll_positionStore);\n            tickingStore = false;\n        });\n    }\n    tickingStore = true;\n});\n\n\npnAdvancerLeftStore.addEventListener(\"click\", function() {\n    // If in the middle of a move return\n    if (SETTINGSStore.navBarTravellingStore === true) {\n        return;\n    }\n    // If we have content overflowing both sides or on the left\n    if (determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"left\" || determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"both\") {\n        // Find how far this panel has been scrolled\n        var availableScrollLeftStore = pnProductNavStore.scrollLeft;\n        // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settingsStore\n        if (availableScrollLeftStore < SETTINGSStore.navBarTravelDistanceStore * 2) {\n            pnProductNavContentsStore.style.transform = \"translateX(\" + availableScrollLeftStore + \"px)\";\n        } else {\n            pnProductNavContentsStore.style.transform = \"translateX(\" + SETTINGSStore.navBarTravelDistanceStore + \"px)\";\n        }\n        // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n        pnProductNavContentsStore.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n        // Update our settingsStore\n        SETTINGSStore.navBarTravelDirectionStore = \"left\";\n        SETTINGSStore.navBarTravellingStore = true;\n    }\n    // Now update the attribute in the DOM\n    pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n});\n\npnAdvancerRightStore.addEventListener(\"click\", function() {\n    // If in the middle of a move return\n    if (SETTINGSStore.navBarTravellingStore === true) {\n        return;\n    }\n    // If we have content overflowing both sides or on the right\n    if (determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"right\" || determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"both\") {\n        // Get the right edge of the container and content\n        var navBarRightEdgeStore = pnProductNavContentsStore.getBoundingClientRect().right;\n        var navBarScrollerRightEdgeStore = pnProductNavStore.getBoundingClientRect().right;\n        // Now we know how much space we have available to scroll\n        var availableScrollRightStore = Math.floor(navBarRightEdgeStore - navBarScrollerRightEdgeStore);\n        // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settingsStore\n        if (availableScrollRightStore < SETTINGSStore.navBarTravelDistanceStore * 2) {\n            pnProductNavContentsStore.style.transform = \"translateX(-\" + availableScrollRightStore + \"px)\";\n        } else {\n            pnProductNavContentsStore.style.transform = \"translateX(-\" + SETTINGSStore.navBarTravelDistanceStore + \"px)\";\n        }\n        // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n        pnProductNavContentsStore.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n        // Update our settingsStore\n        SETTINGSStore.navBarTravelDirectionStore = \"right\";\n        SETTINGSStore.navBarTravellingStore = true;\n    }\n    // Now update the attribute in the DOM\n    pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n});\n\npnProductNavContentsStore.addEventListener(\n    \"transitionend\",\n    function() {\n        // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform\n        var styleOfTransformStore = window.getComputedStyle(pnProductNavContentsStore, null);\n        var trStore = styleOfTransformStore.getPropertyValue(\"-webkit-transform\") || styleOfTransformStore.getPropertyValue(\"transform\");\n        // If there is no transition we want to default to 0 and not null\n        var amountStore = Math.abs(parseInt(trStore.split(\",\")[4]) || 0);\n        pnProductNavContentsStore.style.transform = \"none\";\n        pnProductNavContentsStore.classList.add(\"pn-ProductNav_Contents-no-transition\");\n        // Now lets set the scroll position\n        if (SETTINGSStore.navBarTravelDirectionStore === \"left\") {\n            pnProductNavStore.scrollLeft = pnProductNavStore.scrollLeft - amountStore;\n        } else {\n            pnProductNavStore.scrollLeft = pnProductNavStore.scrollLeft + amountStore;\n        }\n        SETTINGSStore.navBarTravellingStore = false;\n    },\n    false\n);\n\n// Handle setting the currently active link\npnProductNavContentsStore.addEventListener(\"click\", function(e) {\n    var linksStore = [].slice.call(document.querySelectorAll(\".pn-ProductNav_LinkStore\"));\n    linksStore.forEach(function(item) {\n        item.setAttribute(\"aria-selected\", \"false\");\n    })\n    e.target.setAttribute(\"aria-selected\", \"true\");\n    // Pass the clicked item and it's colour to the move indicator function\n    moveIndicatorStore(e.target, coloursStore[linksStore.indexOf(e.target)]);\n});\n\n// var count = 0;\nfunction moveIndicatorStore(item, color) {\n    var textPosition = item.getBoundingClientRect();\n    var container = pnProductNavContentsStore.getBoundingClientRect().left;\n    var distance = textPosition.left - container;\n     var scroll = pnProductNavContentsStore.scrollLeft;\n    pnIndicatorStore.style.transform = \"translateX(\" + (distance + scroll) + \"px) scaleX(\" + textPosition.width * 0.01 + \")\";\n    // count = count += 100;\n    // pnIndicator.style.transform = \"translateX(\" + count + \"px)\";\n    \n    if (color) {\n        pnIndicatorStore.style.backgroundColor = color;\n    }\n}\n\nfunction determineOverflowStore(content, container) {\n    var containerMetrics = container.getBoundingClientRect();\n    var containerMetricsRight = Math.floor(containerMetrics.right);\n    var containerMetricsLeft = Math.floor(containerMetrics.left);\n    var contentMetrics = content.getBoundingClientRect();\n    var contentMetricsRight = Math.floor(contentMetrics.right);\n    var contentMetricsLeft = Math.floor(contentMetrics.left);\n     if (containerMetricsLeft > contentMetricsLeft && containerMetricsRight < contentMetricsRight) {\n        return \"both\";\n    } else if (contentMetricsLeft < containerMetricsLeft) {\n        return \"left\";\n    } else if (contentMetricsRight > containerMetricsRight) {\n        return \"right\";\n    } else {\n        return \"none\";\n    }\n}\n\n/**\n * @fileoverview dragscroll - scroll area by dragging\n * @version 0.0.8\n * \n * @license MIT, see https://github.com/asvd/dragscroll\n * @copyright 2015 asvd <heliosframework@gmail.com> \n */\n\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== 'undefined') {\n        factory(exports);\n    } else {\n        factory((root.dragscroll = {}));\n    }\n}(this, function (exports) {\n    var _windowStore = window;\n    var _documentStore = document;\n    var mousemoveStore = 'mousemove';\n    var mouseupStore  = 'mouseup';\n    var mousedownStore  = 'mousedown';\n    var EventListenerStore = 'EventListener';\n    var addEventListenerStore  = 'add'+EventListenerStore;\n    var removeEventListenerStore  = 'remove'+EventListenerStore;\n    var newScrollXStore, newScrollYStore;\n\n    var dragged = [];\n    var resetStore = function(i, el) {\n        for (i = 0; i < dragged.length;) {\n            el = dragged[i++];\n            el = el.container || el;\n            el[removeEventListenerStore ](mousedownStore , el.md, 0);\n            _windowStore[removeEventListenerStore ](mouseupStore , el.mu, 0);\n            _windowStore[removeEventListenerStore ](mousemoveStore , el.mm, 0);\n        }\n\n        // cloning into array since HTMLCollection is updated dynamically\n        dragged = [].slice.call(_documentStore.getElementsByClassName('dragscroll'));\n        for (i = 0; i < dragged.length;) {\n            (function(el, lastClientX, lastClientY, pushed, scroller, cont){\n                (cont = el.container || el)[addEventListenerStore ](\n                    mousedownStore ,\n                    cont.md = function(e) {\n                        if (!el.hasAttribute('nochilddrag') ||\n                            _documentStore.elementFromPoint(\n                                e.pageX, e.pageY\n                            ) == cont\n                        ) {\n                            pushed = 1;\n                            lastClientX = e.clientX;\n                            lastClientY = e.clientY;\n\n                            e.preventDefault();\n                        }\n                    }, 0\n                );\n\n                _windowStore[addEventListenerStore ](\n                    mouseupStore , cont.mu = function() {pushed = 0;}, 0\n                );\n\n                _windowStore[addEventListenerStore ](\n                    mousemoveStore ,\n                    cont.mm = function(e) {\n                        if (pushed) {\n                            (scroller = el.scroller||el).scrollLeft -=\n                                newScrollXStore = (- lastClientX + (lastClientX=e.clientX));\n                            scroller.scrollTop -=\n                                newScrollYStore = (- lastClientY + (lastClientY=e.clientY));\n                            if (el == _documentStore.body) {\n                                (scroller = _documentStore.documentElement).scrollLeft -= newScrollXStore;\n                                scroller.scrollTop -= newScrollYStore;\n                            }\n                        }\n                    }, 0\n                );\n             })(dragged[i++]);\n        }\n    }\n\n      \n    if (_documentStore.readyState == 'complete') {\n        resetStore();\n    } else {\n        _windowStore[addEventListenerStore ]('load', resetStore, 0);\n    }\n\n    exports.resetStore = resetStore;\n}));\n}\n}\n\n\n\nif (process.browser){\nwindow.onload = function(){\n\nvar SETTINGSStore = {\n    navBarTravellingStore: false,\n    navBarTravelDirectionStore: \"\",\n    navBarTravelDistanceStore: 250\n}\n\nvar coloursStore = {\n    0: \"#867100\",\n    1: \"#7F4200\",\n    2: \"#99813D\",\n    3: \"#40FEFF\",\n    4: \"#14CC99\",\n    5: \"#00BAFF\",\n    6: \"#0082B2\",\n    7: \"#B25D7A\",\n    8: \"#00FF17\",\n    9: \"#006B49\",\n    10: \"#00B27A\",\n    11: \"#996B3D\",\n    12: \"#CC7014\",\n    13: \"#40FF8C\",\n    14: \"#FF3400\",\n    15: \"#ECBB5E\",\n    16: \"#ECBB0C\",\n    17: \"#B9D912\",\n    18: \"#253A93\",\n    19: \"#125FB9\",\n}\n\ndocument.documentElement.classList.remove(\"no-js\");\ndocument.documentElement.classList.add(\"js\");\nconsole.log('lion2');\nconsole.log(document.getElementById(\"pnAdvancerLeftStore\"));\n// Out advancer buttons\nvar pnAdvancerLeftStore = document.getElementById(\"pnAdvancerLeftStore\");\nvar pnAdvancerRightStore = document.getElementById(\"pnAdvancerRightStore\");\n// the indicator\nvar pnIndicatorStore = document.getElementById(\"pnIndicatorStore\");\n\nvar pnProductNavStore = document.getElementById(\"pnProductNavStore\");\nvar pnProductNavContentsStore = document.getElementById(\"pnProductNavContentsStore\");\n\npnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n\n// Set the indicator\nmoveIndicatorStore(pnProductNavStore.querySelector(\"[aria-selected=\\\"true\\\"]\"), coloursStore[0]);\n\n// Handle the scroll of the horizontal container\nvar last_known_scroll_positionStore = 0;\nvar tickingStore = false;\n\nfunction doSomethingStore(scroll_pos) {\n    pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n}\n\npnProductNavStore.addEventListener(\"scroll\", function() {\n    last_known_scroll_positionStore = window.scrollY;\n    if (!tickingStore) {\n        window.requestAnimationFrame(function() {\n            doSomethingStore(last_known_scroll_positionStore);\n            tickingStore = false;\n        });\n    }\n    tickingStore = true;\n});\n\n\npnAdvancerLeftStore.addEventListener(\"click\", function() {\n    // If in the middle of a move return\n    if (SETTINGSStore.navBarTravellingStore === true) {\n        return;\n    }\n    // If we have content overflowing both sides or on the left\n    if (determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"left\" || determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"both\") {\n        // Find how far this panel has been scrolled\n        var availableScrollLeftStore = pnProductNavStore.scrollLeft;\n        // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settingsStore\n        if (availableScrollLeftStore < SETTINGSStore.navBarTravelDistanceStore * 2) {\n            pnProductNavContentsStore.style.transform = \"translateX(\" + availableScrollLeftStore + \"px)\";\n        } else {\n            pnProductNavContentsStore.style.transform = \"translateX(\" + SETTINGSStore.navBarTravelDistanceStore + \"px)\";\n        }\n        // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n        pnProductNavContentsStore.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n        // Update our settingsStore\n        SETTINGSStore.navBarTravelDirectionStore = \"left\";\n        SETTINGSStore.navBarTravellingStore = true;\n    }\n    // Now update the attribute in the DOM\n    pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n});\n\npnAdvancerRightStore.addEventListener(\"click\", function() {\n    // If in the middle of a move return\n    if (SETTINGSStore.navBarTravellingStore === true) {\n        return;\n    }\n    // If we have content overflowing both sides or on the right\n    if (determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"right\" || determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"both\") {\n        // Get the right edge of the container and content\n        var navBarRightEdgeStore = pnProductNavContentsStore.getBoundingClientRect().right;\n        var navBarScrollerRightEdgeStore = pnProductNavStore.getBoundingClientRect().right;\n        // Now we know how much space we have available to scroll\n        var availableScrollRightStore = Math.floor(navBarRightEdgeStore - navBarScrollerRightEdgeStore);\n        // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settingsStore\n        if (availableScrollRightStore < SETTINGSStore.navBarTravelDistanceStore * 2) {\n            pnProductNavContentsStore.style.transform = \"translateX(-\" + availableScrollRightStore + \"px)\";\n        } else {\n            pnProductNavContentsStore.style.transform = \"translateX(-\" + SETTINGSStore.navBarTravelDistanceStore + \"px)\";\n        }\n        // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n        pnProductNavContentsStore.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n        // Update our settingsStore\n        SETTINGSStore.navBarTravelDirectionStore = \"right\";\n        SETTINGSStore.navBarTravellingStore = true;\n    }\n    // Now update the attribute in the DOM\n    pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n});\n\npnProductNavContentsStore.addEventListener(\n    \"transitionend\",\n    function() {\n        // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform\n        var styleOfTransformStore = window.getComputedStyle(pnProductNavContentsStore, null);\n        var trStore = styleOfTransformStore.getPropertyValue(\"-webkit-transform\") || styleOfTransformStore.getPropertyValue(\"transform\");\n        // If there is no transition we want to default to 0 and not null\n        var amountStore = Math.abs(parseInt(trStore.split(\",\")[4]) || 0);\n        pnProductNavContentsStore.style.transform = \"none\";\n        pnProductNavContentsStore.classList.add(\"pn-ProductNav_Contents-no-transition\");\n        // Now lets set the scroll position\n        if (SETTINGSStore.navBarTravelDirectionStore === \"left\") {\n            pnProductNavStore.scrollLeft = pnProductNavStore.scrollLeft - amountStore;\n        } else {\n            pnProductNavStore.scrollLeft = pnProductNavStore.scrollLeft + amountStore;\n        }\n        SETTINGSStore.navBarTravellingStore = false;\n    },\n    false\n);\n\n// Handle setting the currently active link\npnProductNavContentsStore.addEventListener(\"click\", function(e) {\n    var linksStore = [].slice.call(document.querySelectorAll(\".pn-ProductNav_LinkStore\"));\n    linksStore.forEach(function(item) {\n        item.setAttribute(\"aria-selected\", \"false\");\n    })\n    e.target.setAttribute(\"aria-selected\", \"true\");\n    // Pass the clicked item and it's colour to the move indicator function\n    moveIndicatorStore(e.target, coloursStore[linksStore.indexOf(e.target)]);\n});\n\n// var count = 0;\nfunction moveIndicatorStore(item, color) {\n    var textPosition = item.getBoundingClientRect();\n    var container = pnProductNavContentsStore.getBoundingClientRect().left;\n    var distance = textPosition.left - container;\n     var scroll = pnProductNavContentsStore.scrollLeft;\n    pnIndicatorStore.style.transform = \"translateX(\" + (distance + scroll) + \"px) scaleX(\" + textPosition.width * 0.01 + \")\";\n    // count = count += 100;\n    // pnIndicator.style.transform = \"translateX(\" + count + \"px)\";\n    \n    if (color) {\n        pnIndicatorStore.style.backgroundColor = color;\n    }\n}\n\nfunction determineOverflowStore(content, container) {\n    var containerMetrics = container.getBoundingClientRect();\n    var containerMetricsRight = Math.floor(containerMetrics.right);\n    var containerMetricsLeft = Math.floor(containerMetrics.left);\n    var contentMetrics = content.getBoundingClientRect();\n    var contentMetricsRight = Math.floor(contentMetrics.right);\n    var contentMetricsLeft = Math.floor(contentMetrics.left);\n     if (containerMetricsLeft > contentMetricsLeft && containerMetricsRight < contentMetricsRight) {\n        return \"both\";\n    } else if (contentMetricsLeft < containerMetricsLeft) {\n        return \"left\";\n    } else if (contentMetricsRight > containerMetricsRight) {\n        return \"right\";\n    } else {\n        return \"none\";\n    }\n}\n\n/**\n * @fileoverview dragscroll - scroll area by dragging\n * @version 0.0.8\n * \n * @license MIT, see https://github.com/asvd/dragscroll\n * @copyright 2015 asvd <heliosframework@gmail.com> \n */\n\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== 'undefined') {\n        factory(exports);\n    } else {\n        factory((root.dragscroll = {}));\n    }\n}(this, function (exports) {\n    var _windowStore = window;\n    var _documentStore = document;\n    var mousemoveStore = 'mousemove';\n    var mouseupStore  = 'mouseup';\n    var mousedownStore  = 'mousedown';\n    var EventListenerStore = 'EventListener';\n    var addEventListenerStore  = 'add'+EventListenerStore;\n    var removeEventListenerStore  = 'remove'+EventListenerStore;\n    var newScrollXStore, newScrollYStore;\n\n    var dragged = [];\n    var resetStore = function(i, el) {\n        for (i = 0; i < dragged.length;) {\n            el = dragged[i++];\n            el = el.container || el;\n            el[removeEventListenerStore ](mousedownStore , el.md, 0);\n            _windowStore[removeEventListenerStore ](mouseupStore , el.mu, 0);\n            _windowStore[removeEventListenerStore ](mousemoveStore , el.mm, 0);\n        }\n\n        // cloning into array since HTMLCollection is updated dynamically\n        dragged = [].slice.call(_documentStore.getElementsByClassName('dragscroll'));\n        for (i = 0; i < dragged.length;) {\n            (function(el, lastClientX, lastClientY, pushed, scroller, cont){\n                (cont = el.container || el)[addEventListenerStore ](\n                    mousedownStore ,\n                    cont.md = function(e) {\n                        if (!el.hasAttribute('nochilddrag') ||\n                            _documentStore.elementFromPoint(\n                                e.pageX, e.pageY\n                            ) == cont\n                        ) {\n                            pushed = 1;\n                            lastClientX = e.clientX;\n                            lastClientY = e.clientY;\n\n                            e.preventDefault();\n                        }\n                    }, 0\n                );\n\n                _windowStore[addEventListenerStore ](\n                    mouseupStore , cont.mu = function() {pushed = 0;}, 0\n                );\n\n                _windowStore[addEventListenerStore ](\n                    mousemoveStore ,\n                    cont.mm = function(e) {\n                        if (pushed) {\n                            (scroller = el.scroller||el).scrollLeft -=\n                                newScrollXStore = (- lastClientX + (lastClientX=e.clientX));\n                            scroller.scrollTop -=\n                                newScrollYStore = (- lastClientY + (lastClientY=e.clientY));\n                            if (el == _documentStore.body) {\n                                (scroller = _documentStore.documentElement).scrollLeft -= newScrollXStore;\n                                scroller.scrollTop -= newScrollYStore;\n                            }\n                        }\n                    }, 0\n                );\n             })(dragged[i++]);\n        }\n    }\n\n      \n    if (_documentStore.readyState == 'complete') {\n        resetStore();\n    } else {\n        _windowStore[addEventListenerStore ]('load', resetStore, 0);\n    }\n\n    exports.resetStore = resetStore;\n}));\n}\n}\n\n\n\n}\n}"]},"metadata":{},"sourceType":"module"}