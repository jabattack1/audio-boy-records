{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/peterhahn/src/new/audio-boy/components/news-grid-scroll.js\";\nimport React from 'react';\nimport Head from 'next/head';\nimport styled from 'styled-components';\nimport News from './news.js';\nimport '../scroll.js';\nimport '../css/normalize.css';\nimport '../css/skeleton.css';\nimport '../css/style.css';\n\nvar NewsGridScroll =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NewsGridScroll, _React$Component);\n\n  function NewsGridScroll() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewsGridScroll);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewsGridScroll)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {});\n\n    return _this;\n  }\n\n  _createClass(NewsGridScroll, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"pn-ProductNav_Wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        id: \"pnProductNav\",\n        className: \"pn-ProductNav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"pnProductNavContents\",\n        className: \"pn-ProductNav_Contents\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, this.props.news.map(function (post, i) {\n        return React.createElement(News, _extends({}, _this2.props, {\n          key: i,\n          i: i,\n          news: post,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }));\n      }), React.createElement(\"span\", {\n        id: \"pnIndicator\",\n        className: \"pn-ProductNav_Indicator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        id: \"pnAdvancerLeft\",\n        className: \"pn-Advancer pn-Advancer_Left\",\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"leftArrow\",\n        src: \"https://i.imgur.com/BZ7AKsn.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        id: \"pnAdvancerRight\",\n        className: \"pn-Advancer pn-Advancer_Right\",\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"rightArrow\",\n        src: \"https://i.imgur.com/2K5BYIz.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.onpopstate = function () {\n        if (process.browser) {\n          window.onload = function () {\n            var SETTINGS = {\n              navBarTravelling: false,\n              navBarTravelDirection: \"\",\n              navBarTravelDistance: 500\n            };\n            var colours = {\n              0: \"#867100\",\n              1: \"#7F4200\",\n              2: \"#99813D\",\n              3: \"#40FEFF\",\n              4: \"#14CC99\",\n              5: \"#00BAFF\",\n              6: \"#0082B2\",\n              7: \"#B25D7A\",\n              8: \"#00FF17\",\n              9: \"#006B49\",\n              10: \"#00B27A\",\n              11: \"#996B3D\",\n              12: \"#CC7014\",\n              13: \"#40FF8C\",\n              14: \"#FF3400\",\n              15: \"#ECBB5E\",\n              16: \"#ECBB0C\",\n              17: \"#B9D912\",\n              18: \"#253A93\",\n              19: \"#125FB9\"\n            };\n            document.documentElement.classList.remove(\"no-js\");\n            document.documentElement.classList.add(\"js\");\n            console.log('lion1');\n            console.log(document.getElementById(\"pnAdvancerLeft\")); // Out advancer buttons\n\n            var pnAdvancerLeft = document.getElementById(\"pnAdvancerLeft\");\n            var pnAdvancerRight = document.getElementById(\"pnAdvancerRight\"); // the indicator\n\n            var pnIndicator = document.getElementById(\"pnIndicator\");\n            var pnProductNav = document.getElementById(\"pnProductNav\");\n            var pnProductNavContents = document.getElementById(\"pnProductNavContents\");\n            pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav)); // Set the indicator\n\n            moveIndicator(pnProductNav.querySelector(\"[aria-selected=\\\"true\\\"]\"), colours[0]); // Handle the scroll of the horizontal container\n\n            var last_known_scroll_position = 0;\n            var ticking = false;\n\n            function doSomething(scroll_pos) {\n              pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n            }\n\n            pnProductNav.addEventListener(\"scroll\", function () {\n              last_known_scroll_position = window.scrollY;\n\n              if (!ticking) {\n                window.requestAnimationFrame(function () {\n                  doSomething(last_known_scroll_position);\n                  ticking = false;\n                });\n              }\n\n              ticking = true;\n            });\n            pnAdvancerLeft.addEventListener(\"click\", function () {\n              console.log('sex'); // If in the middle of a move return\n\n              if (SETTINGS.navBarTravelling === true) {\n                return;\n              } // If we have content overflowing both sides or on the left\n\n\n              if (determineOverflow(pnProductNavContents, pnProductNav) === \"left\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n                // Find how far this panel has been scrolled\n                var availableScrollLeft = pnProductNav.scrollLeft; // If the space available is less than two lots of our desired distance, just move the whole amount\n                // otherwise, move by the amount in the settings\n\n                if (availableScrollLeft < SETTINGS.navBarTravelDistance * 2) {\n                  pnProductNavContents.style.transform = \"translateX(\" + availableScrollLeft + \"px)\";\n                } else {\n                  pnProductNavContents.style.transform = \"translateX(\" + SETTINGS.navBarTravelDistance + \"px)\";\n                } // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\n\n                pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\"); // Update our settings\n\n                SETTINGS.navBarTravelDirection = \"left\";\n                SETTINGS.navBarTravelling = true;\n              } // Now update the attribute in the DOM\n\n\n              pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n            });\n            pnAdvancerRight.addEventListener(\"click\", function () {\n              console.log('slave'); // If in the middle of a move return\n\n              if (SETTINGS.navBarTravelling === true) {\n                return;\n              } // If we have content overflowing both sides or on the right\n\n\n              if (determineOverflow(pnProductNavContents, pnProductNav) === \"right\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n                // Get the right edge of the container and content\n                var navBarRightEdge = pnProductNavContents.getBoundingClientRect().right;\n                var navBarScrollerRightEdge = pnProductNav.getBoundingClientRect().right; // Now we know how much space we have available to scroll\n\n                var availableScrollRight = Math.floor(navBarRightEdge - navBarScrollerRightEdge); // If the space available is less than two lots of our desired distance, just move the whole amount\n                // otherwise, move by the amount in the settings\n\n                if (availableScrollRight < SETTINGS.navBarTravelDistance * 2) {\n                  pnProductNavContents.style.transform = \"translateX(-\" + availableScrollRight + \"px)\";\n                } else {\n                  pnProductNavContents.style.transform = \"translateX(-\" + SETTINGS.navBarTravelDistance + \"px)\";\n                } // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\n\n                pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\"); // Update our settings\n\n                SETTINGS.navBarTravelDirection = \"right\";\n                SETTINGS.navBarTravelling = true;\n              } // Now update the attribute in the DOM\n\n\n              pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n            });\n            pnProductNavContents.addEventListener(\"transitionend\", function () {\n              // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform\n              var styleOfTransform = window.getComputedStyle(pnProductNavContents, null);\n              var tr = styleOfTransform.getPropertyValue(\"-webkit-transform\") || styleOfTransform.getPropertyValue(\"transform\"); // If there is no transition we want to default to 0 and not null\n\n              var amount = Math.abs(_parseInt(tr.split(\",\")[4]) || 0);\n              pnProductNavContents.style.transform = \"none\";\n              pnProductNavContents.classList.add(\"pn-ProductNav_Contents-no-transition\"); // Now lets set the scroll position\n\n              if (SETTINGS.navBarTravelDirection === \"left\") {\n                pnProductNav.scrollLeft = pnProductNav.scrollLeft - amount;\n              } else {\n                pnProductNav.scrollLeft = pnProductNav.scrollLeft + amount;\n              }\n\n              SETTINGS.navBarTravelling = false;\n            }, false); // Handle setting the currently active link\n\n            pnProductNavContents.addEventListener(\"click\", function (e) {\n              var links = [].slice.call(document.querySelectorAll(\".pn-ProductNav_Link\"));\n              links.forEach(function (item) {\n                item.setAttribute(\"aria-selected\", \"false\");\n              });\n              e.target.setAttribute(\"aria-selected\", \"true\"); // Pass the clicked item and it's colour to the move indicator function\n\n              moveIndicator(e.target, colours[links.indexOf(e.target)]);\n            }); // var count = 0;\n\n            function moveIndicator(item, color) {\n              var textPosition = item.getBoundingClientRect();\n              var container = pnProductNavContents.getBoundingClientRect().left;\n              var distance = textPosition.left - container;\n              var scroll = pnProductNavContents.scrollLeft;\n              pnIndicator.style.transform = \"translateX(\" + (distance + scroll) + \"px) scaleX(\" + textPosition.width * 0.01 + \")\"; // count = count += 100;\n              // pnIndicator.style.transform = \"translateX(\" + count + \"px)\";\n\n              if (color) {\n                pnIndicator.style.backgroundColor = color;\n              }\n            }\n\n            function determineOverflow(content, container) {\n              var containerMetrics = container.getBoundingClientRect();\n              var containerMetricsRight = Math.floor(containerMetrics.right);\n              var containerMetricsLeft = Math.floor(containerMetrics.left);\n              var contentMetrics = content.getBoundingClientRect();\n              var contentMetricsRight = Math.floor(contentMetrics.right);\n              var contentMetricsLeft = Math.floor(contentMetrics.left);\n\n              if (containerMetricsLeft > contentMetricsLeft && containerMetricsRight < contentMetricsRight) {\n                return \"both\";\n              } else if (contentMetricsLeft < containerMetricsLeft) {\n                return \"left\";\n              } else if (contentMetricsRight > containerMetricsRight) {\n                return \"right\";\n              } else {\n                return \"none\";\n              }\n            }\n            /**\n             * @fileoverview dragscroll - scroll area by dragging\n             * @version 0.0.8\n             * \n             * @license MIT, see https://github.com/asvd/dragscroll\n             * @copyright 2015 asvd <heliosframework@gmail.com> \n             */\n\n\n            (function (root, factory) {\n              if (typeof define === 'function' && define.amd) {\n                define(['exports'], factory);\n              } else if (typeof exports !== 'undefined') {\n                factory(exports);\n              } else {\n                factory(root.dragscroll = {});\n              }\n            })(this, function (exports) {\n              var _window = window;\n              var _document = document;\n              var mousemove = 'mousemove';\n              var mouseup = 'mouseup';\n              var mousedown = 'mousedown';\n              var EventListener = 'EventListener';\n              var addEventListener = 'add' + EventListener;\n              var removeEventListener = 'remove' + EventListener;\n              var newScrollX, newScrollY;\n              var dragged = [];\n\n              var reset = function reset(i, el) {\n                for (i = 0; i < dragged.length;) {\n                  el = dragged[i++];\n                  el = el.container || el;\n                  el[removeEventListener](mousedown, el.md, 0);\n\n                  _window[removeEventListener](mouseup, el.mu, 0);\n\n                  _window[removeEventListener](mousemove, el.mm, 0);\n                } // cloning into array since HTMLCollection is updated dynamically\n\n\n                dragged = [].slice.call(_document.getElementsByClassName('dragscroll'));\n\n                for (i = 0; i < dragged.length;) {\n                  (function (el, lastClientX, lastClientY, pushed, scroller, cont) {\n                    (cont = el.container || el)[addEventListener](mousedown, cont.md = function (e) {\n                      if (!el.hasAttribute('nochilddrag') || _document.elementFromPoint(e.pageX, e.pageY) == cont) {\n                        pushed = 1;\n                        lastClientX = e.clientX;\n                        lastClientY = e.clientY;\n                        e.preventDefault();\n                      }\n                    }, 0);\n\n                    _window[addEventListener](mouseup, cont.mu = function () {\n                      pushed = 0;\n                    }, 0);\n\n                    _window[addEventListener](mousemove, cont.mm = function (e) {\n                      if (pushed) {\n                        (scroller = el.scroller || el).scrollLeft -= newScrollX = -lastClientX + (lastClientX = e.clientX);\n                        scroller.scrollTop -= newScrollY = -lastClientY + (lastClientY = e.clientY);\n\n                        if (el == _document.body) {\n                          (scroller = _document.documentElement).scrollLeft -= newScrollX;\n                          scroller.scrollTop -= newScrollY;\n                        }\n                      }\n                    }, 0);\n                  })(dragged[i++]);\n                }\n              };\n\n              if (_document.readyState == 'complete') {\n                reset();\n              } else {\n                _window[addEventListener]('load', reset, 0);\n              }\n\n              exports.reset = reset;\n            });\n          };\n        }\n\n        if (process.browser) {\n          window.onbeforeunload = function () {\n            var SETTINGS = {\n              navBarTravelling: false,\n              navBarTravelDirection: \"\",\n              navBarTravelDistance: 500\n            };\n            var colours = {\n              0: \"#867100\",\n              1: \"#7F4200\",\n              2: \"#99813D\",\n              3: \"#40FEFF\",\n              4: \"#14CC99\",\n              5: \"#00BAFF\",\n              6: \"#0082B2\",\n              7: \"#B25D7A\",\n              8: \"#00FF17\",\n              9: \"#006B49\",\n              10: \"#00B27A\",\n              11: \"#996B3D\",\n              12: \"#CC7014\",\n              13: \"#40FF8C\",\n              14: \"#FF3400\",\n              15: \"#ECBB5E\",\n              16: \"#ECBB0C\",\n              17: \"#B9D912\",\n              18: \"#253A93\",\n              19: \"#125FB9\"\n            };\n            document.documentElement.classList.remove(\"no-js\");\n            document.documentElement.classList.add(\"js\");\n            console.log('lion1');\n            console.log(document.getElementById(\"pnAdvancerLeft\")); // Out advancer buttons\n\n            var pnAdvancerLeft = document.getElementById(\"pnAdvancerLeft\");\n            var pnAdvancerRight = document.getElementById(\"pnAdvancerRight\"); // the indicator\n\n            var pnIndicator = document.getElementById(\"pnIndicator\");\n            var pnProductNav = document.getElementById(\"pnProductNav\");\n            var pnProductNavContents = document.getElementById(\"pnProductNavContents\");\n            pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav)); // Set the indicator\n\n            moveIndicator(pnProductNav.querySelector(\"[aria-selected=\\\"true\\\"]\"), colours[0]); // Handle the scroll of the horizontal container\n\n            var last_known_scroll_position = 0;\n            var ticking = false;\n\n            function doSomething(scroll_pos) {\n              pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n            }\n\n            pnProductNav.addEventListener(\"scroll\", function () {\n              last_known_scroll_position = window.scrollY;\n\n              if (!ticking) {\n                window.requestAnimationFrame(function () {\n                  doSomething(last_known_scroll_position);\n                  ticking = false;\n                });\n              }\n\n              ticking = true;\n            });\n            pnAdvancerLeft.addEventListener(\"click\", function () {\n              // If in the middle of a move return\n              if (SETTINGS.navBarTravelling === true) {\n                return;\n              } // If we have content overflowing both sides or on the left\n\n\n              if (determineOverflow(pnProductNavContents, pnProductNav) === \"left\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n                // Find how far this panel has been scrolled\n                var availableScrollLeft = pnProductNav.scrollLeft; // If the space available is less than two lots of our desired distance, just move the whole amount\n                // otherwise, move by the amount in the settings\n\n                if (availableScrollLeft < SETTINGS.navBarTravelDistance * 2) {\n                  pnProductNavContents.style.transform = \"translateX(\" + availableScrollLeft + \"px)\";\n                } else {\n                  pnProductNavContents.style.transform = \"translateX(\" + SETTINGS.navBarTravelDistance + \"px)\";\n                } // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\n\n                pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\"); // Update our settings\n\n                SETTINGS.navBarTravelDirection = \"left\";\n                SETTINGS.navBarTravelling = true;\n              } // Now update the attribute in the DOM\n\n\n              pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n            });\n            pnAdvancerRight.addEventListener(\"click\", function () {\n              console.log('slave'); // If in the middle of a move return\n\n              if (SETTINGS.navBarTravelling === true) {\n                return;\n              } // If we have content overflowing both sides or on the right\n\n\n              if (determineOverflow(pnProductNavContents, pnProductNav) === \"right\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n                // Get the right edge of the container and content\n                var navBarRightEdge = pnProductNavContents.getBoundingClientRect().right;\n                var navBarScrollerRightEdge = pnProductNav.getBoundingClientRect().right; // Now we know how much space we have available to scroll\n\n                var availableScrollRight = Math.floor(navBarRightEdge - navBarScrollerRightEdge); // If the space available is less than two lots of our desired distance, just move the whole amount\n                // otherwise, move by the amount in the settings\n\n                if (availableScrollRight < SETTINGS.navBarTravelDistance * 2) {\n                  pnProductNavContents.style.transform = \"translateX(-\" + availableScrollRight + \"px)\";\n                } else {\n                  pnProductNavContents.style.transform = \"translateX(-\" + SETTINGS.navBarTravelDistance + \"px)\";\n                } // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\n\n                pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\"); // Update our settings\n\n                SETTINGS.navBarTravelDirection = \"right\";\n                SETTINGS.navBarTravelling = true;\n              } // Now update the attribute in the DOM\n\n\n              pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n            });\n            pnProductNavContents.addEventListener(\"transitionend\", function () {\n              // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform\n              var styleOfTransform = window.getComputedStyle(pnProductNavContents, null);\n              var tr = styleOfTransform.getPropertyValue(\"-webkit-transform\") || styleOfTransform.getPropertyValue(\"transform\"); // If there is no transition we want to default to 0 and not null\n\n              var amount = Math.abs(_parseInt(tr.split(\",\")[4]) || 0);\n              pnProductNavContents.style.transform = \"none\";\n              pnProductNavContents.classList.add(\"pn-ProductNav_Contents-no-transition\"); // Now lets set the scroll position\n\n              if (SETTINGS.navBarTravelDirection === \"left\") {\n                pnProductNav.scrollLeft = pnProductNav.scrollLeft - amount;\n              } else {\n                pnProductNav.scrollLeft = pnProductNav.scrollLeft + amount;\n              }\n\n              SETTINGS.navBarTravelling = false;\n            }, false); // Handle setting the currently active link\n\n            pnProductNavContents.addEventListener(\"click\", function (e) {\n              var links = [].slice.call(document.querySelectorAll(\".pn-ProductNav_Link\"));\n              links.forEach(function (item) {\n                item.setAttribute(\"aria-selected\", \"false\");\n              });\n              e.target.setAttribute(\"aria-selected\", \"true\"); // Pass the clicked item and it's colour to the move indicator function\n\n              moveIndicator(e.target, colours[links.indexOf(e.target)]);\n            }); // var count = 0;\n\n            function moveIndicator(item, color) {\n              var textPosition = item.getBoundingClientRect();\n              var container = pnProductNavContents.getBoundingClientRect().left;\n              var distance = textPosition.left - container;\n              var scroll = pnProductNavContents.scrollLeft;\n              pnIndicator.style.transform = \"translateX(\" + (distance + scroll) + \"px) scaleX(\" + textPosition.width * 0.01 + \")\"; // count = count += 100;\n              // pnIndicator.style.transform = \"translateX(\" + count + \"px)\";\n\n              if (color) {\n                pnIndicator.style.backgroundColor = color;\n              }\n            }\n\n            function determineOverflow(content, container) {\n              var containerMetrics = container.getBoundingClientRect();\n              var containerMetricsRight = Math.floor(containerMetrics.right);\n              var containerMetricsLeft = Math.floor(containerMetrics.left);\n              var contentMetrics = content.getBoundingClientRect();\n              var contentMetricsRight = Math.floor(contentMetrics.right);\n              var contentMetricsLeft = Math.floor(contentMetrics.left);\n\n              if (containerMetricsLeft > contentMetricsLeft && containerMetricsRight < contentMetricsRight) {\n                return \"both\";\n              } else if (contentMetricsLeft < containerMetricsLeft) {\n                return \"left\";\n              } else if (contentMetricsRight > containerMetricsRight) {\n                return \"right\";\n              } else {\n                return \"none\";\n              }\n            }\n            /**\n             * @fileoverview dragscroll - scroll area by dragging\n             * @version 0.0.8\n             * \n             * @license MIT, see https://github.com/asvd/dragscroll\n             * @copyright 2015 asvd <heliosframework@gmail.com> \n             */\n\n\n            (function (root, factory) {\n              if (typeof define === 'function' && define.amd) {\n                define(['exports'], factory);\n              } else if (typeof exports !== 'undefined') {\n                factory(exports);\n              } else {\n                factory(root.dragscroll = {});\n              }\n            })(this, function (exports) {\n              var _window = window;\n              var _document = document;\n              var mousemove = 'mousemove';\n              var mouseup = 'mouseup';\n              var mousedown = 'mousedown';\n              var EventListener = 'EventListener';\n              var addEventListener = 'add' + EventListener;\n              var removeEventListener = 'remove' + EventListener;\n              var newScrollX, newScrollY;\n              var dragged = [];\n\n              var reset = function reset(i, el) {\n                for (i = 0; i < dragged.length;) {\n                  el = dragged[i++];\n                  el = el.container || el;\n                  el[removeEventListener](mousedown, el.md, 0);\n\n                  _window[removeEventListener](mouseup, el.mu, 0);\n\n                  _window[removeEventListener](mousemove, el.mm, 0);\n                } // cloning into array since HTMLCollection is updated dynamically\n\n\n                dragged = [].slice.call(_document.getElementsByClassName('dragscroll'));\n\n                for (i = 0; i < dragged.length;) {\n                  (function (el, lastClientX, lastClientY, pushed, scroller, cont) {\n                    (cont = el.container || el)[addEventListener](mousedown, cont.md = function (e) {\n                      if (!el.hasAttribute('nochilddrag') || _document.elementFromPoint(e.pageX, e.pageY) == cont) {\n                        pushed = 1;\n                        lastClientX = e.clientX;\n                        lastClientY = e.clientY;\n                        e.preventDefault();\n                      }\n                    }, 0);\n\n                    _window[addEventListener](mouseup, cont.mu = function () {\n                      pushed = 0;\n                    }, 0);\n\n                    _window[addEventListener](mousemove, cont.mm = function (e) {\n                      if (pushed) {\n                        (scroller = el.scroller || el).scrollLeft -= newScrollX = -lastClientX + (lastClientX = e.clientX);\n                        scroller.scrollTop -= newScrollY = -lastClientY + (lastClientY = e.clientY);\n\n                        if (el == _document.body) {\n                          (scroller = _document.documentElement).scrollLeft -= newScrollX;\n                          scroller.scrollTop -= newScrollY;\n                        }\n                      }\n                    }, 0);\n                  })(dragged[i++]);\n                }\n              };\n\n              if (_document.readyState == 'complete') {\n                reset();\n              } else {\n                _window[addEventListener]('load', reset, 0);\n              }\n\n              exports.reset = reset;\n            });\n          };\n        }\n\n        if (process.browser) {\n          window.popstate = function () {\n            console.log('yoyo');\n          };\n        }\n      };\n    }\n  }]);\n\n  return NewsGridScroll;\n}(React.Component);\n\nexport default NewsGridScroll;","map":{"version":3,"sources":["/Users/peterhahn/src/new/audio-boy/components/news-grid-scroll.js"],"names":["React","Head","styled","News","NewsGridScroll","props","news","map","post","i","window","onpopstate","process","browser","onload","SETTINGS","navBarTravelling","navBarTravelDirection","navBarTravelDistance","colours","document","documentElement","classList","remove","add","console","log","getElementById","pnAdvancerLeft","pnAdvancerRight","pnIndicator","pnProductNav","pnProductNavContents","setAttribute","determineOverflow","moveIndicator","querySelector","last_known_scroll_position","ticking","doSomething","scroll_pos","addEventListener","scrollY","requestAnimationFrame","availableScrollLeft","scrollLeft","style","transform","navBarRightEdge","getBoundingClientRect","right","navBarScrollerRightEdge","availableScrollRight","Math","floor","styleOfTransform","getComputedStyle","tr","getPropertyValue","amount","abs","split","e","links","slice","call","querySelectorAll","forEach","item","target","indexOf","color","textPosition","container","left","distance","scroll","width","backgroundColor","content","containerMetrics","containerMetricsRight","containerMetricsLeft","contentMetrics","contentMetricsRight","contentMetricsLeft","root","factory","define","amd","exports","dragscroll","_window","_document","mousemove","mouseup","mousedown","EventListener","removeEventListener","newScrollX","newScrollY","dragged","reset","el","length","md","mu","mm","getElementsByClassName","lastClientX","lastClientY","pushed","scroller","cont","hasAttribute","elementFromPoint","pageX","pageY","clientX","clientY","preventDefault","scrollTop","body","readyState","onbeforeunload","popstate","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Head from 'next/head';\n\nimport styled from 'styled-components';\n\nimport News from './news.js'\nimport '../scroll.js';\n\nimport '../css/normalize.css';\nimport '../css/skeleton.css';\nimport '../css/style.css';\n\n\nclass NewsGridScroll extends React.Component {\n\tstate = {\n\n\t}\n\t\n\trender () {\n    \treturn(\n    \t\t <div className=\"pn-ProductNav_Wrapper\">\n\t\t\t\t<nav id=\"pnProductNav\" className=\"pn-ProductNav\">\n\t\t\t\t    <div id=\"pnProductNavContents\" className=\"pn-ProductNav_Contents\">\n\t\t\t\t        {this.props.news.map((post, i) => <News {...this.props} key={i} i={i} news={post} />)}\n\t\t\t\t    <span id=\"pnIndicator\" className=\"pn-ProductNav_Indicator\"></span>\n\t\t\t\t    </div>\n\t\t\t\t</nav>\n\t\t\t\t    <button id=\"pnAdvancerLeft\" className=\"pn-Advancer pn-Advancer_Left\" type=\"button\">\n\t\t\t\t    \t<img className='leftArrow' src=\"https://i.imgur.com/BZ7AKsn.png\" />\n\t\t\t\t    </button>\n\t\t\t\t    <button id=\"pnAdvancerRight\" className=\"pn-Advancer pn-Advancer_Right\" type=\"button\">\n\t\t\t\t\t\t<img className='rightArrow' src=\"https://i.imgur.com/2K5BYIz.png\" />\n\t\t\t\t    </button>\n\t\t\t</div>\n    \t)\n \t}\n\n \tcomponentDidMount() {\n    \n    \twindow.onpopstate = ()=> {\n      \tif (process.browser){\n\nwindow.onload = function(){\n\nvar SETTINGS = {\n    navBarTravelling: false,\n    navBarTravelDirection: \"\",\n     navBarTravelDistance: 500\n}\n\nvar colours = {\n    0: \"#867100\",\n    1: \"#7F4200\",\n    2: \"#99813D\",\n    3: \"#40FEFF\",\n    4: \"#14CC99\",\n    5: \"#00BAFF\",\n    6: \"#0082B2\",\n    7: \"#B25D7A\",\n    8: \"#00FF17\",\n    9: \"#006B49\",\n    10: \"#00B27A\",\n    11: \"#996B3D\",\n    12: \"#CC7014\",\n    13: \"#40FF8C\",\n    14: \"#FF3400\",\n    15: \"#ECBB5E\",\n    16: \"#ECBB0C\",\n    17: \"#B9D912\",\n    18: \"#253A93\",\n    19: \"#125FB9\",\n}\n\ndocument.documentElement.classList.remove(\"no-js\");\ndocument.documentElement.classList.add(\"js\");\nconsole.log('lion1');\nconsole.log(document.getElementById(\"pnAdvancerLeft\"));\n// Out advancer buttons\nvar pnAdvancerLeft = document.getElementById(\"pnAdvancerLeft\");\nvar pnAdvancerRight = document.getElementById(\"pnAdvancerRight\");\n// the indicator\nvar pnIndicator = document.getElementById(\"pnIndicator\");\n\nvar pnProductNav = document.getElementById(\"pnProductNav\");\nvar pnProductNavContents = document.getElementById(\"pnProductNavContents\");\n\npnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n\n// Set the indicator\nmoveIndicator(pnProductNav.querySelector(\"[aria-selected=\\\"true\\\"]\"), colours[0]);\n\n// Handle the scroll of the horizontal container\nvar last_known_scroll_position = 0;\nvar ticking = false;\n\nfunction doSomething(scroll_pos) {\n    pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n}\n\npnProductNav.addEventListener(\"scroll\", function() {\n    last_known_scroll_position = window.scrollY;\n    if (!ticking) {\n        window.requestAnimationFrame(function() {\n            doSomething(last_known_scroll_position);\n            ticking = false;\n        });\n    }\n    ticking = true;\n});\n\n\npnAdvancerLeft.addEventListener(\"click\", function() {\n\tconsole.log('sex');\n    // If in the middle of a move return\n    if (SETTINGS.navBarTravelling === true) {\n        return;\n    }\n    // If we have content overflowing both sides or on the left\n    if (determineOverflow(pnProductNavContents, pnProductNav) === \"left\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n        // Find how far this panel has been scrolled\n        var availableScrollLeft = pnProductNav.scrollLeft;\n        // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n        if (availableScrollLeft < SETTINGS.navBarTravelDistance * 2) {\n            pnProductNavContents.style.transform = \"translateX(\" + availableScrollLeft + \"px)\";\n        } else {\n            pnProductNavContents.style.transform = \"translateX(\" + SETTINGS.navBarTravelDistance + \"px)\";\n        }\n        // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n        pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n        // Update our settings\n        SETTINGS.navBarTravelDirection = \"left\";\n        SETTINGS.navBarTravelling = true;\n    }\n    // Now update the attribute in the DOM\n    pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n});\n\npnAdvancerRight.addEventListener(\"click\", function() {\n\tconsole.log('slave');\n    // If in the middle of a move return\n    if (SETTINGS.navBarTravelling === true) {\n        return;\n    }\n    // If we have content overflowing both sides or on the right\n    if (determineOverflow(pnProductNavContents, pnProductNav) === \"right\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n        // Get the right edge of the container and content\n        var navBarRightEdge = pnProductNavContents.getBoundingClientRect().right;\n        var navBarScrollerRightEdge = pnProductNav.getBoundingClientRect().right;\n        // Now we know how much space we have available to scroll\n        var availableScrollRight = Math.floor(navBarRightEdge - navBarScrollerRightEdge);\n        // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n        if (availableScrollRight < SETTINGS.navBarTravelDistance * 2) {\n            pnProductNavContents.style.transform = \"translateX(-\" + availableScrollRight + \"px)\";\n        } else {\n            pnProductNavContents.style.transform = \"translateX(-\" + SETTINGS.navBarTravelDistance + \"px)\";\n        }\n        // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n        pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n        // Update our settings\n        SETTINGS.navBarTravelDirection = \"right\";\n        SETTINGS.navBarTravelling = true;\n    }\n    // Now update the attribute in the DOM\n    pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n});\n\npnProductNavContents.addEventListener(\n    \"transitionend\",\n    function() {\n        // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform\n        var styleOfTransform = window.getComputedStyle(pnProductNavContents, null);\n        var tr = styleOfTransform.getPropertyValue(\"-webkit-transform\") || styleOfTransform.getPropertyValue(\"transform\");\n        // If there is no transition we want to default to 0 and not null\n        var amount = Math.abs(parseInt(tr.split(\",\")[4]) || 0);\n        pnProductNavContents.style.transform = \"none\";\n        pnProductNavContents.classList.add(\"pn-ProductNav_Contents-no-transition\");\n        // Now lets set the scroll position\n        if (SETTINGS.navBarTravelDirection === \"left\") {\n            pnProductNav.scrollLeft = pnProductNav.scrollLeft - amount;\n        } else {\n            pnProductNav.scrollLeft = pnProductNav.scrollLeft + amount;\n        }\n        SETTINGS.navBarTravelling = false;\n    },\n    false\n);\n\n// Handle setting the currently active link\npnProductNavContents.addEventListener(\"click\", function(e) {\n    var links = [].slice.call(document.querySelectorAll(\".pn-ProductNav_Link\"));\n    links.forEach(function(item) {\n        item.setAttribute(\"aria-selected\", \"false\");\n    })\n    e.target.setAttribute(\"aria-selected\", \"true\");\n    // Pass the clicked item and it's colour to the move indicator function\n    moveIndicator(e.target, colours[links.indexOf(e.target)]);\n});\n\n// var count = 0;\nfunction moveIndicator(item, color) {\n    var textPosition = item.getBoundingClientRect();\n    var container = pnProductNavContents.getBoundingClientRect().left;\n    var distance = textPosition.left - container;\n     var scroll = pnProductNavContents.scrollLeft;\n    pnIndicator.style.transform = \"translateX(\" + (distance + scroll) + \"px) scaleX(\" + textPosition.width * 0.01 + \")\";\n    // count = count += 100;\n    // pnIndicator.style.transform = \"translateX(\" + count + \"px)\";\n    \n    if (color) {\n        pnIndicator.style.backgroundColor = color;\n    }\n}\n\nfunction determineOverflow(content, container) {\n    var containerMetrics = container.getBoundingClientRect();\n    var containerMetricsRight = Math.floor(containerMetrics.right);\n    var containerMetricsLeft = Math.floor(containerMetrics.left);\n    var contentMetrics = content.getBoundingClientRect();\n    var contentMetricsRight = Math.floor(contentMetrics.right);\n    var contentMetricsLeft = Math.floor(contentMetrics.left);\n     if (containerMetricsLeft > contentMetricsLeft && containerMetricsRight < contentMetricsRight) {\n        return \"both\";\n    } else if (contentMetricsLeft < containerMetricsLeft) {\n        return \"left\";\n    } else if (contentMetricsRight > containerMetricsRight) {\n        return \"right\";\n    } else {\n        return \"none\";\n    }\n}\n\n/**\n * @fileoverview dragscroll - scroll area by dragging\n * @version 0.0.8\n * \n * @license MIT, see https://github.com/asvd/dragscroll\n * @copyright 2015 asvd <heliosframework@gmail.com> \n */\n\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== 'undefined') {\n        factory(exports);\n    } else {\n        factory((root.dragscroll = {}));\n    }\n}(this, function (exports) {\n    var _window = window;\n    var _document = document;\n    var mousemove = 'mousemove';\n    var mouseup = 'mouseup';\n    var mousedown = 'mousedown';\n    var EventListener = 'EventListener';\n    var addEventListener = 'add'+EventListener;\n    var removeEventListener = 'remove'+EventListener;\n    var newScrollX, newScrollY;\n\n    var dragged = [];\n    var reset = function(i, el) {\n        for (i = 0; i < dragged.length;) {\n            el = dragged[i++];\n            el = el.container || el;\n            el[removeEventListener](mousedown, el.md, 0);\n            _window[removeEventListener](mouseup, el.mu, 0);\n            _window[removeEventListener](mousemove, el.mm, 0);\n        }\n\n        // cloning into array since HTMLCollection is updated dynamically\n        dragged = [].slice.call(_document.getElementsByClassName('dragscroll'));\n        for (i = 0; i < dragged.length;) {\n            (function(el, lastClientX, lastClientY, pushed, scroller, cont){\n                (cont = el.container || el)[addEventListener](\n                    mousedown,\n                    cont.md = function(e) {\n                        if (!el.hasAttribute('nochilddrag') ||\n                            _document.elementFromPoint(\n                                e.pageX, e.pageY\n                            ) == cont\n                        ) {\n                            pushed = 1;\n                            lastClientX = e.clientX;\n                            lastClientY = e.clientY;\n\n                            e.preventDefault();\n                        }\n                    }, 0\n                );\n\n                _window[addEventListener](\n                    mouseup, cont.mu = function() {pushed = 0;}, 0\n                );\n\n                _window[addEventListener](\n                    mousemove,\n                    cont.mm = function(e) {\n                        if (pushed) {\n                            (scroller = el.scroller||el).scrollLeft -=\n                                newScrollX = (- lastClientX + (lastClientX=e.clientX));\n                            scroller.scrollTop -=\n                                newScrollY = (- lastClientY + (lastClientY=e.clientY));\n                            if (el == _document.body) {\n                                (scroller = _document.documentElement).scrollLeft -= newScrollX;\n                                scroller.scrollTop -= newScrollY;\n                            }\n                        }\n                    }, 0\n                );\n             })(dragged[i++]);\n        }\n    }\n\n      \n    if (_document.readyState == 'complete') {\n        reset();\n    } else {\n        _window[addEventListener]('load', reset, 0);\n    }\n\n    exports.reset = reset;\n}));\n}\n}\n\n\n\n   if (process.browser){\nwindow.onbeforeunload = function () {\n\n\nvar SETTINGS = {\n    navBarTravelling: false,\n    navBarTravelDirection: \"\",\n     navBarTravelDistance: 500\n}\n\nvar colours = {\n    0: \"#867100\",\n    1: \"#7F4200\",\n    2: \"#99813D\",\n    3: \"#40FEFF\",\n    4: \"#14CC99\",\n    5: \"#00BAFF\",\n    6: \"#0082B2\",\n    7: \"#B25D7A\",\n    8: \"#00FF17\",\n    9: \"#006B49\",\n    10: \"#00B27A\",\n    11: \"#996B3D\",\n    12: \"#CC7014\",\n    13: \"#40FF8C\",\n    14: \"#FF3400\",\n    15: \"#ECBB5E\",\n    16: \"#ECBB0C\",\n    17: \"#B9D912\",\n    18: \"#253A93\",\n    19: \"#125FB9\",\n}\n\ndocument.documentElement.classList.remove(\"no-js\");\ndocument.documentElement.classList.add(\"js\");\nconsole.log('lion1');\nconsole.log(document.getElementById(\"pnAdvancerLeft\"));\n// Out advancer buttons\nvar pnAdvancerLeft = document.getElementById(\"pnAdvancerLeft\");\nvar pnAdvancerRight = document.getElementById(\"pnAdvancerRight\");\n// the indicator\nvar pnIndicator = document.getElementById(\"pnIndicator\");\n\nvar pnProductNav = document.getElementById(\"pnProductNav\");\nvar pnProductNavContents = document.getElementById(\"pnProductNavContents\");\n\npnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n\n// Set the indicator\nmoveIndicator(pnProductNav.querySelector(\"[aria-selected=\\\"true\\\"]\"), colours[0]);\n\n// Handle the scroll of the horizontal container\nvar last_known_scroll_position = 0;\nvar ticking = false;\n\nfunction doSomething(scroll_pos) {\n    pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n}\n\npnProductNav.addEventListener(\"scroll\", function() {\n    last_known_scroll_position = window.scrollY;\n    if (!ticking) {\n        window.requestAnimationFrame(function() {\n            doSomething(last_known_scroll_position);\n            ticking = false;\n        });\n    }\n    ticking = true;\n});\n\n\npnAdvancerLeft.addEventListener(\"click\", function() {\n    // If in the middle of a move return\n    if (SETTINGS.navBarTravelling === true) {\n        return;\n    }\n    // If we have content overflowing both sides or on the left\n    if (determineOverflow(pnProductNavContents, pnProductNav) === \"left\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n        // Find how far this panel has been scrolled\n        var availableScrollLeft = pnProductNav.scrollLeft;\n        // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n        if (availableScrollLeft < SETTINGS.navBarTravelDistance * 2) {\n            pnProductNavContents.style.transform = \"translateX(\" + availableScrollLeft + \"px)\";\n        } else {\n            pnProductNavContents.style.transform = \"translateX(\" + SETTINGS.navBarTravelDistance + \"px)\";\n        }\n        // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n        pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n        // Update our settings\n        SETTINGS.navBarTravelDirection = \"left\";\n        SETTINGS.navBarTravelling = true;\n    }\n    // Now update the attribute in the DOM\n    pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n});\n\npnAdvancerRight.addEventListener(\"click\", function() {\n    console.log('slave');\n    // If in the middle of a move return\n    if (SETTINGS.navBarTravelling === true) {\n        return;\n    }\n    // If we have content overflowing both sides or on the right\n    if (determineOverflow(pnProductNavContents, pnProductNav) === \"right\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n        // Get the right edge of the container and content\n        var navBarRightEdge = pnProductNavContents.getBoundingClientRect().right;\n        var navBarScrollerRightEdge = pnProductNav.getBoundingClientRect().right;\n        // Now we know how much space we have available to scroll\n        var availableScrollRight = Math.floor(navBarRightEdge - navBarScrollerRightEdge);\n        // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n        if (availableScrollRight < SETTINGS.navBarTravelDistance * 2) {\n            pnProductNavContents.style.transform = \"translateX(-\" + availableScrollRight + \"px)\";\n        } else {\n            pnProductNavContents.style.transform = \"translateX(-\" + SETTINGS.navBarTravelDistance + \"px)\";\n        }\n        // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n        pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n        // Update our settings\n        SETTINGS.navBarTravelDirection = \"right\";\n        SETTINGS.navBarTravelling = true;\n    }\n    // Now update the attribute in the DOM\n    pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n});\n\npnProductNavContents.addEventListener(\n    \"transitionend\",\n    function() {\n        // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform\n        var styleOfTransform = window.getComputedStyle(pnProductNavContents, null);\n        var tr = styleOfTransform.getPropertyValue(\"-webkit-transform\") || styleOfTransform.getPropertyValue(\"transform\");\n        // If there is no transition we want to default to 0 and not null\n        var amount = Math.abs(parseInt(tr.split(\",\")[4]) || 0);\n        pnProductNavContents.style.transform = \"none\";\n        pnProductNavContents.classList.add(\"pn-ProductNav_Contents-no-transition\");\n        // Now lets set the scroll position\n        if (SETTINGS.navBarTravelDirection === \"left\") {\n            pnProductNav.scrollLeft = pnProductNav.scrollLeft - amount;\n        } else {\n            pnProductNav.scrollLeft = pnProductNav.scrollLeft + amount;\n        }\n        SETTINGS.navBarTravelling = false;\n    },\n    false\n);\n\n// Handle setting the currently active link\npnProductNavContents.addEventListener(\"click\", function(e) {\n    var links = [].slice.call(document.querySelectorAll(\".pn-ProductNav_Link\"));\n    links.forEach(function(item) {\n        item.setAttribute(\"aria-selected\", \"false\");\n    })\n    e.target.setAttribute(\"aria-selected\", \"true\");\n    // Pass the clicked item and it's colour to the move indicator function\n    moveIndicator(e.target, colours[links.indexOf(e.target)]);\n});\n\n// var count = 0;\nfunction moveIndicator(item, color) {\n    var textPosition = item.getBoundingClientRect();\n    var container = pnProductNavContents.getBoundingClientRect().left;\n    var distance = textPosition.left - container;\n     var scroll = pnProductNavContents.scrollLeft;\n    pnIndicator.style.transform = \"translateX(\" + (distance + scroll) + \"px) scaleX(\" + textPosition.width * 0.01 + \")\";\n    // count = count += 100;\n    // pnIndicator.style.transform = \"translateX(\" + count + \"px)\";\n    \n    if (color) {\n        pnIndicator.style.backgroundColor = color;\n    }\n}\n\nfunction determineOverflow(content, container) {\n    var containerMetrics = container.getBoundingClientRect();\n    var containerMetricsRight = Math.floor(containerMetrics.right);\n    var containerMetricsLeft = Math.floor(containerMetrics.left);\n    var contentMetrics = content.getBoundingClientRect();\n    var contentMetricsRight = Math.floor(contentMetrics.right);\n    var contentMetricsLeft = Math.floor(contentMetrics.left);\n     if (containerMetricsLeft > contentMetricsLeft && containerMetricsRight < contentMetricsRight) {\n        return \"both\";\n    } else if (contentMetricsLeft < containerMetricsLeft) {\n        return \"left\";\n    } else if (contentMetricsRight > containerMetricsRight) {\n        return \"right\";\n    } else {\n        return \"none\";\n    }\n}\n\n/**\n * @fileoverview dragscroll - scroll area by dragging\n * @version 0.0.8\n * \n * @license MIT, see https://github.com/asvd/dragscroll\n * @copyright 2015 asvd <heliosframework@gmail.com> \n */\n\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== 'undefined') {\n        factory(exports);\n    } else {\n        factory((root.dragscroll = {}));\n    }\n}(this, function (exports) {\n    var _window = window;\n    var _document = document;\n    var mousemove = 'mousemove';\n    var mouseup = 'mouseup';\n    var mousedown = 'mousedown';\n    var EventListener = 'EventListener';\n    var addEventListener = 'add'+EventListener;\n    var removeEventListener = 'remove'+EventListener;\n    var newScrollX, newScrollY;\n\n    var dragged = [];\n    var reset = function(i, el) {\n        for (i = 0; i < dragged.length;) {\n            el = dragged[i++];\n            el = el.container || el;\n            el[removeEventListener](mousedown, el.md, 0);\n            _window[removeEventListener](mouseup, el.mu, 0);\n            _window[removeEventListener](mousemove, el.mm, 0);\n        }\n\n        // cloning into array since HTMLCollection is updated dynamically\n        dragged = [].slice.call(_document.getElementsByClassName('dragscroll'));\n        for (i = 0; i < dragged.length;) {\n            (function(el, lastClientX, lastClientY, pushed, scroller, cont){\n                (cont = el.container || el)[addEventListener](\n                    mousedown,\n                    cont.md = function(e) {\n                        if (!el.hasAttribute('nochilddrag') ||\n                            _document.elementFromPoint(\n                                e.pageX, e.pageY\n                            ) == cont\n                        ) {\n                            pushed = 1;\n                            lastClientX = e.clientX;\n                            lastClientY = e.clientY;\n\n                            e.preventDefault();\n                        }\n                    }, 0\n                );\n\n                _window[addEventListener](\n                    mouseup, cont.mu = function() {pushed = 0;}, 0\n                );\n\n                _window[addEventListener](\n                    mousemove,\n                    cont.mm = function(e) {\n                        if (pushed) {\n                            (scroller = el.scroller||el).scrollLeft -=\n                                newScrollX = (- lastClientX + (lastClientX=e.clientX));\n                            scroller.scrollTop -=\n                                newScrollY = (- lastClientY + (lastClientY=e.clientY));\n                            if (el == _document.body) {\n                                (scroller = _document.documentElement).scrollLeft -= newScrollX;\n                                scroller.scrollTop -= newScrollY;\n                            }\n                        }\n                    }, 0\n                );\n             })(dragged[i++]);\n        }\n    }\n\n      \n    if (_document.readyState == 'complete') {\n        reset();\n    } else {\n        _window[addEventListener]('load', reset, 0);\n    }\n\n    exports.reset = reset;\n}));\n}\n}\n\nif (process.browser){\n\nwindow.popstate = function() {\nconsole.log('yoyo');\n}\n}\n      \t}\n    }\n\n}\n\nexport default NewsGridScroll;\n"]},"metadata":{},"sourceType":"module"}