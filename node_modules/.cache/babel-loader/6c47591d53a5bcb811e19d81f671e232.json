{"ast":null,"code":"var _this = this;\n\nif (process.browser) {\n  var x, i, j, selElmnt, a, b, c;\n\n  (function () {\n    var touchstart = function touchstart(e) {\n      e.preventDefault();\n    };\n\n    var touchmove = function touchmove(e) {\n      e.preventDefault();\n    };\n\n    var closeAllSelect = function closeAllSelect(elmnt) {\n      /* A function that will close all select boxes in the document,\n      except the current select box: */\n      var x,\n          y,\n          i,\n          arrNo = [];\n      x = document.getElementsByClassName(\"select-items\");\n      y = document.getElementsByClassName(\"select-selected\");\n\n      for (i = 0; i < y.length; i++) {\n        if (elmnt == y[i]) {\n          arrNo.push(i);\n        } else {\n          y[i].classList.remove(\"select-arrow-active\");\n        }\n      }\n\n      for (i = 0; i < x.length; i++) {\n        if (arrNo.indexOf(i)) {\n          x[i].classList.add(\"select-hide\");\n        }\n      }\n    };\n    /* If the user clicks anywhere outside the select box,\n    then close all select boxes: */\n\n\n    document.addEventListener('touchstart', _this.touchstart);\n    document.addEventListener('touchmove', _this.touchmove);\n\n    /* Look for any elements with the class \"custom-select\": */\n    x = document.getElementsByClassName(\"custom-select\");\n\n    for (i = 0; i < x.length; i++) {\n      selElmnt = x[i].getElementsByTagName(\"select\")[0];\n      /* For each element, create a new DIV that will act as the selected item: */\n\n      a = document.createElement(\"DIV\");\n      a.setAttribute(\"class\", \"select-selected\");\n      a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;\n      x[i].appendChild(a);\n      /* For each element, create a new DIV that will contain the option list: */\n\n      b = document.createElement(\"DIV\");\n      b.setAttribute(\"class\", \"select-items select-hide\");\n\n      for (j = 1; j < selElmnt.length; j++) {\n        /* For each option in the original select element,\n        create a new DIV that will act as an option item: */\n        c = document.createElement(\"DIV\");\n        c.innerHTML = selElmnt.options[j].innerHTML;\n        c.addEventListener(\"click\", function (e) {\n          /* When an item is clicked, update the original select box,\n          and the selected item: */\n          var y, i, k, s, h;\n          s = this.parentNode.parentNode.getElementsByTagName(\"select\")[0];\n          h = this.parentNode.previousSibling;\n\n          for (i = 0; i < s.length; i++) {\n            if (s.options[i].innerHTML == this.innerHTML) {\n              s.selectedIndex = i;\n              h.innerHTML = this.innerHTML;\n              y = this.parentNode.getElementsByClassName(\"same-as-selected\");\n\n              for (k = 0; k < y.length; k++) {\n                y[k].removeAttribute(\"class\");\n              }\n\n              this.setAttribute(\"class\", \"same-as-selected\");\n              break;\n            }\n          }\n\n          h.click();\n        });\n        b.appendChild(c);\n      }\n\n      x[i].appendChild(b);\n      a.addEventListener(\"click\", function (e) {\n        /* When the select box is clicked, close any other select boxes,\n        and open/close the current select box: */\n        e.stopPropagation();\n        closeAllSelect(this);\n        this.nextSibling.classList.toggle(\"select-hide\");\n        this.classList.toggle(\"select-arrow-active\");\n      });\n    }\n\n    document.addEventListener(\"click\", closeAllSelect);\n  })();\n}","map":null,"metadata":{},"sourceType":"module"}