{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\n\nif (process.browser) {\n  var Check = function Check(el) {\n    var button = document.getElementById(\"itemChoose\");\n    var nbr_of_checked_no = document.querySelectorAll('input[type=radio][value=no]:checked').length;\n    var nbr_checked_radios = document.querySelectorAll('input[type=radio]:checked').length;\n    /*\n       'nbr_of_checked_no>0' : mean if at least one of the 'no' options checked\n       'nbr_checked_radios==0' : mean if no radio button is checked \n    */\n\n    if (nbr_of_checked_no > 0 || nbr_checked_radios < 4) {\n      button.disabled = true;\n    } else {\n      button.disabled = false;\n    }\n  };\n\n  var status = function status() {\n    console.log('click');\n  };\n\n  window.onload = function () {\n    var SETTINGS = {\n      navBarTravelling: false,\n      navBarTravelDirection: \"\",\n      navBarTravelDistance: 500\n    };\n    var colours = {\n      0: \"#867100\",\n      1: \"#7F4200\",\n      2: \"#99813D\",\n      3: \"#40FEFF\",\n      4: \"#14CC99\",\n      5: \"#00BAFF\",\n      6: \"#0082B2\",\n      7: \"#B25D7A\",\n      8: \"#00FF17\",\n      9: \"#006B49\",\n      10: \"#00B27A\",\n      11: \"#996B3D\",\n      12: \"#CC7014\",\n      13: \"#40FF8C\",\n      14: \"#FF3400\",\n      15: \"#ECBB5E\",\n      16: \"#ECBB0C\",\n      17: \"#B9D912\",\n      18: \"#253A93\",\n      19: \"#125FB9\"\n    };\n    document.documentElement.classList.remove(\"no-js\");\n    document.documentElement.classList.add(\"js\"); // Out advancer buttons\n\n    var pnAdvancerLeft = document.getElementById(\"pnAdvancerLeft\");\n    var pnAdvancerRight = document.getElementById(\"pnAdvancerRight\"); // the indicator\n\n    var pnIndicator = document.getElementById(\"pnIndicator\");\n    var pnProductNav = document.getElementById(\"pnProductNav\");\n    var pnProductNavContents = document.getElementById(\"pnProductNavContents\");\n    pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav)); // Set the indicator\n\n    moveIndicator(pnProductNav.querySelector(\"[aria-selected=\\\"true\\\"]\"), colours[0]); // Handle the scroll of the horizontal container\n\n    var last_known_scroll_position = 0;\n    var ticking = false;\n\n    function doSomething(scroll_pos) {\n      pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n    }\n\n    pnProductNav.addEventListener(\"scroll\", function () {\n      last_known_scroll_position = window.scrollY;\n\n      if (!ticking) {\n        window.requestAnimationFrame(function () {\n          doSomething(last_known_scroll_position);\n          ticking = false;\n        });\n      }\n\n      ticking = true;\n    });\n    pnAdvancerLeft.addEventListener(\"click\", function () {\n      // If in the middle of a move return\n      if (SETTINGS.navBarTravelling === true) {\n        return;\n      } // If we have content overflowing both sides or on the left\n\n\n      if (determineOverflow(pnProductNavContents, pnProductNav) === \"left\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n        // Find how far this panel has been scrolled\n        var availableScrollLeft = pnProductNav.scrollLeft; // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n\n        if (availableScrollLeft < SETTINGS.navBarTravelDistance * 2) {\n          pnProductNavContents.style.transform = \"translateX(\" + availableScrollLeft + \"px)\";\n        } else {\n          pnProductNavContents.style.transform = \"translateX(\" + SETTINGS.navBarTravelDistance + \"px)\";\n        } // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\n\n        pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\"); // Update our settings\n\n        SETTINGS.navBarTravelDirection = \"left\";\n        SETTINGS.navBarTravelling = true;\n      } // Now update the attribute in the DOM\n\n\n      pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n    });\n    pnAdvancerRight.addEventListener(\"click\", function () {\n      console.log('slave'); // If in the middle of a move return\n\n      if (SETTINGS.navBarTravelling === true) {\n        return;\n      } // If we have content overflowing both sides or on the right\n\n\n      if (determineOverflow(pnProductNavContents, pnProductNav) === \"right\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n        // Get the right edge of the container and content\n        var navBarRightEdge = pnProductNavContents.getBoundingClientRect().right;\n        var navBarScrollerRightEdge = pnProductNav.getBoundingClientRect().right; // Now we know how much space we have available to scroll\n\n        var availableScrollRight = Math.floor(navBarRightEdge - navBarScrollerRightEdge); // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n\n        if (availableScrollRight < SETTINGS.navBarTravelDistance * 2) {\n          pnProductNavContents.style.transform = \"translateX(-\" + availableScrollRight + \"px)\";\n        } else {\n          pnProductNavContents.style.transform = \"translateX(-\" + SETTINGS.navBarTravelDistance + \"px)\";\n        } // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\n\n        pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\"); // Update our settings\n\n        SETTINGS.navBarTravelDirection = \"right\";\n        SETTINGS.navBarTravelling = true;\n      } // Now update the attribute in the DOM\n\n\n      pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n    });\n    pnProductNavContents.addEventListener(\"transitionend\", function () {\n      // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform\n      var styleOfTransform = window.getComputedStyle(pnProductNavContents, null);\n      var tr = styleOfTransform.getPropertyValue(\"-webkit-transform\") || styleOfTransform.getPropertyValue(\"transform\"); // If there is no transition we want to default to 0 and not null\n\n      var amount = Math.abs(_parseInt(tr.split(\",\")[4]) || 0);\n      pnProductNavContents.style.transform = \"none\";\n      pnProductNavContents.classList.add(\"pn-ProductNav_Contents-no-transition\"); // Now lets set the scroll position\n\n      if (SETTINGS.navBarTravelDirection === \"left\") {\n        pnProductNav.scrollLeft = pnProductNav.scrollLeft - amount;\n      } else {\n        pnProductNav.scrollLeft = pnProductNav.scrollLeft + amount;\n      }\n\n      SETTINGS.navBarTravelling = false;\n    }, false); // Handle setting the currently active link\n\n    pnProductNavContents.addEventListener(\"click\", function (e) {\n      var links = [].slice.call(document.querySelectorAll(\".pn-ProductNav_Link\"));\n      links.forEach(function (item) {\n        item.setAttribute(\"aria-selected\", \"false\");\n      });\n      e.target.setAttribute(\"aria-selected\", \"true\"); // Pass the clicked item and it's colour to the move indicator function\n\n      moveIndicator(e.target, colours[links.indexOf(e.target)]);\n    }); // var count = 0;\n\n    function moveIndicator(item, color) {\n      var textPosition = item.getBoundingClientRect();\n      var container = pnProductNavContents.getBoundingClientRect().left;\n      var distance = textPosition.left - container;\n      var scroll = pnProductNavContents.scrollLeft;\n      pnIndicator.style.transform = \"translateX(\" + (distance + scroll) + \"px) scaleX(\" + textPosition.width * 0.01 + \")\"; // count = count += 100;\n      // pnIndicator.style.transform = \"translateX(\" + count + \"px)\";\n\n      if (color) {\n        pnIndicator.style.backgroundColor = color;\n      }\n    }\n\n    function determineOverflow(content, container) {\n      var containerMetrics = container.getBoundingClientRect();\n      var containerMetricsRight = Math.floor(containerMetrics.right);\n      var containerMetricsLeft = Math.floor(containerMetrics.left);\n      var contentMetrics = content.getBoundingClientRect();\n      var contentMetricsRight = Math.floor(contentMetrics.right);\n      var contentMetricsLeft = Math.floor(contentMetrics.left);\n\n      if (containerMetricsLeft > contentMetricsLeft && containerMetricsRight < contentMetricsRight) {\n        return \"both\";\n      } else if (contentMetricsLeft < containerMetricsLeft) {\n        return \"left\";\n      } else if (contentMetricsRight > containerMetricsRight) {\n        return \"right\";\n      } else {\n        return \"none\";\n      }\n    }\n    /**\n     * @fileoverview dragscroll - scroll area by dragging\n     * @version 0.0.8\n     * \n     * @license MIT, see https://github.com/asvd/dragscroll\n     * @copyright 2015 asvd <heliosframework@gmail.com> \n     */\n\n\n    (function (root, factory) {\n      if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n      } else if (typeof exports !== 'undefined') {\n        factory(exports);\n      } else {\n        factory(root.dragscroll = {});\n      }\n    })(this, function (exports) {\n      var _window = window;\n      var _document = document;\n      var mousemove = 'mousemove';\n      var mouseup = 'mouseup';\n      var mousedown = 'mousedown';\n      var EventListener = 'EventListener';\n      var addEventListener = 'add' + EventListener;\n      var removeEventListener = 'remove' + EventListener;\n      var newScrollX, newScrollY;\n      var dragged = [];\n\n      var reset = function reset(i, el) {\n        for (i = 0; i < dragged.length;) {\n          el = dragged[i++];\n          el = el.container || el;\n          el[removeEventListener](mousedown, el.md, 0);\n\n          _window[removeEventListener](mouseup, el.mu, 0);\n\n          _window[removeEventListener](mousemove, el.mm, 0);\n        } // cloning into array since HTMLCollection is updated dynamically\n\n\n        dragged = [].slice.call(_document.getElementsByClassName('dragscroll'));\n\n        for (i = 0; i < dragged.length;) {\n          (function (el, lastClientX, lastClientY, pushed, scroller, cont) {\n            (cont = el.container || el)[addEventListener](mousedown, cont.md = function (e) {\n              if (!el.hasAttribute('nochilddrag') || _document.elementFromPoint(e.pageX, e.pageY) == cont) {\n                pushed = 1;\n                lastClientX = e.clientX;\n                lastClientY = e.clientY;\n                e.preventDefault();\n              }\n            }, 0);\n\n            _window[addEventListener](mouseup, cont.mu = function () {\n              pushed = 0;\n            }, 0);\n\n            _window[addEventListener](mousemove, cont.mm = function (e) {\n              if (pushed) {\n                (scroller = el.scroller || el).scrollLeft -= newScrollX = -lastClientX + (lastClientX = e.clientX);\n                scroller.scrollTop -= newScrollY = -lastClientY + (lastClientY = e.clientY);\n\n                if (el == _document.body) {\n                  (scroller = _document.documentElement).scrollLeft -= newScrollX;\n                  scroller.scrollTop -= newScrollY;\n                }\n              }\n            }, 0);\n          })(dragged[i++]);\n        }\n      };\n\n      if (_document.readyState == 'complete') {\n        reset();\n      } else {\n        _window[addEventListener]('load', reset, 0);\n      }\n\n      exports.reset = reset;\n    });\n  };\n}","map":{"version":3,"sources":["/Users/peterhahn/src/new/audio-boy/scroll.js"],"names":["process","browser","Check","el","button","document","getElementById","nbr_of_checked_no","querySelectorAll","length","nbr_checked_radios","disabled","status","console","log","window","onload","SETTINGS","navBarTravelling","navBarTravelDirection","navBarTravelDistance","colours","documentElement","classList","remove","add","pnAdvancerLeft","pnAdvancerRight","pnIndicator","pnProductNav","pnProductNavContents","setAttribute","determineOverflow","moveIndicator","querySelector","last_known_scroll_position","ticking","doSomething","scroll_pos","addEventListener","scrollY","requestAnimationFrame","availableScrollLeft","scrollLeft","style","transform","navBarRightEdge","getBoundingClientRect","right","navBarScrollerRightEdge","availableScrollRight","Math","floor","styleOfTransform","getComputedStyle","tr","getPropertyValue","amount","abs","split","e","links","slice","call","forEach","item","target","indexOf","color","textPosition","container","left","distance","scroll","width","backgroundColor","content","containerMetrics","containerMetricsRight","containerMetricsLeft","contentMetrics","contentMetricsRight","contentMetricsLeft","root","factory","define","amd","exports","dragscroll","_window","_document","mousemove","mouseup","mousedown","EventListener","removeEventListener","newScrollX","newScrollY","dragged","reset","i","md","mu","mm","getElementsByClassName","lastClientX","lastClientY","pushed","scroller","cont","hasAttribute","elementFromPoint","pageX","pageY","clientX","clientY","preventDefault","scrollTop","body","readyState"],"mappings":"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","sourcesContent":["if (process.browser){\n\n    window.onload = function(){\n\n        var SETTINGS = {\n            navBarTravelling: false,\n            navBarTravelDirection: \"\",\n             navBarTravelDistance: 500\n        }\n\n        var colours = {\n            0: \"#867100\",\n            1: \"#7F4200\",\n            2: \"#99813D\",\n            3: \"#40FEFF\",\n            4: \"#14CC99\",\n            5: \"#00BAFF\",\n            6: \"#0082B2\",\n            7: \"#B25D7A\",\n            8: \"#00FF17\",\n            9: \"#006B49\",\n            10: \"#00B27A\",\n            11: \"#996B3D\",\n            12: \"#CC7014\",\n            13: \"#40FF8C\",\n            14: \"#FF3400\",\n            15: \"#ECBB5E\",\n            16: \"#ECBB0C\",\n            17: \"#B9D912\",\n            18: \"#253A93\",\n            19: \"#125FB9\",\n        }\n\n        document.documentElement.classList.remove(\"no-js\");\n        document.documentElement.classList.add(\"js\");\n\n        // Out advancer buttons\n        var pnAdvancerLeft = document.getElementById(\"pnAdvancerLeft\");\n        var pnAdvancerRight = document.getElementById(\"pnAdvancerRight\");\n        // the indicator\n        var pnIndicator = document.getElementById(\"pnIndicator\");\n\n        var pnProductNav = document.getElementById(\"pnProductNav\");\n        var pnProductNavContents = document.getElementById(\"pnProductNavContents\");\n\n        pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n\n        // Set the indicator\n        moveIndicator(pnProductNav.querySelector(\"[aria-selected=\\\"true\\\"]\"), colours[0]);\n\n        // Handle the scroll of the horizontal container\n        var last_known_scroll_position = 0;\n        var ticking = false;\n\n        function doSomething(scroll_pos) {\n            pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n        }\n\n        pnProductNav.addEventListener(\"scroll\", function() {\n            last_known_scroll_position = window.scrollY;\n            if (!ticking) {\n                window.requestAnimationFrame(function() {\n                    doSomething(last_known_scroll_position);\n                    ticking = false;\n                });\n            }\n            ticking = true;\n        });\n\n\n        pnAdvancerLeft.addEventListener(\"click\", function() {\n            // If in the middle of a move return\n            if (SETTINGS.navBarTravelling === true) {\n                return;\n            }\n            // If we have content overflowing both sides or on the left\n            if (determineOverflow(pnProductNavContents, pnProductNav) === \"left\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n                // Find how far this panel has been scrolled\n                var availableScrollLeft = pnProductNav.scrollLeft;\n                // If the space available is less than two lots of our desired distance, just move the whole amount\n                // otherwise, move by the amount in the settings\n                if (availableScrollLeft < SETTINGS.navBarTravelDistance * 2) {\n                    pnProductNavContents.style.transform = \"translateX(\" + availableScrollLeft + \"px)\";\n                } else {\n                    pnProductNavContents.style.transform = \"translateX(\" + SETTINGS.navBarTravelDistance + \"px)\";\n                }\n                // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n                pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n                // Update our settings\n                SETTINGS.navBarTravelDirection = \"left\";\n                SETTINGS.navBarTravelling = true;\n            }\n            // Now update the attribute in the DOM\n            pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n        });\n\n        pnAdvancerRight.addEventListener(\"click\", function() {\n        \tconsole.log('slave');\n            // If in the middle of a move return\n            if (SETTINGS.navBarTravelling === true) {\n                return;\n            }\n            // If we have content overflowing both sides or on the right\n            if (determineOverflow(pnProductNavContents, pnProductNav) === \"right\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n                // Get the right edge of the container and content\n                var navBarRightEdge = pnProductNavContents.getBoundingClientRect().right;\n                var navBarScrollerRightEdge = pnProductNav.getBoundingClientRect().right;\n                // Now we know how much space we have available to scroll\n                var availableScrollRight = Math.floor(navBarRightEdge - navBarScrollerRightEdge);\n                // If the space available is less than two lots of our desired distance, just move the whole amount\n                // otherwise, move by the amount in the settings\n                if (availableScrollRight < SETTINGS.navBarTravelDistance * 2) {\n                    pnProductNavContents.style.transform = \"translateX(-\" + availableScrollRight + \"px)\";\n                } else {\n                    pnProductNavContents.style.transform = \"translateX(-\" + SETTINGS.navBarTravelDistance + \"px)\";\n                }\n                // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n                pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n                // Update our settings\n                SETTINGS.navBarTravelDirection = \"right\";\n                SETTINGS.navBarTravelling = true;\n            }\n            // Now update the attribute in the DOM\n            pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n        });\n\n        pnProductNavContents.addEventListener(\n            \"transitionend\",\n            function() {\n                // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform\n                var styleOfTransform = window.getComputedStyle(pnProductNavContents, null);\n                var tr = styleOfTransform.getPropertyValue(\"-webkit-transform\") || styleOfTransform.getPropertyValue(\"transform\");\n                // If there is no transition we want to default to 0 and not null\n                var amount = Math.abs(parseInt(tr.split(\",\")[4]) || 0);\n                pnProductNavContents.style.transform = \"none\";\n                pnProductNavContents.classList.add(\"pn-ProductNav_Contents-no-transition\");\n                // Now lets set the scroll position\n                if (SETTINGS.navBarTravelDirection === \"left\") {\n                    pnProductNav.scrollLeft = pnProductNav.scrollLeft - amount;\n                } else {\n                    pnProductNav.scrollLeft = pnProductNav.scrollLeft + amount;\n                }\n                SETTINGS.navBarTravelling = false;\n            },\n            false\n        );\n\n        // Handle setting the currently active link\n        pnProductNavContents.addEventListener(\"click\", function(e) {\n            var links = [].slice.call(document.querySelectorAll(\".pn-ProductNav_Link\"));\n            links.forEach(function(item) {\n                item.setAttribute(\"aria-selected\", \"false\");\n            })\n            e.target.setAttribute(\"aria-selected\", \"true\");\n            // Pass the clicked item and it's colour to the move indicator function\n            moveIndicator(e.target, colours[links.indexOf(e.target)]);\n        });\n\n        // var count = 0;\n        function moveIndicator(item, color) {\n            var textPosition = item.getBoundingClientRect();\n            var container = pnProductNavContents.getBoundingClientRect().left;\n            var distance = textPosition.left - container;\n             var scroll = pnProductNavContents.scrollLeft;\n            pnIndicator.style.transform = \"translateX(\" + (distance + scroll) + \"px) scaleX(\" + textPosition.width * 0.01 + \")\";\n            // count = count += 100;\n            // pnIndicator.style.transform = \"translateX(\" + count + \"px)\";\n            \n            if (color) {\n                pnIndicator.style.backgroundColor = color;\n            }\n        }\n\n        function determineOverflow(content, container) {\n            var containerMetrics = container.getBoundingClientRect();\n            var containerMetricsRight = Math.floor(containerMetrics.right);\n            var containerMetricsLeft = Math.floor(containerMetrics.left);\n            var contentMetrics = content.getBoundingClientRect();\n            var contentMetricsRight = Math.floor(contentMetrics.right);\n            var contentMetricsLeft = Math.floor(contentMetrics.left);\n             if (containerMetricsLeft > contentMetricsLeft && containerMetricsRight < contentMetricsRight) {\n                return \"both\";\n            } else if (contentMetricsLeft < containerMetricsLeft) {\n                return \"left\";\n            } else if (contentMetricsRight > containerMetricsRight) {\n                return \"right\";\n            } else {\n                return \"none\";\n            }\n        }\n\n        /**\n         * @fileoverview dragscroll - scroll area by dragging\n         * @version 0.0.8\n         * \n         * @license MIT, see https://github.com/asvd/dragscroll\n         * @copyright 2015 asvd <heliosframework@gmail.com> \n         */\n\n\n        (function (root, factory) {\n            if (typeof define === 'function' && define.amd) {\n                define(['exports'], factory);\n            } else if (typeof exports !== 'undefined') {\n                factory(exports);\n            } else {\n                factory((root.dragscroll = {}));\n            }\n        }(this, function (exports) {\n            var _window = window;\n            var _document = document;\n            var mousemove = 'mousemove';\n            var mouseup = 'mouseup';\n            var mousedown = 'mousedown';\n            var EventListener = 'EventListener';\n            var addEventListener = 'add'+EventListener;\n            var removeEventListener = 'remove'+EventListener;\n            var newScrollX, newScrollY;\n\n            var dragged = [];\n            var reset = function(i, el) {\n                for (i = 0; i < dragged.length;) {\n                    el = dragged[i++];\n                    el = el.container || el;\n                    el[removeEventListener](mousedown, el.md, 0);\n                    _window[removeEventListener](mouseup, el.mu, 0);\n                    _window[removeEventListener](mousemove, el.mm, 0);\n                }\n\n                // cloning into array since HTMLCollection is updated dynamically\n                dragged = [].slice.call(_document.getElementsByClassName('dragscroll'));\n                for (i = 0; i < dragged.length;) {\n                    (function(el, lastClientX, lastClientY, pushed, scroller, cont){\n                        (cont = el.container || el)[addEventListener](\n                            mousedown,\n                            cont.md = function(e) {\n                                if (!el.hasAttribute('nochilddrag') ||\n                                    _document.elementFromPoint(\n                                        e.pageX, e.pageY\n                                    ) == cont\n                                ) {\n                                    pushed = 1;\n                                    lastClientX = e.clientX;\n                                    lastClientY = e.clientY;\n\n                                    e.preventDefault();\n                                }\n                            }, 0\n                        );\n\n                        _window[addEventListener](\n                            mouseup, cont.mu = function() {pushed = 0;}, 0\n                        );\n\n                        _window[addEventListener](\n                            mousemove,\n                            cont.mm = function(e) {\n                                if (pushed) {\n                                    (scroller = el.scroller||el).scrollLeft -=\n                                        newScrollX = (- lastClientX + (lastClientX=e.clientX));\n                                    scroller.scrollTop -=\n                                        newScrollY = (- lastClientY + (lastClientY=e.clientY));\n                                    if (el == _document.body) {\n                                        (scroller = _document.documentElement).scrollLeft -= newScrollX;\n                                        scroller.scrollTop -= newScrollY;\n                                    }\n                                }\n                            }, 0\n                        );\n                     })(dragged[i++]);\n                }\n            }\n\n          \n            if (_document.readyState == 'complete') {\n                reset();\n            } else {\n                _window[addEventListener]('load', reset, 0);\n            }\n\n            exports.reset = reset;\n            }));\n    }\n    function Check(el) {\n      var button = document.getElementById(\"itemChoose\");\n\n      var nbr_of_checked_no = document.querySelectorAll('input[type=radio][value=no]:checked').length;\n      var nbr_checked_radios = document.querySelectorAll('input[type=radio]:checked').length;\n\n      /*\n         'nbr_of_checked_no>0' : mean if at least one of the 'no' options checked\n         'nbr_checked_radios==0' : mean if no radio button is checked \n      */\n      if (nbr_of_checked_no>0 || nbr_checked_radios<4) {\n        button.disabled = true;\n      } else {\n        button.disabled = false;\n      }\n    }\n\n    function status(){\n        console.log('click');\n    }\n\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}