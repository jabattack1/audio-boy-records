{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\n\nif (process.browser) {\n  window.onload = function () {\n    var SETTINGSStore = {\n      navBarTravelling: false,\n      navBarTravelDirection: \"\",\n      navBarTravelDistance: 250\n    };\n    var coloursStore = {\n      0: \"#867100\",\n      1: \"#7F4200\",\n      2: \"#99813D\",\n      3: \"#40FEFF\",\n      4: \"#14CC99\",\n      5: \"#00BAFF\",\n      6: \"#0082B2\",\n      7: \"#B25D7A\",\n      8: \"#00FF17\",\n      9: \"#006B49\",\n      10: \"#00B27A\",\n      11: \"#996B3D\",\n      12: \"#CC7014\",\n      13: \"#40FF8C\",\n      14: \"#FF3400\",\n      15: \"#ECBB5E\",\n      16: \"#ECBB0C\",\n      17: \"#B9D912\",\n      18: \"#253A93\",\n      19: \"#125FB9\"\n    };\n    document.documentElement.classList.remove(\"no-js\");\n    document.documentElement.classList.add(\"js\");\n    console.log('lion');\n    console.log(document.getElementById(\"pnAdvancerLeftStore\")); // Out advancer buttons\n\n    var pnAdvancerLeftStore = document.getElementById(\"pnAdvancerLeftStore\");\n    var pnAdvancerRightStore = document.getElementById(\"pnAdvancerRightStore\"); // the indicator\n\n    var pnIndicatorStore = document.getElementById(\"pnIndicatorStore\");\n    var pnProductNavStore = document.getElementById(\"pnProductNavStore\");\n    var pnProductNavContentsStore = document.getElementById(\"pnProductNavContentsStore\");\n    pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore)); // Set the indicator\n\n    moveIndicatorStore(pnProductNavStore.querySelector(\"[aria-selected=\\\"true\\\"]\"), coloursStore[0]); // Handle the scroll of the horizontal container\n\n    var last_known_scroll_positionStore = 0;\n    var tickingStore = false;\n\n    function doSomethingStore(scroll_pos) {\n      pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n    }\n\n    pnProductNavStore.addEventListener(\"scroll\", function () {\n      last_known_scroll_positionStore = window.scrollY;\n\n      if (!tickingStore) {\n        window.requestAnimationFrame(function () {\n          doSomethingStore(last_known_scroll_positionStore);\n          tickingStore = false;\n        });\n      }\n\n      tickingStore = true;\n    });\n    pnAdvancerLeftStore.addEventListener(\"click\", function () {\n      // If in the middle of a move return\n      if (SETTINGSStore.navBarTravelling === true) {\n        return;\n      } // If we have content overflowing both sides or on the left\n\n\n      if (determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"left\" || determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"both\") {\n        // Find how far this panel has been scrolled\n        var availableScrollLeftStore = pnProductNavStore.scrollLeft; // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settingsStore\n\n        if (availableScrollLeftStore < SETTINGSStore.navBarTravelDistance * 2) {\n          pnProductNavContentsStore.style.transform = \"translateX(\" + availableScrollLeftStore + \"px)\";\n        } else {\n          pnProductNavContentsStore.style.transform = \"translateX(\" + SETTINGSStore.navBarTravelDistance + \"px)\";\n        } // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\n\n        pnProductNavContentsStore.classList.remove(\"pn-ProductNav_Contents-no-transition\"); // Update our settingsStore\n\n        SETTINGSStore.navBarTravelDirection = \"left\";\n        SETTINGSStore.navBarTravelling = true;\n      } // Now update the attribute in the DOM\n\n\n      pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n    });\n    pnAdvancerRightStore.addEventListener(\"click\", function () {\n      // If in the middle of a move return\n      if (SETTINGSStore.navBarTravelling === true) {\n        return;\n      } // If we have content overflowing both sides or on the right\n\n\n      if (determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"right\" || determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"both\") {\n        // Get the right edge of the container and content\n        var navBarRightEdgeStore = pnProductNavContentsStore.getBoundingClientRect().right;\n        var navBarScrollerRightEdgeStore = pnProductNavStore.getBoundingClientRect().right; // Now we know how much space we have available to scroll\n\n        var availableScrollRightStore = Math.floor(navBarRightEdgeStore - navBarScrollerRightEdgeStore); // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settingsStore\n\n        if (availableScrollRightStore < SETTINGSStore.navBarTravelDistance * 2) {\n          pnProductNavContentsStore.style.transform = \"translateX(-\" + availableScrollRightStore + \"px)\";\n        } else {\n          pnProductNavContentsStore.style.transform = \"translateX(-\" + SETTINGSStore.navBarTravelDistance + \"px)\";\n        } // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\n\n        pnProductNavContentsStore.classList.remove(\"pn-ProductNav_Contents-no-transition\"); // Update our settingsStore\n\n        SETTINGSStore.navBarTravelDirection = \"right\";\n        SETTINGSStore.navBarTravelling = true;\n      } // Now update the attribute in the DOM\n\n\n      pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n    });\n    pnProductNavContentsStore.addEventListener(\"transitionend\", function () {\n      // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform\n      var styleOfTransformStore = window.getComputedStyle(pnProductNavContentsStore, null);\n      var trStore = styleOfTransformStore.getPropertyValue(\"-webkit-transform\") || styleOfTransformStore.getPropertyValue(\"transform\"); // If there is no transition we want to default to 0 and not null\n\n      var amountStore = Math.abs(_parseInt(tr.split(\",\")[4]) || 0);\n      pnProductNavContentsStore.style.transform = \"none\";\n      pnProductNavContentsStore.classList.add(\"pn-ProductNav_Contents-no-transition\"); // Now lets set the scroll position\n\n      if (SETTINGSStore.navBarTravelDirection === \"left\") {\n        pnProductNavStore.scrollLeft = pnProductNavStore.scrollLeft - amountStore;\n      } else {\n        pnProductNavStore.scrollLeft = pnProductNavStore.scrollLeft + amountStore;\n      }\n\n      SETTINGSStore.navBarTravelling = false;\n    }, false); // Handle setting the currently active link\n\n    pnProductNavContentsStore.addEventListener(\"click\", function (e) {\n      var linksStore = [].slice.call(document.querySelectorAll(\".pn-ProductNav_LinkStore\"));\n      linksStore.forEach(function (item) {\n        item.setAttribute(\"aria-selected\", \"false\");\n      });\n      e.target.setAttribute(\"aria-selected\", \"true\"); // Pass the clicked item and it's colour to the move indicator function\n\n      moveIndicatorStore(e.target, coloursStore[linksStore.indexOf(e.target)]);\n    }); // var count = 0;\n\n    function moveIndicatorStore(item, color) {\n      var textPosition = item.getBoundingClientRect();\n      var container = pnProductNavContentsStore.getBoundingClientRect().left;\n      var distance = textPosition.left - container;\n      var scroll = pnProductNavContentsStore.scrollLeft;\n      pnIndicatorStore.style.transform = \"translateX(\" + (distance + scroll) + \"px) scaleX(\" + textPosition.width * 0.01 + \")\"; // count = count += 100;\n      // pnIndicator.style.transform = \"translateX(\" + count + \"px)\";\n\n      if (color) {\n        pnIndicatorStore.style.backgroundColor = color;\n      }\n    }\n\n    function determineOverflowStore(content, container) {\n      var containerMetrics = container.getBoundingClientRect();\n      var containerMetricsRight = Math.floor(containerMetrics.right);\n      var containerMetricsLeft = Math.floor(containerMetrics.left);\n      var contentMetrics = content.getBoundingClientRect();\n      var contentMetricsRight = Math.floor(contentMetrics.right);\n      var contentMetricsLeft = Math.floor(contentMetrics.left);\n\n      if (containerMetricsLeft > contentMetricsLeft && containerMetricsRight < contentMetricsRight) {\n        return \"both\";\n      } else if (contentMetricsLeft < containerMetricsLeft) {\n        return \"left\";\n      } else if (contentMetricsRight > containerMetricsRight) {\n        return \"right\";\n      } else {\n        return \"none\";\n      }\n    }\n    /**\n     * @fileoverview dragscroll - scroll area by dragging\n     * @version 0.0.8\n     * \n     * @license MIT, see https://github.com/asvd/dragscroll\n     * @copyright 2015 asvd <heliosframework@gmail.com> \n     */\n\n\n    (function (root, factory) {\n      if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n      } else if (typeof exports !== 'undefined') {\n        factory(exports);\n      } else {\n        factory(root.dragscroll = {});\n      }\n    })(this, function (exports) {\n      var _window = window;\n      var _document = document;\n      var mousemove = 'mousemove';\n      var mouseup = 'mouseup';\n      var mousedown = 'mousedown';\n      var EventListener = 'EventListener';\n      var addEventListener = 'add' + EventListener;\n      var removeEventListener = 'remove' + EventListener;\n      var newScrollX, newScrollY;\n      var dragged = [];\n\n      var reset = function reset(i, el) {\n        for (i = 0; i < dragged.length;) {\n          el = dragged[i++];\n          el = el.container || el;\n          el[removeEventListener](mousedown, el.md, 0);\n\n          _window[removeEventListener](mouseup, el.mu, 0);\n\n          _window[removeEventListener](mousemove, el.mm, 0);\n        } // cloning into array since HTMLCollection is updated dynamically\n\n\n        dragged = [].slice.call(_document.getElementsByClassName('dragscroll'));\n\n        for (i = 0; i < dragged.length;) {\n          (function (el, lastClientX, lastClientY, pushed, scroller, cont) {\n            (cont = el.container || el)[addEventListener](mousedown, cont.md = function (e) {\n              if (!el.hasAttribute('nochilddrag') || _document.elementFromPoint(e.pageX, e.pageY) == cont) {\n                pushed = 1;\n                lastClientX = e.clientX;\n                lastClientY = e.clientY;\n                e.preventDefault();\n              }\n            }, 0);\n\n            _window[addEventListener](mouseup, cont.mu = function () {\n              pushed = 0;\n            }, 0);\n\n            _window[addEventListener](mousemove, cont.mm = function (e) {\n              if (pushed) {\n                (scroller = el.scroller || el).scrollLeft -= newScrollX = -lastClientX + (lastClientX = e.clientX);\n                scroller.scrollTop -= newScrollY = -lastClientY + (lastClientY = e.clientY);\n\n                if (el == _document.body) {\n                  (scroller = _document.documentElement).scrollLeft -= newScrollX;\n                  scroller.scrollTop -= newScrollY;\n                }\n              }\n            }, 0);\n          })(dragged[i++]);\n        }\n      };\n\n      if (_document.readyState == 'complete') {\n        reset();\n      } else {\n        _window[addEventListener]('load', reset, 0);\n      }\n\n      exports.reset = reset;\n    });\n  };\n}","map":{"version":3,"sources":["/Users/peterhahn/src/new/audio-boy/scrollStore.js"],"names":["process","browser","window","onload","SETTINGSStore","navBarTravelling","navBarTravelDirection","navBarTravelDistance","coloursStore","document","documentElement","classList","remove","add","console","log","getElementById","pnAdvancerLeftStore","pnAdvancerRightStore","pnIndicatorStore","pnProductNavStore","pnProductNavContentsStore","setAttribute","determineOverflowStore","moveIndicatorStore","querySelector","last_known_scroll_positionStore","tickingStore","doSomethingStore","scroll_pos","addEventListener","scrollY","requestAnimationFrame","availableScrollLeftStore","scrollLeft","style","transform","navBarRightEdgeStore","getBoundingClientRect","right","navBarScrollerRightEdgeStore","availableScrollRightStore","Math","floor","styleOfTransformStore","getComputedStyle","trStore","getPropertyValue","amountStore","abs","tr","split","e","linksStore","slice","call","querySelectorAll","forEach","item","target","indexOf","color","textPosition","container","left","distance","scroll","width","backgroundColor","content","containerMetrics","containerMetricsRight","containerMetricsLeft","contentMetrics","contentMetricsRight","contentMetricsLeft","root","factory","define","amd","exports","dragscroll","_window","_document","mousemove","mouseup","mousedown","EventListener","removeEventListener","newScrollX","newScrollY","dragged","reset","i","el","length","md","mu","mm","getElementsByClassName","lastClientX","lastClientY","pushed","scroller","cont","hasAttribute","elementFromPoint","pageX","pageY","clientX","clientY","preventDefault","scrollTop","body","readyState"],"mappings":"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","sourcesContent":["if (process.browser){\nwindow.onload = function(){\n\nvar SETTINGSStore = {\n    navBarTravelling: false,\n    navBarTravelDirection: \"\",\n    navBarTravelDistance: 250\n}\n\nvar coloursStore = {\n    0: \"#867100\",\n    1: \"#7F4200\",\n    2: \"#99813D\",\n    3: \"#40FEFF\",\n    4: \"#14CC99\",\n    5: \"#00BAFF\",\n    6: \"#0082B2\",\n    7: \"#B25D7A\",\n    8: \"#00FF17\",\n    9: \"#006B49\",\n    10: \"#00B27A\",\n    11: \"#996B3D\",\n    12: \"#CC7014\",\n    13: \"#40FF8C\",\n    14: \"#FF3400\",\n    15: \"#ECBB5E\",\n    16: \"#ECBB0C\",\n    17: \"#B9D912\",\n    18: \"#253A93\",\n    19: \"#125FB9\",\n}\n\ndocument.documentElement.classList.remove(\"no-js\");\ndocument.documentElement.classList.add(\"js\");\nconsole.log('lion');\nconsole.log(document.getElementById(\"pnAdvancerLeftStore\"));\n// Out advancer buttons\nvar pnAdvancerLeftStore = document.getElementById(\"pnAdvancerLeftStore\");\nvar pnAdvancerRightStore = document.getElementById(\"pnAdvancerRightStore\");\n// the indicator\nvar pnIndicatorStore = document.getElementById(\"pnIndicatorStore\");\n\nvar pnProductNavStore = document.getElementById(\"pnProductNavStore\");\nvar pnProductNavContentsStore = document.getElementById(\"pnProductNavContentsStore\");\n\npnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n\n// Set the indicator\nmoveIndicatorStore(pnProductNavStore.querySelector(\"[aria-selected=\\\"true\\\"]\"), coloursStore[0]);\n\n// Handle the scroll of the horizontal container\nvar last_known_scroll_positionStore = 0;\nvar tickingStore = false;\n\nfunction doSomethingStore(scroll_pos) {\n    pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n}\n\npnProductNavStore.addEventListener(\"scroll\", function() {\n    last_known_scroll_positionStore = window.scrollY;\n    if (!tickingStore) {\n        window.requestAnimationFrame(function() {\n            doSomethingStore(last_known_scroll_positionStore);\n            tickingStore = false;\n        });\n    }\n    tickingStore = true;\n});\n\n\npnAdvancerLeftStore.addEventListener(\"click\", function() {\n    // If in the middle of a move return\n    if (SETTINGSStore.navBarTravelling === true) {\n        return;\n    }\n    // If we have content overflowing both sides or on the left\n    if (determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"left\" || determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"both\") {\n        // Find how far this panel has been scrolled\n        var availableScrollLeftStore = pnProductNavStore.scrollLeft;\n        // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settingsStore\n        if (availableScrollLeftStore < SETTINGSStore.navBarTravelDistance * 2) {\n            pnProductNavContentsStore.style.transform = \"translateX(\" + availableScrollLeftStore + \"px)\";\n        } else {\n            pnProductNavContentsStore.style.transform = \"translateX(\" + SETTINGSStore.navBarTravelDistance + \"px)\";\n        }\n        // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n        pnProductNavContentsStore.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n        // Update our settingsStore\n        SETTINGSStore.navBarTravelDirection = \"left\";\n        SETTINGSStore.navBarTravelling = true;\n    }\n    // Now update the attribute in the DOM\n    pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n});\n\npnAdvancerRightStore.addEventListener(\"click\", function() {\n    // If in the middle of a move return\n    if (SETTINGSStore.navBarTravelling === true) {\n        return;\n    }\n    // If we have content overflowing both sides or on the right\n    if (determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"right\" || determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"both\") {\n        // Get the right edge of the container and content\n        var navBarRightEdgeStore = pnProductNavContentsStore.getBoundingClientRect().right;\n        var navBarScrollerRightEdgeStore = pnProductNavStore.getBoundingClientRect().right;\n        // Now we know how much space we have available to scroll\n        var availableScrollRightStore = Math.floor(navBarRightEdgeStore - navBarScrollerRightEdgeStore);\n        // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settingsStore\n        if (availableScrollRightStore < SETTINGSStore.navBarTravelDistance * 2) {\n            pnProductNavContentsStore.style.transform = \"translateX(-\" + availableScrollRightStore + \"px)\";\n        } else {\n            pnProductNavContentsStore.style.transform = \"translateX(-\" + SETTINGSStore.navBarTravelDistance + \"px)\";\n        }\n        // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n        pnProductNavContentsStore.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n        // Update our settingsStore\n        SETTINGSStore.navBarTravelDirection = \"right\";\n        SETTINGSStore.navBarTravelling = true;\n    }\n    // Now update the attribute in the DOM\n    pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n});\n\npnProductNavContentsStore.addEventListener(\n    \"transitionend\",\n    function() {\n        // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform\n        var styleOfTransformStore = window.getComputedStyle(pnProductNavContentsStore, null);\n        var trStore = styleOfTransformStore.getPropertyValue(\"-webkit-transform\") || styleOfTransformStore.getPropertyValue(\"transform\");\n        // If there is no transition we want to default to 0 and not null\n        var amountStore = Math.abs(parseInt(tr.split(\",\")[4]) || 0);\n        pnProductNavContentsStore.style.transform = \"none\";\n        pnProductNavContentsStore.classList.add(\"pn-ProductNav_Contents-no-transition\");\n        // Now lets set the scroll position\n        if (SETTINGSStore.navBarTravelDirection === \"left\") {\n            pnProductNavStore.scrollLeft = pnProductNavStore.scrollLeft - amountStore;\n        } else {\n            pnProductNavStore.scrollLeft = pnProductNavStore.scrollLeft + amountStore;\n        }\n        SETTINGSStore.navBarTravelling = false;\n    },\n    false\n);\n\n// Handle setting the currently active link\npnProductNavContentsStore.addEventListener(\"click\", function(e) {\n    var linksStore = [].slice.call(document.querySelectorAll(\".pn-ProductNav_LinkStore\"));\n    linksStore.forEach(function(item) {\n        item.setAttribute(\"aria-selected\", \"false\");\n    })\n    e.target.setAttribute(\"aria-selected\", \"true\");\n    // Pass the clicked item and it's colour to the move indicator function\n    moveIndicatorStore(e.target, coloursStore[linksStore.indexOf(e.target)]);\n});\n\n// var count = 0;\nfunction moveIndicatorStore(item, color) {\n    var textPosition = item.getBoundingClientRect();\n    var container = pnProductNavContentsStore.getBoundingClientRect().left;\n    var distance = textPosition.left - container;\n     var scroll = pnProductNavContentsStore.scrollLeft;\n    pnIndicatorStore.style.transform = \"translateX(\" + (distance + scroll) + \"px) scaleX(\" + textPosition.width * 0.01 + \")\";\n    // count = count += 100;\n    // pnIndicator.style.transform = \"translateX(\" + count + \"px)\";\n    \n    if (color) {\n        pnIndicatorStore.style.backgroundColor = color;\n    }\n}\n\nfunction determineOverflowStore(content, container) {\n    var containerMetrics = container.getBoundingClientRect();\n    var containerMetricsRight = Math.floor(containerMetrics.right);\n    var containerMetricsLeft = Math.floor(containerMetrics.left);\n    var contentMetrics = content.getBoundingClientRect();\n    var contentMetricsRight = Math.floor(contentMetrics.right);\n    var contentMetricsLeft = Math.floor(contentMetrics.left);\n     if (containerMetricsLeft > contentMetricsLeft && containerMetricsRight < contentMetricsRight) {\n        return \"both\";\n    } else if (contentMetricsLeft < containerMetricsLeft) {\n        return \"left\";\n    } else if (contentMetricsRight > containerMetricsRight) {\n        return \"right\";\n    } else {\n        return \"none\";\n    }\n}\n\n/**\n * @fileoverview dragscroll - scroll area by dragging\n * @version 0.0.8\n * \n * @license MIT, see https://github.com/asvd/dragscroll\n * @copyright 2015 asvd <heliosframework@gmail.com> \n */\n\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== 'undefined') {\n        factory(exports);\n    } else {\n        factory((root.dragscroll = {}));\n    }\n}(this, function (exports) {\n    var _window = window;\n    var _document = document;\n    var mousemove = 'mousemove';\n    var mouseup = 'mouseup';\n    var mousedown = 'mousedown';\n    var EventListener = 'EventListener';\n    var addEventListener = 'add'+EventListener;\n    var removeEventListener = 'remove'+EventListener;\n    var newScrollX, newScrollY;\n\n    var dragged = [];\n    var reset = function(i, el) {\n        for (i = 0; i < dragged.length;) {\n            el = dragged[i++];\n            el = el.container || el;\n            el[removeEventListener](mousedown, el.md, 0);\n            _window[removeEventListener](mouseup, el.mu, 0);\n            _window[removeEventListener](mousemove, el.mm, 0);\n        }\n\n        // cloning into array since HTMLCollection is updated dynamically\n        dragged = [].slice.call(_document.getElementsByClassName('dragscroll'));\n        for (i = 0; i < dragged.length;) {\n            (function(el, lastClientX, lastClientY, pushed, scroller, cont){\n                (cont = el.container || el)[addEventListener](\n                    mousedown,\n                    cont.md = function(e) {\n                        if (!el.hasAttribute('nochilddrag') ||\n                            _document.elementFromPoint(\n                                e.pageX, e.pageY\n                            ) == cont\n                        ) {\n                            pushed = 1;\n                            lastClientX = e.clientX;\n                            lastClientY = e.clientY;\n\n                            e.preventDefault();\n                        }\n                    }, 0\n                );\n\n                _window[addEventListener](\n                    mouseup, cont.mu = function() {pushed = 0;}, 0\n                );\n\n                _window[addEventListener](\n                    mousemove,\n                    cont.mm = function(e) {\n                        if (pushed) {\n                            (scroller = el.scroller||el).scrollLeft -=\n                                newScrollX = (- lastClientX + (lastClientX=e.clientX));\n                            scroller.scrollTop -=\n                                newScrollY = (- lastClientY + (lastClientY=e.clientY));\n                            if (el == _document.body) {\n                                (scroller = _document.documentElement).scrollLeft -= newScrollX;\n                                scroller.scrollTop -= newScrollY;\n                            }\n                        }\n                    }, 0\n                );\n             })(dragged[i++]);\n        }\n    }\n\n      \n    if (_document.readyState == 'complete') {\n        reset();\n    } else {\n        _window[addEventListener]('load', reset, 0);\n    }\n\n    exports.reset = reset;\n}));\n}\n}"]},"metadata":{},"sourceType":"module"}