{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/peterhahn/src/new/audio-boy/components/app.js\";\n\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport ScrollMenu from \"react-horizontal-scrolling-menu\";\nimport '../css/styles.css';\nimport '../css/normalize.css';\nimport '../css/skeleton.css';\nimport News from './news.js';\nvar list = [];\n\nvar MenuItem = function MenuItem(_ref) {\n  var text = _ref.text,\n      selected = _ref.selected;\n  return React.createElement(\"div\", {\n    className: \"menu-item \".concat(selected ? \"active\" : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, _this.props.news.map(function (post, i) {\n    return React.createElement(News, _extends({}, _this.props, {\n      key: i,\n      i: i,\n      news: post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }));\n  }), \"}\");\n};\n\nexport var Menu = function Menu(list, selected) {\n  return list.map(function (el) {\n    var name = el.name;\n    return React.createElement(MenuItem, {\n      text: name,\n      key: name,\n      selected: selected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  });\n};\n\nvar Arrow = function Arrow(_ref2) {\n  var text = _ref2.text,\n      className = _ref2.className;\n  return React.createElement(\"div\", {\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, text);\n};\n\nArrow.propTypes = {\n  text: PropTypes.string,\n  className: PropTypes.string\n};\nexport var ArrowLeft = Arrow({\n  text: \"<\",\n  className: \"arrow-prev\"\n});\nexport var ArrowRight = Arrow({\n  text: \">\",\n  className: \"arrow-next\"\n});\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this2;\n\n    _classCallCheck(this, App);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this2), \"state\", {\n      alignCenter: true,\n      clickWhenDrag: false,\n      dragging: true,\n      hideArrows: true,\n      hideSingleArrow: true,\n      itemsCount: list.length,\n      selected: \"item1\",\n      translate: 0,\n      transition: 0.4,\n      wheel: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"onUpdate\", function (_ref3) {\n      var translate = _ref3.translate;\n      console.log(\"onUpdate: translate: \".concat(translate));\n\n      _this2.setState({\n        translate: translate\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"onSelect\", function (key) {\n      console.log(\"onSelect: \".concat(key));\n\n      _this2.setState({\n        selected: key\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"setItemsCount\", function (ev) {\n      var _this2$state = _this2.state,\n          _this2$state$itemsCou = _this2$state.itemsCount,\n          itemsCount = _this2$state$itemsCou === void 0 ? list.length : _this2$state$itemsCou,\n          selected = _this2$state.selected;\n      var val = +ev.target.value;\n      var itemsCountNew = !isNaN(val) && val <= list.length && val >= 0 ? +ev.target.value : list.length;\n      var itemsCountChanged = itemsCount !== itemsCountNew;\n\n      if (itemsCountChanged) {\n        _this2.menuItems = Menu(list.slice(0, itemsCountNew), selected);\n\n        _this2.setState({\n          itemsCount: itemsCountNew\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"setSelected\", function (ev) {\n      var value = ev.target.value;\n\n      _this2.setState({\n        selected: String(value)\n      });\n    });\n\n    _this2.menu = null;\n    _this2.menuItems = Menu(list.slice(0, list.length), _this2.state.selected);\n    return _this2;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var alignCenter = prevState.alignCenter;\n      var alignCenterNew = this.state.alignCenter;\n\n      if (alignCenter !== alignCenterNew) {\n        this.menu.setInitial();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          alignCenter = _this$state.alignCenter,\n          clickWhenDrag = _this$state.clickWhenDrag,\n          hideArrows = _this$state.hideArrows,\n          dragging = _this$state.dragging,\n          hideSingleArrow = _this$state.hideSingleArrow,\n          itemsCount = _this$state.itemsCount,\n          selected = _this$state.selected,\n          translate = _this$state.translate,\n          transition = _this$state.transition,\n          wheel = _this$state.wheel;\n      var menu = this.menuItems;\n      var checkboxStyle = {\n        margin: \"5px 10px\"\n      };\n      var valueStyle = {\n        margin: \"5px 10px\",\n        display: \"inline-block\"\n      };\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(ScrollMenu, {\n        ref: function ref(el) {\n          return _this3.menu = el;\n        },\n        data: menu,\n        arrowLeft: ArrowLeft,\n        arrowRight: ArrowRight,\n        hideArrows: hideArrows,\n        hideSingleArrow: hideSingleArrow,\n        transition: +transition,\n        onUpdate: this.onUpdate,\n        onSelect: this.onSelect,\n        selected: selected,\n        translate: translate,\n        alignCenter: alignCenter,\n        dragging: dragging,\n        clickWhenDrag: clickWhenDrag,\n        wheel: wheel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/peterhahn/src/new/audio-boy/components/app.js"],"names":["React","Component","ReactDOM","PropTypes","ScrollMenu","News","list","MenuItem","text","selected","props","news","map","post","i","Menu","el","name","Arrow","className","propTypes","string","ArrowLeft","ArrowRight","App","alignCenter","clickWhenDrag","dragging","hideArrows","hideSingleArrow","itemsCount","length","translate","transition","wheel","console","log","setState","key","ev","state","val","target","value","itemsCountNew","isNaN","itemsCountChanged","menuItems","slice","String","menu","prevProps","prevState","alignCenterNew","setInitial","checkboxStyle","margin","valueStyle","display","onUpdate","onSelect"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport ScrollMenu from \"react-horizontal-scrolling-menu\";\n\nimport '../css/styles.css';\nimport '../css/normalize.css';\nimport '../css/skeleton.css';\n\nimport News from './news.js'\n\n\n\nconst list = [];\n\nconst MenuItem = ({ text, selected }) => {\n\t\n  return <div className={`menu-item ${selected ? \"active\" : \"\"}`}>{this.props.news.map((post, i) => <News {...this.props} key={i} i={i} news={post} />)}}</div>;\n};\n\nexport const Menu = (list, selected) =>\n  list.map(el => {\n    const { name } = el;\n\n    return <MenuItem text={name} key={name} selected={selected} />;\n  });\n\nconst Arrow = ({ text, className }) => {\n  return <div className={className}>{text}</div>;\n};\nArrow.propTypes = {\n  text: PropTypes.string,\n  className: PropTypes.string\n};\n\nexport const ArrowLeft = Arrow({ text: \"<\", className: \"arrow-prev\" });\nexport const ArrowRight = Arrow({ text: \">\", className: \"arrow-next\" });\n\nclass App extends Component {\n\n  state = {\n    alignCenter: true,\n    clickWhenDrag: false,\n    dragging: true,\n    hideArrows: true,\n    hideSingleArrow: true,\n    itemsCount: list.length,\n    selected: \"item1\",\n    translate: 0,\n    transition: 0.4,\n    wheel: true\n  };\n\n  constructor(props) {\n    super(props);\n    this.menu = null;\n    this.menuItems = Menu(list.slice(0, list.length), this.state.selected);\n  }\n\n  onUpdate = ({ translate }) => {\n    console.log(`onUpdate: translate: ${translate}`);\n    this.setState({ translate });\n  };\n\n  onSelect = key => {\n    console.log(`onSelect: ${key}`);\n    this.setState({ selected: key });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { alignCenter } = prevState;\n    const { alignCenter: alignCenterNew } = this.state;\n    if (alignCenter !== alignCenterNew) {\n      this.menu.setInitial();\n    }\n  }\n\n  setItemsCount = ev => {\n    const { itemsCount = list.length, selected } = this.state;\n    const val = +ev.target.value;\n    const itemsCountNew =\n      !isNaN(val) && val <= list.length && val >= 0\n        ? +ev.target.value\n        : list.length;\n    const itemsCountChanged = itemsCount !== itemsCountNew;\n\n    if (itemsCountChanged) {\n      this.menuItems = Menu(list.slice(0, itemsCountNew), selected);\n      this.setState({\n        itemsCount: itemsCountNew\n      });\n    }\n  };\n\n  setSelected = ev => {\n    const { value } = ev.target;\n    this.setState({ selected: String(value) });\n  };\n\n  render() {\n    const {\n      alignCenter,\n      clickWhenDrag,\n      hideArrows,\n      dragging,\n      hideSingleArrow,\n      itemsCount,\n      selected,\n      translate,\n      transition,\n      wheel\n    } = this.state;\n\n    const menu = this.menuItems;\n\n    const checkboxStyle = {\n      margin: \"5px 10px\"\n    };\n    const valueStyle = {\n      margin: \"5px 10px\",\n      display: \"inline-block\"\n    };\n\n    return (\n      <div className=\"App\">\n\n        <ScrollMenu\n          ref={el => (this.menu = el)}\n          data={menu}\n          arrowLeft={ArrowLeft}\n          arrowRight={ArrowRight}\n          hideArrows={hideArrows}\n          hideSingleArrow={hideSingleArrow}\n          transition={+transition}\n          onUpdate={this.onUpdate}\n          onSelect={this.onSelect}\n          selected={selected}\n          translate={translate}\n          alignCenter={alignCenter}\n          dragging={dragging}\n          clickWhenDrag={clickWhenDrag}\n          wheel={wheel}\n        />\n\n\n     </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}