{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\n\nif (process.browser) {\n  window.onload = function () {\n    var SETTINGSStore = {\n      navBarTravellingStore: false,\n      navBarTravelDirectionStore: \"\",\n      navBarTravelDistanceStore: 250\n    };\n    var coloursStore = {\n      0: \"#867100\",\n      1: \"#7F4200\",\n      2: \"#99813D\",\n      3: \"#40FEFF\",\n      4: \"#14CC99\",\n      5: \"#00BAFF\",\n      6: \"#0082B2\",\n      7: \"#B25D7A\",\n      8: \"#00FF17\",\n      9: \"#006B49\",\n      10: \"#00B27A\",\n      11: \"#996B3D\",\n      12: \"#CC7014\",\n      13: \"#40FF8C\",\n      14: \"#FF3400\",\n      15: \"#ECBB5E\",\n      16: \"#ECBB0C\",\n      17: \"#B9D912\",\n      18: \"#253A93\",\n      19: \"#125FB9\"\n    };\n    document.documentElement.classList.remove(\"no-js\");\n    document.documentElement.classList.add(\"js\");\n    console.log('lion');\n    console.log(document.getElementById(\"pnAdvancerLeftStore\")); // Out advancer buttons\n\n    var pnAdvancerLeftStoreStore = document.getElementById(\"pnAdvancerLeftStore\");\n    var pnAdvancerRightStore = document.getElementById(\"pnAdvancerRightStore\"); // the indicator\n\n    var pnIndicatorStore = document.getElementById(\"pnIndicatorStore\");\n    var pnProductNavStore = document.getElementById(\"pnProductNavStore\");\n    var pnProductNavContentsStore = document.getElementById(\"pnProductNavContentsStore\");\n    pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore)); // Set the indicator\n\n    moveIndicatorStore(pnProductNavStore.querySelector(\"[aria-selected=\\\"true\\\"]\"), coloursStore[0]); // Handle the scroll of the horizontal container\n\n    var last_known_scroll_positionStore = 0;\n    var tickingStore = false;\n\n    function doSomethingStore(scroll_pos) {\n      pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n    }\n\n    pnProductNavStore.addEventListener(\"scroll\", function () {\n      last_known_scroll_positionStore = window.scrollY;\n\n      if (!tickingStore) {\n        window.requestAnimationFrame(function () {\n          doSomething(last_known_scroll_positionStore);\n          tickingStore = false;\n        });\n      }\n\n      tickingStore = true;\n    });\n    pnAdvancerLeftStore.addEventListener(\"click\", function () {\n      // If in the middle of a move return\n      if (SETTINGSStore.navBarTravellingStore === true) {\n        return;\n      } // If we have content overflowing both sides or on the left\n\n\n      if (determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"left\" || determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"both\") {\n        // Find how far this panel has been scrolled\n        var availableScrollLeftStore = pnProductNav.scrollLeftStore; // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n\n        if (availableScrollLeftStore < SETTINGSStore.navBarTravelDistanceStore * 2) {\n          pnProductNavContentsStore.style.transform = \"translateX(\" + availableScrollLeftStore + \"px)\";\n        } else {\n          pnProductNavContentsStore.style.transform = \"translateX(\" + SETTINGSStore.navBarTravelDistanceStore + \"px)\";\n        } // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\n\n        pnProductNavContentsStore.classList.remove(\"pn-ProductNav_Contents-no-transition\"); // Update our settings\n\n        SETTINGSStore.navBarTravelDirectionStore = \"left\";\n        SETTINGSStore.navBarTravellingStore = true;\n      } // Now update the attribute in the DOM\n\n\n      pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n    });\n    pnAdvancerRightStore.addEventListener(\"click\", function () {\n      // If in the middle of a move return\n      if (SETTINGSStore.navBarTravellingStore === true) {\n        return;\n      } // If we have content overflowing both sides or on the right\n\n\n      if (determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"right\" || determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"both\") {\n        // Get the right edge of the container and content\n        var navBarRightEdgeStore = pnProductNavContentsStore.getBoundingClientRect().right;\n        var navBarScrollerRightEdgeStore = pnProductNavStore.getBoundingClientRect().right; // Now we know how much space we have available to scroll\n\n        var availableScrollRightStore = Math.floor(navBarRightEdgeStore - navBarScrollerRightEdgeStore); // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n\n        if (availableScrollRightStore < SETTINGSStore.navBarTravelDistanceStore * 2) {\n          pnProductNavContentsStore.style.transform = \"translateX(-\" + availableScrollRightStore + \"px)\";\n        } else {\n          pnProductNavContentsStore.style.transform = \"translateX(-\" + SETTINGSStore.navBarTravelDistanceStore + \"px)\";\n        } // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\n\n        pnProductNavContentsStore.classList.remove(\"pn-ProductNav_Contents-no-transition\"); // Update our settings\n\n        SETTINGSStore.navBarTravelDirectionStore = \"right\";\n        SETTINGSStore.navBarTravellingStore = true;\n      } // Now update the attribute in the DOM\n\n\n      pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n    });\n    pnProductNavContentsStore.addEventListener(\"transitionend\", function () {\n      // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform\n      var styleOfTransformStore = window.getComputedStyle(pnProductNavContentsStore, null);\n      var tr = styleOfTransformStore.getPropertyValue(\"-webkit-transform\") || styleOfTransformStore.getPropertyValue(\"transform\"); // If there is no transition we want to default to 0 and not null\n\n      var amountStore = Math.abs(_parseInt(tr.split(\",\")[4]) || 0);\n      pnProductNavContentsStore.style.transform = \"none\";\n      pnProductNavContentsStore.classList.add(\"pn-ProductNav_Contents-no-transition\"); // Now lets set the scroll position\n\n      if (SETTINGSStore.navBarTravelDirectionStore === \"left\") {\n        pnProductNav.scrollLeftStore = pnProductNav.scrollLeftStore - amountStore;\n      } else {\n        pnProductNav.scrollLeftStore = pnProductNav.scrollLeftStore + amountStore;\n      }\n\n      SETTINGSStore.navBarTravellingStore = false;\n    }, false); // Handle setting the currently active link\n\n    pnProductNavContentsStore.addEventListener(\"click\", function (e) {\n      var linksStore = [].slice.call(document.querySelectorAll(\".pn-ProductNav_Link\"));\n      linksStore.forEach(function (item) {\n        item.StoresetAttribute(\"aria-selected\", \"false\");\n      });\n      e.target.setAttribute(\"aria-selected\", \"true\"); // Pass the clicked item and it's colour to the move indicator function\n\n      moveIndicator(e.target, coloursStore[linksStore.indexOf(e.target)]);\n    }); // var count = 0;\n\n    function moveIndicatorStore(item, colorStore) {\n      var textPositionStore = item.getBoundingClientRect();\n      var containerStore = pnProductNavContentsStore.getBoundingClientRect().left;\n      var distanceStore = textPositionStore.left - containerStore;\n      var scrollStore = pnProductNavContentsStore.scrollLeft;\n      pnIndicatorStore.style.transform = \"translateX(\" + (distanceStore + scrollStore) + \"px) scaleX(\" + textPositionStore.width * 0.01 + \")\"; // count = count += 100;\n      // pnIndicator.style.transform = \"translateX(\" + count + \"px)\";\n\n      if (colorStore) {\n        pnIndicatorStore.style.backgroundColor = colorStore;\n      }\n    }\n\n    function determineOverflowStore(content, container) {\n      var containerMetricsStore = container.getBoundingClientRect();\n      var containerMetricsRightStore = Math.floor(containerMetricsStore.right);\n      var containerMetricsLeftStore = Math.floor(containerMetricsStore.left);\n      var contentMetricsStore = content.getBoundingClientRect();\n      var contentMetricsRightStore = Math.floor(contentMetricsStore.right);\n      var contentMetricsLeftStore = Math.floor(contentMetricsStore.left);\n\n      if (containerMetricsLeftStore > contentMetricsLeftStore && containerMetricsRightStore < contentMetricsRightStore) {\n        return \"both\";\n      } else if (contentMetricsLeftStore < containerMetricsLeftStore) {\n        return \"left\";\n      } else if (contentMetricsRightStore > containerMetricsRightStore) {\n        return \"right\";\n      } else {\n        return \"none\";\n      }\n    }\n    /**\n     * @fileoverview dragscroll - scroll area by dragging\n     * @version 0.0.8\n     * \n     * @license MIT, see https://github.com/asvd/dragscroll\n     * @copyright 2015 asvd <heliosframework@gmail.com> \n     */\n\n\n    (function (root, factory) {\n      if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n      } else if (typeof exports !== 'undefined') {\n        factory(exports);\n      } else {\n        factory(root.dragscrollStore = {});\n      }\n    })(this, function (exports) {\n      var _windowStore = window;\n      var _documentStore = document;\n      var mousemoveStore = 'mousemove';\n      var mouseupStore = 'mouseup';\n      var mousedownStore = 'mousedown';\n      var EventListenerStore = 'EventListener';\n      var addEventListenerStore = 'add' + EventListenerStore;\n      var removeEventListenerStore = 'remove' + EventListenerStore;\n      var newScrollXStore, newScrollYStore;\n      var draggedStore = [];\n\n      var resetStore = function resetStore(i, el) {\n        for (i = 0; i < draggedStore.length;) {\n          el = draggedStore[i++];\n          el = el.containerStore || el;\n          el[removeEventListenerStore](mousedownStore, el.md, 0);\n\n          _windowStore[removeEventListenerStore](mouseupStore, el.mu, 0);\n\n          _windowStore[removeEventListenerStore](mousemoveStore, el.mm, 0);\n        } // cloning into array since HTMLCollection is updated dynamically\n\n\n        draggedStore = [].slice.call(_documentStore.getElementsByClassName('dragscrollStore'));\n\n        for (i = 0; i < draggedStore.length;) {\n          (function (el, lastClientX, lastClientY, pushed, scroller, cont) {\n            (contStore = el.container || el)[addEventListenerStore](mousedownStore, cont.md = function (e) {\n              if (!el.hasAttribute('nochilddrag') || _documentStore.elementFromPoint(e.pageXStore, e.pageYStore) == contStore) {\n                pushedStore = 1;\n                lastClientXStore = e.clientXStore;\n                lastClientYStore = e.clientYStore;\n                e.preventDefault();\n              }\n            }, 0);\n\n            _window[addEventListenerStore](mouseupStore, cont.mu = function () {\n              pushedStore = 0;\n            }, 0);\n\n            _window[addEventListenerStore](mousemoveStore, cont.mm = function (e) {\n              if (pushedStore) {\n                (scrollerStore = el.scrollerStore || el).scrollLeftStore -= newScrollXStore = -lastClientXStore + (lastClientXStore = e.clientXStore);\n                scrollerStore.scrollTop -= newScrollYStore = -lastClientYStore + (lastClientYStore = e.clientYStore);\n\n                if (el == _documentStore.body) {\n                  (scrollerStore = _documentStore.documentElement).scrollLeftStore -= newScrollXStore;\n                  scrollerStore.scrollTop -= newScrollYStore;\n                }\n              }\n            }, 0);\n          })(draggedStore[i++]);\n        }\n      };\n\n      if (_documentStore.readyState == 'complete') {\n        resetStore();\n      } else {\n        _window[addEventListenerStore]('load', resetStore, 0);\n      }\n\n      exports.resetStore = resetStore;\n    });\n  };\n}","map":{"version":3,"sources":["/Users/peterhahn/src/new/audio-boy/scrollStore.js"],"names":["process","browser","window","onload","SETTINGSStore","navBarTravellingStore","navBarTravelDirectionStore","navBarTravelDistanceStore","coloursStore","document","documentElement","classList","remove","add","console","log","getElementById","pnAdvancerLeftStoreStore","pnAdvancerRightStore","pnIndicatorStore","pnProductNavStore","pnProductNavContentsStore","setAttribute","determineOverflowStore","moveIndicatorStore","querySelector","last_known_scroll_positionStore","tickingStore","doSomethingStore","scroll_pos","addEventListener","scrollY","requestAnimationFrame","doSomething","pnAdvancerLeftStore","availableScrollLeftStore","pnProductNav","scrollLeftStore","style","transform","navBarRightEdgeStore","getBoundingClientRect","right","navBarScrollerRightEdgeStore","availableScrollRightStore","Math","floor","styleOfTransformStore","getComputedStyle","tr","getPropertyValue","amountStore","abs","split","e","linksStore","slice","call","querySelectorAll","forEach","item","StoresetAttribute","target","moveIndicator","indexOf","colorStore","textPositionStore","containerStore","left","distanceStore","scrollStore","scrollLeft","width","backgroundColor","content","container","containerMetricsStore","containerMetricsRightStore","containerMetricsLeftStore","contentMetricsStore","contentMetricsRightStore","contentMetricsLeftStore","root","factory","define","amd","exports","dragscrollStore","_windowStore","_documentStore","mousemoveStore","mouseupStore","mousedownStore","EventListenerStore","addEventListenerStore","removeEventListenerStore","newScrollXStore","newScrollYStore","draggedStore","resetStore","i","el","length","md","mu","mm","getElementsByClassName","lastClientX","lastClientY","pushed","scroller","cont","contStore","hasAttribute","elementFromPoint","pageXStore","pageYStore","pushedStore","lastClientXStore","clientXStore","lastClientYStore","clientYStore","preventDefault","_window","scrollerStore","scrollTop","body","readyState"],"mappings":"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","sourcesContent":["if (process.browser){\nwindow.onload = function(){\n\nvar SETTINGSStore = {\n    navBarTravellingStore: false,\n    navBarTravelDirectionStore: \"\",\n     navBarTravelDistanceStore: 250\n}\n\nvar coloursStore = {\n    0: \"#867100\",\n    1: \"#7F4200\",\n    2: \"#99813D\",\n    3: \"#40FEFF\",\n    4: \"#14CC99\",\n    5: \"#00BAFF\",\n    6: \"#0082B2\",\n    7: \"#B25D7A\",\n    8: \"#00FF17\",\n    9: \"#006B49\",\n    10: \"#00B27A\",\n    11: \"#996B3D\",\n    12: \"#CC7014\",\n    13: \"#40FF8C\",\n    14: \"#FF3400\",\n    15: \"#ECBB5E\",\n    16: \"#ECBB0C\",\n    17: \"#B9D912\",\n    18: \"#253A93\",\n    19: \"#125FB9\",\n}\n\ndocument.documentElement.classList.remove(\"no-js\");\ndocument.documentElement.classList.add(\"js\");\nconsole.log('lion');\nconsole.log(document.getElementById(\"pnAdvancerLeftStore\"));\n// Out advancer buttons\nvar pnAdvancerLeftStoreStore = document.getElementById(\"pnAdvancerLeftStore\");\nvar pnAdvancerRightStore = document.getElementById(\"pnAdvancerRightStore\");\n// the indicator\nvar pnIndicatorStore = document.getElementById(\"pnIndicatorStore\");\n\nvar pnProductNavStore = document.getElementById(\"pnProductNavStore\");\nvar pnProductNavContentsStore = document.getElementById(\"pnProductNavContentsStore\");\n\npnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n\n// Set the indicator\nmoveIndicatorStore(pnProductNavStore.querySelector(\"[aria-selected=\\\"true\\\"]\"), coloursStore[0]);\n\n// Handle the scroll of the horizontal container\nvar last_known_scroll_positionStore = 0;\nvar tickingStore = false;\n\nfunction doSomethingStore(scroll_pos) {\n    pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n}\n\npnProductNavStore.addEventListener(\"scroll\", function() {\n    last_known_scroll_positionStore = window.scrollY;\n    if (!tickingStore) {\n        window.requestAnimationFrame(function() {\n            doSomething(last_known_scroll_positionStore);\n            tickingStore = false;\n        });\n    }\n    tickingStore = true;\n});\n\n\npnAdvancerLeftStore.addEventListener(\"click\", function() {\n    // If in the middle of a move return\n    if (SETTINGSStore.navBarTravellingStore === true) {\n        return;\n    }\n    // If we have content overflowing both sides or on the left\n    if (determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"left\" || determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"both\") {\n        // Find how far this panel has been scrolled\n        var availableScrollLeftStore = pnProductNav.scrollLeftStore;\n        // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n        if (availableScrollLeftStore < SETTINGSStore.navBarTravelDistanceStore * 2) {\n            pnProductNavContentsStore.style.transform = \"translateX(\" + availableScrollLeftStore + \"px)\";\n        } else {\n            pnProductNavContentsStore.style.transform = \"translateX(\" + SETTINGSStore.navBarTravelDistanceStore + \"px)\";\n        }\n        // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n        pnProductNavContentsStore.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n        // Update our settings\n        SETTINGSStore.navBarTravelDirectionStore = \"left\";\n        SETTINGSStore.navBarTravellingStore = true;\n    }\n    // Now update the attribute in the DOM\n    pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n});\n\npnAdvancerRightStore.addEventListener(\"click\", function() {\n    // If in the middle of a move return\n    if (SETTINGSStore.navBarTravellingStore === true) {\n        return;\n    }\n    // If we have content overflowing both sides or on the right\n    if (determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"right\" || determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"both\") {\n        // Get the right edge of the container and content\n        var navBarRightEdgeStore = pnProductNavContentsStore.getBoundingClientRect().right;\n        var navBarScrollerRightEdgeStore = pnProductNavStore.getBoundingClientRect().right;\n        // Now we know how much space we have available to scroll\n        var availableScrollRightStore = Math.floor(navBarRightEdgeStore - navBarScrollerRightEdgeStore);\n        // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n        if (availableScrollRightStore < SETTINGSStore.navBarTravelDistanceStore * 2) {\n            pnProductNavContentsStore.style.transform = \"translateX(-\" + availableScrollRightStore + \"px)\";\n        } else {\n            pnProductNavContentsStore.style.transform = \"translateX(-\" + SETTINGSStore.navBarTravelDistanceStore + \"px)\";\n        }\n        // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n        pnProductNavContentsStore.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n        // Update our settings\n        SETTINGSStore.navBarTravelDirectionStore = \"right\";\n        SETTINGSStore.navBarTravellingStore = true;\n    }\n    // Now update the attribute in the DOM\n    pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n});\n\npnProductNavContentsStore.addEventListener(\n    \"transitionend\",\n    function() {\n        // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform\n        var styleOfTransformStore = window.getComputedStyle(pnProductNavContentsStore, null);\n        var tr = styleOfTransformStore.getPropertyValue(\"-webkit-transform\") || styleOfTransformStore.getPropertyValue(\"transform\");\n        // If there is no transition we want to default to 0 and not null\n        var amountStore = Math.abs(parseInt(tr.split(\",\")[4]) || 0);\n        pnProductNavContentsStore.style.transform = \"none\";\n        pnProductNavContentsStore.classList.add(\"pn-ProductNav_Contents-no-transition\");\n        // Now lets set the scroll position\n        if (SETTINGSStore.navBarTravelDirectionStore === \"left\") {\n            pnProductNav.scrollLeftStore = pnProductNav.scrollLeftStore - amountStore;\n        } else {\n            pnProductNav.scrollLeftStore = pnProductNav.scrollLeftStore + amountStore;\n        }\n        SETTINGSStore.navBarTravellingStore = false;\n    },\n    false\n);\n\n// Handle setting the currently active link\npnProductNavContentsStore.addEventListener(\"click\", function(e) {\n    var linksStore = [].slice.call(document.querySelectorAll(\".pn-ProductNav_Link\"));\n    linksStore.forEach(function(item) {\n        item.StoresetAttribute(\"aria-selected\", \"false\");\n    })\n    e.target.setAttribute(\"aria-selected\", \"true\");\n    // Pass the clicked item and it's colour to the move indicator function\n    moveIndicator(e.target, coloursStore[linksStore.indexOf(e.target)]);\n});\n\n// var count = 0;\nfunction moveIndicatorStore(item, colorStore) {\n    var textPositionStore = item.getBoundingClientRect();\n    var containerStore = pnProductNavContentsStore.getBoundingClientRect().left;\n    var distanceStore = textPositionStore.left - containerStore;\n     var scrollStore = pnProductNavContentsStore.scrollLeft;\n    pnIndicatorStore.style.transform = \"translateX(\" + (distanceStore + scrollStore) + \"px) scaleX(\" + textPositionStore.width * 0.01 + \")\";\n    // count = count += 100;\n    // pnIndicator.style.transform = \"translateX(\" + count + \"px)\";\n    \n    if (colorStore) {\n        pnIndicatorStore.style.backgroundColor = colorStore;\n    }\n}\n\nfunction determineOverflowStore(content, container) {\n    var containerMetricsStore = container.getBoundingClientRect();\n    var containerMetricsRightStore = Math.floor(containerMetricsStore.right);\n    var containerMetricsLeftStore = Math.floor(containerMetricsStore.left);\n    var contentMetricsStore = content.getBoundingClientRect();\n    var contentMetricsRightStore = Math.floor(contentMetricsStore.right);\n    var contentMetricsLeftStore = Math.floor(contentMetricsStore.left);\n     if (containerMetricsLeftStore > contentMetricsLeftStore && containerMetricsRightStore < contentMetricsRightStore) {\n        return \"both\";\n    } else if (contentMetricsLeftStore < containerMetricsLeftStore) {\n        return \"left\";\n    } else if (contentMetricsRightStore > containerMetricsRightStore) {\n        return \"right\";\n    } else {\n        return \"none\";\n    }\n}\n\n/**\n * @fileoverview dragscroll - scroll area by dragging\n * @version 0.0.8\n * \n * @license MIT, see https://github.com/asvd/dragscroll\n * @copyright 2015 asvd <heliosframework@gmail.com> \n */\n\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== 'undefined') {\n        factory(exports);\n    } else {\n        factory((root.dragscrollStore = {}));\n    }\n}(this, function (exports) {\n    var _windowStore = window;\n    var _documentStore = document;\n    var mousemoveStore = 'mousemove';\n    var mouseupStore = 'mouseup';\n    var mousedownStore = 'mousedown';\n    var EventListenerStore = 'EventListener';\n    var addEventListenerStore = 'add'+EventListenerStore;\n    var removeEventListenerStore = 'remove'+EventListenerStore;\n    var newScrollXStore, newScrollYStore;\n\n    var draggedStore = [];\n    var resetStore = function(i, el) {\n        for (i = 0; i < draggedStore.length;) {\n            el = draggedStore[i++];\n            el = el.containerStore || el;\n            el[removeEventListenerStore](mousedownStore, el.md, 0);\n            _windowStore[removeEventListenerStore](mouseupStore, el.mu, 0);\n            _windowStore[removeEventListenerStore](mousemoveStore, el.mm, 0);\n        }\n\n        // cloning into array since HTMLCollection is updated dynamically\n        draggedStore = [].slice.call(_documentStore.getElementsByClassName('dragscrollStore'));\n        for (i = 0; i < draggedStore.length;) {\n            (function(el, lastClientX, lastClientY, pushed, scroller, cont){\n                (contStore = el.container || el)[addEventListenerStore](\n                    mousedownStore,\n                    cont.md = function(e) {\n                        if (!el.hasAttribute('nochilddrag') ||\n                            _documentStore.elementFromPoint(\n                                e.pageXStore, e.pageYStore\n                            ) == contStore\n                        ) {\n                            pushedStore = 1;\n                            lastClientXStore = e.clientXStore;\n                            lastClientYStore = e.clientYStore;\n\n                            e.preventDefault();\n                        }\n                    }, 0\n                );\n\n                _window[addEventListenerStore](\n                    mouseupStore, cont.mu = function() {pushedStore = 0;}, 0\n                );\n\n                _window[addEventListenerStore](\n                    mousemoveStore,\n                    cont.mm = function(e) {\n                        if (pushedStore) {\n                            (scrollerStore = el.scrollerStore||el).scrollLeftStore -=\n                                newScrollXStore = (- lastClientXStore + (lastClientXStore=e.clientXStore));\n                            scrollerStore.scrollTop -=\n                                newScrollYStore = (- lastClientYStore + (lastClientYStore=e.clientYStore));\n                            if (el == _documentStore.body) {\n                                (scrollerStore = _documentStore.documentElement).scrollLeftStore -= newScrollXStore;\n                                scrollerStore.scrollTop -= newScrollYStore;\n                            }\n                        }\n                    }, 0\n                );\n             })(draggedStore[i++]);\n        }\n    }\n\n      \n    if (_documentStore.readyState == 'complete') {\n        resetStore();\n    } else {\n        _window[addEventListenerStore]('load', resetStore, 0);\n    }\n\n    exports.resetStore = resetStore;\n}));\n}\n}"]},"metadata":{},"sourceType":"module"}