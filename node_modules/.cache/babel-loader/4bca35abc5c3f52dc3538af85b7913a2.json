{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/peterhahn/src/new/audio-boy/pages/index.js\";\nimport React from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport Parent from '../components/parent.js';\nimport Layout from '../components/layout';\nimport data from '../data/artistList.js';\nimport newsData from '../data/news.js';\nimport store from '../data/store.js';\nimport '../scroll.js';\nimport '../css/normalize.css';\nimport '../css/skeleton.css';\nimport '../css/bootstrap.css';\nimport '../css/style.css';\nimport '../css/styleStore.css';\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index() {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      trigger: ''\n    });\n\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(props) {\n      this.art = data;\n      this.news = newsData;\n      this.store = store;\n      console.log('magic');\n\n      if (process.browser) {\n        var doSomething = function doSomething(scroll_pos) {\n          pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n        };\n\n        // var count = 0;\n        var moveIndicator = function moveIndicator(item, color) {\n          var textPosition = item.getBoundingClientRect();\n          var container = pnProductNavContents.getBoundingClientRect().left;\n          var distance = textPosition.left - container;\n          var scroll = pnProductNavContents.scrollLeft;\n          pnIndicator.style.transform = \"translateX(\" + (distance + scroll) + \"px) scaleX(\" + textPosition.width * 0.01 + \")\"; // count = count += 100;\n          // pnIndicator.style.transform = \"translateX(\" + count + \"px)\";\n\n          if (color) {\n            pnIndicator.style.backgroundColor = color;\n          }\n        };\n\n        var determineOverflow = function determineOverflow(content, container) {\n          var containerMetrics = container.getBoundingClientRect();\n          var containerMetricsRight = Math.floor(containerMetrics.right);\n          var containerMetricsLeft = Math.floor(containerMetrics.left);\n          var contentMetrics = content.getBoundingClientRect();\n          var contentMetricsRight = Math.floor(contentMetrics.right);\n          var contentMetricsLeft = Math.floor(contentMetrics.left);\n\n          if (containerMetricsLeft > contentMetricsLeft && containerMetricsRight < contentMetricsRight) {\n            return \"both\";\n          } else if (contentMetricsLeft < containerMetricsLeft) {\n            return \"left\";\n          } else if (contentMetricsRight > containerMetricsRight) {\n            return \"right\";\n          } else {\n            return \"none\";\n          }\n        };\n        /**\n         * @fileoverview dragscroll - scroll area by dragging\n         * @version 0.0.8\n         * \n         * @license MIT, see https://github.com/asvd/dragscroll\n         * @copyright 2015 asvd <heliosframework@gmail.com> \n         */\n\n\n        var SETTINGS = {\n          navBarTravelling: false,\n          navBarTravelDirection: \"\",\n          navBarTravelDistance: 500\n        };\n        var colours = {\n          0: \"#867100\",\n          1: \"#7F4200\",\n          2: \"#99813D\",\n          3: \"#40FEFF\",\n          4: \"#14CC99\",\n          5: \"#00BAFF\",\n          6: \"#0082B2\",\n          7: \"#B25D7A\",\n          8: \"#00FF17\",\n          9: \"#006B49\",\n          10: \"#00B27A\",\n          11: \"#996B3D\",\n          12: \"#CC7014\",\n          13: \"#40FF8C\",\n          14: \"#FF3400\",\n          15: \"#ECBB5E\",\n          16: \"#ECBB0C\",\n          17: \"#B9D912\",\n          18: \"#253A93\",\n          19: \"#125FB9\"\n        };\n        document.documentElement.classList.remove(\"no-js\");\n        document.documentElement.classList.add(\"js\"); // Out advancer buttons\n\n        var pnAdvancerLeft = document.getElementById(\"pnAdvancerLeft\");\n        var pnAdvancerRight = document.getElementById(\"pnAdvancerRight\"); // the indicator\n\n        var pnIndicator = document.getElementById(\"pnIndicator\");\n        var pnProductNav = document.getElementById(\"pnProductNav\");\n        var pnProductNavContents = document.getElementById(\"pnProductNavContents\");\n        pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav)); // Set the indicator\n\n        moveIndicator(pnProductNav.querySelector(\"[aria-selected=\\\"true\\\"]\"), colours[0]); // Handle the scroll of the horizontal container\n\n        var last_known_scroll_position = 0;\n        var ticking = false;\n        pnProductNav.addEventListener(\"scroll\", function () {\n          last_known_scroll_position = window.scrollY;\n\n          if (!ticking) {\n            window.requestAnimationFrame(function () {\n              doSomething(last_known_scroll_position);\n              ticking = false;\n            });\n          }\n\n          ticking = true;\n        });\n        pnAdvancerLeft.addEventListener(\"click\", function () {\n          // If in the middle of a move return\n          if (SETTINGS.navBarTravelling === true) {\n            return;\n          } // If we have content overflowing both sides or on the left\n\n\n          if (determineOverflow(pnProductNavContents, pnProductNav) === \"left\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n            // Find how far this panel has been scrolled\n            var availableScrollLeft = pnProductNav.scrollLeft; // If the space available is less than two lots of our desired distance, just move the whole amount\n            // otherwise, move by the amount in the settings\n\n            if (availableScrollLeft < SETTINGS.navBarTravelDistance * 2) {\n              pnProductNavContents.style.transform = \"translateX(\" + availableScrollLeft + \"px)\";\n            } else {\n              pnProductNavContents.style.transform = \"translateX(\" + SETTINGS.navBarTravelDistance + \"px)\";\n            } // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\n\n            pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\"); // Update our settings\n\n            SETTINGS.navBarTravelDirection = \"left\";\n            SETTINGS.navBarTravelling = true;\n          } // Now update the attribute in the DOM\n\n\n          pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n        });\n        pnAdvancerRight.addEventListener(\"click\", function () {\n          console.log('slave'); // If in the middle of a move return\n\n          if (SETTINGS.navBarTravelling === true) {\n            return;\n          } // If we have content overflowing both sides or on the right\n\n\n          if (determineOverflow(pnProductNavContents, pnProductNav) === \"right\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n            // Get the right edge of the container and content\n            var navBarRightEdge = pnProductNavContents.getBoundingClientRect().right;\n            var navBarScrollerRightEdge = pnProductNav.getBoundingClientRect().right; // Now we know how much space we have available to scroll\n\n            var availableScrollRight = Math.floor(navBarRightEdge - navBarScrollerRightEdge); // If the space available is less than two lots of our desired distance, just move the whole amount\n            // otherwise, move by the amount in the settings\n\n            if (availableScrollRight < SETTINGS.navBarTravelDistance * 2) {\n              pnProductNavContents.style.transform = \"translateX(-\" + availableScrollRight + \"px)\";\n            } else {\n              pnProductNavContents.style.transform = \"translateX(-\" + SETTINGS.navBarTravelDistance + \"px)\";\n            } // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\n\n            pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\"); // Update our settings\n\n            SETTINGS.navBarTravelDirection = \"right\";\n            SETTINGS.navBarTravelling = true;\n          } // Now update the attribute in the DOM\n\n\n          pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n        });\n        pnProductNavContents.addEventListener(\"transitionend\", function () {\n          // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform\n          var styleOfTransform = window.getComputedStyle(pnProductNavContents, null);\n          var tr = styleOfTransform.getPropertyValue(\"-webkit-transform\") || styleOfTransform.getPropertyValue(\"transform\"); // If there is no transition we want to default to 0 and not null\n\n          var amount = Math.abs(_parseInt(tr.split(\",\")[4]) || 0);\n          pnProductNavContents.style.transform = \"none\";\n          pnProductNavContents.classList.add(\"pn-ProductNav_Contents-no-transition\"); // Now lets set the scroll position\n\n          if (SETTINGS.navBarTravelDirection === \"left\") {\n            pnProductNav.scrollLeft = pnProductNav.scrollLeft - amount;\n          } else {\n            pnProductNav.scrollLeft = pnProductNav.scrollLeft + amount;\n          }\n\n          SETTINGS.navBarTravelling = false;\n        }, false); // Handle setting the currently active link\n\n        pnProductNavContents.addEventListener(\"click\", function (e) {\n          var links = [].slice.call(document.querySelectorAll(\".pn-ProductNav_Link\"));\n          links.forEach(function (item) {\n            item.setAttribute(\"aria-selected\", \"false\");\n          });\n          e.target.setAttribute(\"aria-selected\", \"true\"); // Pass the clicked item and it's colour to the move indicator function\n\n          moveIndicator(e.target, colours[links.indexOf(e.target)]);\n        });\n\n        (function (root, factory) {\n          if (typeof define === 'function' && define.amd) {\n            define(['exports'], factory);\n          } else if (typeof exports !== 'undefined') {\n            factory(exports);\n          } else {\n            factory(root.dragscroll = {});\n          }\n        })(this, function (exports) {\n          var _window = window;\n          var _document = document;\n          var mousemove = 'mousemove';\n          var mouseup = 'mouseup';\n          var mousedown = 'mousedown';\n          var EventListener = 'EventListener';\n          var addEventListener = 'add' + EventListener;\n          var removeEventListener = 'remove' + EventListener;\n          var newScrollX, newScrollY;\n          var dragged = [];\n\n          var reset = function reset(i, el) {\n            for (i = 0; i < dragged.length;) {\n              el = dragged[i++];\n              el = el.container || el;\n              el[removeEventListener](mousedown, el.md, 0);\n\n              _window[removeEventListener](mouseup, el.mu, 0);\n\n              _window[removeEventListener](mousemove, el.mm, 0);\n            } // cloning into array since HTMLCollection is updated dynamically\n\n\n            dragged = [].slice.call(_document.getElementsByClassName('dragscroll'));\n\n            for (i = 0; i < dragged.length;) {\n              (function (el, lastClientX, lastClientY, pushed, scroller, cont) {\n                (cont = el.container || el)[addEventListener](mousedown, cont.md = function (e) {\n                  if (!el.hasAttribute('nochilddrag') || _document.elementFromPoint(e.pageX, e.pageY) == cont) {\n                    pushed = 1;\n                    lastClientX = e.clientX;\n                    lastClientY = e.clientY;\n                    e.preventDefault();\n                  }\n                }, 0);\n\n                _window[addEventListener](mouseup, cont.mu = function () {\n                  pushed = 0;\n                }, 0);\n\n                _window[addEventListener](mousemove, cont.mm = function (e) {\n                  if (pushed) {\n                    (scroller = el.scroller || el).scrollLeft -= newScrollX = -lastClientX + (lastClientX = e.clientX);\n                    scroller.scrollTop -= newScrollY = -lastClientY + (lastClientY = e.clientY);\n\n                    if (el == _document.body) {\n                      (scroller = _document.documentElement).scrollLeft -= newScrollX;\n                      scroller.scrollTop -= newScrollY;\n                    }\n                  }\n                }, 0);\n              })(dragged[i++]);\n            }\n          };\n\n          if (_document.readyState == 'complete') {\n            reset();\n          } else {\n            _window[addEventListener]('load', reset, 0);\n          }\n\n          exports.reset = reset;\n        });\n      } // \twindow.onpopstate  = (e) => {\n      // \tconsole.log('kwahi');\n      // \tlocation.reload();\n      // }\n\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(Parent, {\n        artists: data,\n        news: newsData,\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport default Index;","map":{"version":3,"sources":["/Users/peterhahn/src/new/audio-boy/pages/index.js"],"names":["React","Head","Link","styled","Parent","Layout","data","newsData","store","Index","trigger","props","art","news","console","log","process","browser","doSomething","scroll_pos","pnProductNav","setAttribute","determineOverflow","pnProductNavContents","moveIndicator","item","color","textPosition","getBoundingClientRect","container","left","distance","scroll","scrollLeft","pnIndicator","style","transform","width","backgroundColor","content","containerMetrics","containerMetricsRight","Math","floor","right","containerMetricsLeft","contentMetrics","contentMetricsRight","contentMetricsLeft","SETTINGS","navBarTravelling","navBarTravelDirection","navBarTravelDistance","colours","document","documentElement","classList","remove","add","pnAdvancerLeft","getElementById","pnAdvancerRight","querySelector","last_known_scroll_position","ticking","addEventListener","window","scrollY","requestAnimationFrame","availableScrollLeft","navBarRightEdge","navBarScrollerRightEdge","availableScrollRight","styleOfTransform","getComputedStyle","tr","getPropertyValue","amount","abs","split","e","links","slice","call","querySelectorAll","forEach","target","indexOf","root","factory","define","amd","exports","dragscroll","_window","_document","mousemove","mouseup","mousedown","EventListener","removeEventListener","newScrollX","newScrollY","dragged","reset","i","el","length","md","mu","mm","getElementsByClassName","lastClientX","lastClientY","pushed","scroller","cont","hasAttribute","elementFromPoint","pageX","pageY","clientX","clientY","preventDefault","scrollTop","body","readyState","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\n\nimport styled from 'styled-components';\n\nimport Parent from '../components/parent.js';\nimport Layout from '../components/layout';\n\nimport data from '../data/artistList.js';\nimport newsData from '../data/news.js';\nimport store from '../data/store.js';\n\nimport '../scroll.js';\n\nimport '../css/normalize.css';\nimport '../css/skeleton.css';\nimport '../css/bootstrap.css';\nimport '../css/style.css';\nimport '../css/styleStore.css';\n\nclass Index extends React.Component {\n\n\tconstructor(){\n\n\t    super()\n\n\t}\n\n\tstate={\n\t\ttrigger:''\n\t}\n\n\tcomponentDidMount(props) {\n\t\tthis.art = data;\n\t\tthis.news = newsData;\n\t\tthis.store = store;\n\n\t\tconsole.log('magic');\n\n\t\tif (process.browser){\n\n\n\nvar SETTINGS = {\n    navBarTravelling: false,\n    navBarTravelDirection: \"\",\n     navBarTravelDistance: 500\n}\n\nvar colours = {\n    0: \"#867100\",\n    1: \"#7F4200\",\n    2: \"#99813D\",\n    3: \"#40FEFF\",\n    4: \"#14CC99\",\n    5: \"#00BAFF\",\n    6: \"#0082B2\",\n    7: \"#B25D7A\",\n    8: \"#00FF17\",\n    9: \"#006B49\",\n    10: \"#00B27A\",\n    11: \"#996B3D\",\n    12: \"#CC7014\",\n    13: \"#40FF8C\",\n    14: \"#FF3400\",\n    15: \"#ECBB5E\",\n    16: \"#ECBB0C\",\n    17: \"#B9D912\",\n    18: \"#253A93\",\n    19: \"#125FB9\",\n}\n\ndocument.documentElement.classList.remove(\"no-js\");\ndocument.documentElement.classList.add(\"js\");\n\n// Out advancer buttons\nvar pnAdvancerLeft = document.getElementById(\"pnAdvancerLeft\");\nvar pnAdvancerRight = document.getElementById(\"pnAdvancerRight\");\n// the indicator\nvar pnIndicator = document.getElementById(\"pnIndicator\");\n\nvar pnProductNav = document.getElementById(\"pnProductNav\");\nvar pnProductNavContents = document.getElementById(\"pnProductNavContents\");\n\npnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n\n// Set the indicator\nmoveIndicator(pnProductNav.querySelector(\"[aria-selected=\\\"true\\\"]\"), colours[0]);\n\n// Handle the scroll of the horizontal container\nvar last_known_scroll_position = 0;\nvar ticking = false;\n\nfunction doSomething(scroll_pos) {\n    pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n}\n\npnProductNav.addEventListener(\"scroll\", function() {\n    last_known_scroll_position = window.scrollY;\n    if (!ticking) {\n        window.requestAnimationFrame(function() {\n            doSomething(last_known_scroll_position);\n            ticking = false;\n        });\n    }\n    ticking = true;\n});\n\n\npnAdvancerLeft.addEventListener(\"click\", function() {\n    // If in the middle of a move return\n    if (SETTINGS.navBarTravelling === true) {\n        return;\n    }\n    // If we have content overflowing both sides or on the left\n    if (determineOverflow(pnProductNavContents, pnProductNav) === \"left\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n        // Find how far this panel has been scrolled\n        var availableScrollLeft = pnProductNav.scrollLeft;\n        // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n        if (availableScrollLeft < SETTINGS.navBarTravelDistance * 2) {\n            pnProductNavContents.style.transform = \"translateX(\" + availableScrollLeft + \"px)\";\n        } else {\n            pnProductNavContents.style.transform = \"translateX(\" + SETTINGS.navBarTravelDistance + \"px)\";\n        }\n        // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n        pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n        // Update our settings\n        SETTINGS.navBarTravelDirection = \"left\";\n        SETTINGS.navBarTravelling = true;\n    }\n    // Now update the attribute in the DOM\n    pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n});\n\npnAdvancerRight.addEventListener(\"click\", function() {\n\tconsole.log('slave');\n    // If in the middle of a move return\n    if (SETTINGS.navBarTravelling === true) {\n        return;\n    }\n    // If we have content overflowing both sides or on the right\n    if (determineOverflow(pnProductNavContents, pnProductNav) === \"right\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n        // Get the right edge of the container and content\n        var navBarRightEdge = pnProductNavContents.getBoundingClientRect().right;\n        var navBarScrollerRightEdge = pnProductNav.getBoundingClientRect().right;\n        // Now we know how much space we have available to scroll\n        var availableScrollRight = Math.floor(navBarRightEdge - navBarScrollerRightEdge);\n        // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n        if (availableScrollRight < SETTINGS.navBarTravelDistance * 2) {\n            pnProductNavContents.style.transform = \"translateX(-\" + availableScrollRight + \"px)\";\n        } else {\n            pnProductNavContents.style.transform = \"translateX(-\" + SETTINGS.navBarTravelDistance + \"px)\";\n        }\n        // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n        pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n        // Update our settings\n        SETTINGS.navBarTravelDirection = \"right\";\n        SETTINGS.navBarTravelling = true;\n    }\n    // Now update the attribute in the DOM\n    pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n});\n\npnProductNavContents.addEventListener(\n    \"transitionend\",\n    function() {\n        // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform\n        var styleOfTransform = window.getComputedStyle(pnProductNavContents, null);\n        var tr = styleOfTransform.getPropertyValue(\"-webkit-transform\") || styleOfTransform.getPropertyValue(\"transform\");\n        // If there is no transition we want to default to 0 and not null\n        var amount = Math.abs(parseInt(tr.split(\",\")[4]) || 0);\n        pnProductNavContents.style.transform = \"none\";\n        pnProductNavContents.classList.add(\"pn-ProductNav_Contents-no-transition\");\n        // Now lets set the scroll position\n        if (SETTINGS.navBarTravelDirection === \"left\") {\n            pnProductNav.scrollLeft = pnProductNav.scrollLeft - amount;\n        } else {\n            pnProductNav.scrollLeft = pnProductNav.scrollLeft + amount;\n        }\n        SETTINGS.navBarTravelling = false;\n    },\n    false\n);\n\n// Handle setting the currently active link\npnProductNavContents.addEventListener(\"click\", function(e) {\n    var links = [].slice.call(document.querySelectorAll(\".pn-ProductNav_Link\"));\n    links.forEach(function(item) {\n        item.setAttribute(\"aria-selected\", \"false\");\n    })\n    e.target.setAttribute(\"aria-selected\", \"true\");\n    // Pass the clicked item and it's colour to the move indicator function\n    moveIndicator(e.target, colours[links.indexOf(e.target)]);\n});\n\n// var count = 0;\nfunction moveIndicator(item, color) {\n    var textPosition = item.getBoundingClientRect();\n    var container = pnProductNavContents.getBoundingClientRect().left;\n    var distance = textPosition.left - container;\n     var scroll = pnProductNavContents.scrollLeft;\n    pnIndicator.style.transform = \"translateX(\" + (distance + scroll) + \"px) scaleX(\" + textPosition.width * 0.01 + \")\";\n    // count = count += 100;\n    // pnIndicator.style.transform = \"translateX(\" + count + \"px)\";\n    \n    if (color) {\n        pnIndicator.style.backgroundColor = color;\n    }\n}\n\nfunction determineOverflow(content, container) {\n    var containerMetrics = container.getBoundingClientRect();\n    var containerMetricsRight = Math.floor(containerMetrics.right);\n    var containerMetricsLeft = Math.floor(containerMetrics.left);\n    var contentMetrics = content.getBoundingClientRect();\n    var contentMetricsRight = Math.floor(contentMetrics.right);\n    var contentMetricsLeft = Math.floor(contentMetrics.left);\n     if (containerMetricsLeft > contentMetricsLeft && containerMetricsRight < contentMetricsRight) {\n        return \"both\";\n    } else if (contentMetricsLeft < containerMetricsLeft) {\n        return \"left\";\n    } else if (contentMetricsRight > containerMetricsRight) {\n        return \"right\";\n    } else {\n        return \"none\";\n    }\n}\n\n/**\n * @fileoverview dragscroll - scroll area by dragging\n * @version 0.0.8\n * \n * @license MIT, see https://github.com/asvd/dragscroll\n * @copyright 2015 asvd <heliosframework@gmail.com> \n */\n\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== 'undefined') {\n        factory(exports);\n    } else {\n        factory((root.dragscroll = {}));\n    }\n}(this, function (exports) {\n    var _window = window;\n    var _document = document;\n    var mousemove = 'mousemove';\n    var mouseup = 'mouseup';\n    var mousedown = 'mousedown';\n    var EventListener = 'EventListener';\n    var addEventListener = 'add'+EventListener;\n    var removeEventListener = 'remove'+EventListener;\n    var newScrollX, newScrollY;\n\n    var dragged = [];\n    var reset = function(i, el) {\n        for (i = 0; i < dragged.length;) {\n            el = dragged[i++];\n            el = el.container || el;\n            el[removeEventListener](mousedown, el.md, 0);\n            _window[removeEventListener](mouseup, el.mu, 0);\n            _window[removeEventListener](mousemove, el.mm, 0);\n        }\n\n        // cloning into array since HTMLCollection is updated dynamically\n        dragged = [].slice.call(_document.getElementsByClassName('dragscroll'));\n        for (i = 0; i < dragged.length;) {\n            (function(el, lastClientX, lastClientY, pushed, scroller, cont){\n                (cont = el.container || el)[addEventListener](\n                    mousedown,\n                    cont.md = function(e) {\n                        if (!el.hasAttribute('nochilddrag') ||\n                            _document.elementFromPoint(\n                                e.pageX, e.pageY\n                            ) == cont\n                        ) {\n                            pushed = 1;\n                            lastClientX = e.clientX;\n                            lastClientY = e.clientY;\n\n                            e.preventDefault();\n                        }\n                    }, 0\n                );\n\n                _window[addEventListener](\n                    mouseup, cont.mu = function() {pushed = 0;}, 0\n                );\n\n                _window[addEventListener](\n                    mousemove,\n                    cont.mm = function(e) {\n                        if (pushed) {\n                            (scroller = el.scroller||el).scrollLeft -=\n                                newScrollX = (- lastClientX + (lastClientX=e.clientX));\n                            scroller.scrollTop -=\n                                newScrollY = (- lastClientY + (lastClientY=e.clientY));\n                            if (el == _document.body) {\n                                (scroller = _document.documentElement).scrollLeft -= newScrollX;\n                                scroller.scrollTop -= newScrollY;\n                            }\n                        }\n                    }, 0\n                );\n             })(dragged[i++]);\n        }\n    }\n\n      \n    if (_document.readyState == 'complete') {\n        reset();\n    } else {\n        _window[addEventListener]('load', reset, 0);\n    }\n\n    exports.reset = reset;\n}));\n\n}\n\n\n\n\n  \t// \twindow.onpopstate  = (e) => {\n\t \t// \tconsole.log('kwahi');\n\t \t// \tlocation.reload();\n \t\t// }\n    \n\t}\n\n \trender () {\n\n\n    \treturn(\n    \t\t<Layout>   \n    \t\t\t<Parent artists={data} news={newsData} store={store}/>\t\t\t\t\n  \t\t\t</Layout>\n    \t)\n \t }\n\n}\n\nexport default Index;\n\n"]},"metadata":{},"sourceType":"module"}