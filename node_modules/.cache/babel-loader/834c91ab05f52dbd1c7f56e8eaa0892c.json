{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar SETTINGS = {\n  navBarTravelling: false,\n  navBarTravelDirection: \"\",\n  navBarTravelDistance: 150\n};\nvar colours = {\n  0: \"#867100\",\n  1: \"#7F4200\",\n  2: \"#99813D\",\n  3: \"#40FEFF\",\n  4: \"#14CC99\",\n  5: \"#00BAFF\",\n  6: \"#0082B2\",\n  7: \"#B25D7A\",\n  8: \"#00FF17\",\n  9: \"#006B49\",\n  10: \"#00B27A\",\n  11: \"#996B3D\",\n  12: \"#CC7014\",\n  13: \"#40FF8C\",\n  14: \"#FF3400\",\n  15: \"#ECBB5E\",\n  16: \"#ECBB0C\",\n  17: \"#B9D912\",\n  18: \"#253A93\",\n  19: \"#125FB9\"\n};\ndocument.documentElement.classList.remove(\"no-js\");\ndocument.documentElement.classList.add(\"js\"); // Out advancer buttons\n\nvar pnAdvancerLeft = document.getElementById(\"pnAdvancerLeft\");\nvar pnAdvancerRight = document.getElementById(\"pnAdvancerRight\"); // the indicator\n\nvar pnIndicator = document.getElementById(\"pnIndicator\");\nvar pnProductNav = document.getElementById(\"pnProductNav\");\nvar pnProductNavContents = document.getElementById(\"pnProductNavContents\");\npnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav)); // Set the indicator\n\nmoveIndicator(pnProductNav.querySelector(\"[aria-selected=\\\"true\\\"]\"), colours[0]); // Handle the scroll of the horizontal container\n\nvar last_known_scroll_position = 0;\nvar ticking = false;\n\nfunction doSomething(scroll_pos) {\n  pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n}\n\npnProductNav.addEventListener(\"scroll\", function () {\n  last_known_scroll_position = window.scrollY;\n\n  if (!ticking) {\n    window.requestAnimationFrame(function () {\n      doSomething(last_known_scroll_position);\n      ticking = false;\n    });\n  }\n\n  ticking = true;\n});\npnAdvancerLeft.addEventListener(\"click\", function () {\n  // If in the middle of a move return\n  if (SETTINGS.navBarTravelling === true) {\n    return;\n  } // If we have content overflowing both sides or on the left\n\n\n  if (determineOverflow(pnProductNavContents, pnProductNav) === \"left\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n    // Find how far this panel has been scrolled\n    var availableScrollLeft = pnProductNav.scrollLeft; // If the space available is less than two lots of our desired distance, just move the whole amount\n    // otherwise, move by the amount in the settings\n\n    if (availableScrollLeft < SETTINGS.navBarTravelDistance * 2) {\n      pnProductNavContents.style.transform = \"translateX(\" + availableScrollLeft + \"px)\";\n    } else {\n      pnProductNavContents.style.transform = \"translateX(\" + SETTINGS.navBarTravelDistance + \"px)\";\n    } // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\n\n    pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\"); // Update our settings\n\n    SETTINGS.navBarTravelDirection = \"left\";\n    SETTINGS.navBarTravelling = true;\n  } // Now update the attribute in the DOM\n\n\n  pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n});\npnAdvancerRight.addEventListener(\"click\", function () {\n  // If in the middle of a move return\n  if (SETTINGS.navBarTravelling === true) {\n    return;\n  } // If we have content overflowing both sides or on the right\n\n\n  if (determineOverflow(pnProductNavContents, pnProductNav) === \"right\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n    // Get the right edge of the container and content\n    var navBarRightEdge = pnProductNavContents.getBoundingClientRect().right;\n    var navBarScrollerRightEdge = pnProductNav.getBoundingClientRect().right; // Now we know how much space we have available to scroll\n\n    var availableScrollRight = Math.floor(navBarRightEdge - navBarScrollerRightEdge); // If the space available is less than two lots of our desired distance, just move the whole amount\n    // otherwise, move by the amount in the settings\n\n    if (availableScrollRight < SETTINGS.navBarTravelDistance * 2) {\n      pnProductNavContents.style.transform = \"translateX(-\" + availableScrollRight + \"px)\";\n    } else {\n      pnProductNavContents.style.transform = \"translateX(-\" + SETTINGS.navBarTravelDistance + \"px)\";\n    } // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\n\n    pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\"); // Update our settings\n\n    SETTINGS.navBarTravelDirection = \"right\";\n    SETTINGS.navBarTravelling = true;\n  } // Now update the attribute in the DOM\n\n\n  pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n});\npnProductNavContents.addEventListener(\"transitionend\", function () {\n  // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform\n  var styleOfTransform = window.getComputedStyle(pnProductNavContents, null);\n  var tr = styleOfTransform.getPropertyValue(\"-webkit-transform\") || styleOfTransform.getPropertyValue(\"transform\"); // If there is no transition we want to default to 0 and not null\n\n  var amount = Math.abs(_parseInt(tr.split(\",\")[4]) || 0);\n  pnProductNavContents.style.transform = \"none\";\n  pnProductNavContents.classList.add(\"pn-ProductNav_Contents-no-transition\"); // Now lets set the scroll position\n\n  if (SETTINGS.navBarTravelDirection === \"left\") {\n    pnProductNav.scrollLeft = pnProductNav.scrollLeft - amount;\n  } else {\n    pnProductNav.scrollLeft = pnProductNav.scrollLeft + amount;\n  }\n\n  SETTINGS.navBarTravelling = false;\n}, false); // Handle setting the currently active link\n\npnProductNavContents.addEventListener(\"click\", function (e) {\n  var links = [].slice.call(document.querySelectorAll(\".pn-ProductNav_Link\"));\n  links.forEach(function (item) {\n    item.setAttribute(\"aria-selected\", \"false\");\n  });\n  e.target.setAttribute(\"aria-selected\", \"true\"); // Pass the clicked item and it's colour to the move indicator function\n\n  moveIndicator(e.target, colours[links.indexOf(e.target)]);\n}); // var count = 0;\n\nfunction moveIndicator(item, color) {\n  var textPosition = item.getBoundingClientRect();\n  var container = pnProductNavContents.getBoundingClientRect().left;\n  var distance = textPosition.left - container;\n  var scroll = pnProductNavContents.scrollLeft;\n  pnIndicator.style.transform = \"translateX(\" + (distance + scroll) + \"px) scaleX(\" + textPosition.width * 0.01 + \")\"; // count = count += 100;\n  // pnIndicator.style.transform = \"translateX(\" + count + \"px)\";\n\n  if (color) {\n    pnIndicator.style.backgroundColor = color;\n  }\n}\n\nfunction determineOverflow(content, container) {\n  var containerMetrics = container.getBoundingClientRect();\n  var containerMetricsRight = Math.floor(containerMetrics.right);\n  var containerMetricsLeft = Math.floor(containerMetrics.left);\n  var contentMetrics = content.getBoundingClientRect();\n  var contentMetricsRight = Math.floor(contentMetrics.right);\n  var contentMetricsLeft = Math.floor(contentMetrics.left);\n\n  if (containerMetricsLeft > contentMetricsLeft && containerMetricsRight < contentMetricsRight) {\n    return \"both\";\n  } else if (contentMetricsLeft < containerMetricsLeft) {\n    return \"left\";\n  } else if (contentMetricsRight > containerMetricsRight) {\n    return \"right\";\n  } else {\n    return \"none\";\n  }\n}\n/**\n * @fileoverview dragscroll - scroll area by dragging\n * @version 0.0.8\n * \n * @license MIT, see https://github.com/asvd/dragscroll\n * @copyright 2015 asvd <heliosframework@gmail.com> \n */\n\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['exports'], factory);\n  } else if (typeof exports !== 'undefined') {\n    factory(exports);\n  } else {\n    factory(root.dragscroll = {});\n  }\n})(this, function (exports) {\n  var _window = window;\n  var _document = document;\n  var mousemove = 'mousemove';\n  var mouseup = 'mouseup';\n  var mousedown = 'mousedown';\n  var EventListener = 'EventListener';\n  var addEventListener = 'add' + EventListener;\n  var removeEventListener = 'remove' + EventListener;\n  var newScrollX, newScrollY;\n  var dragged = [];\n\n  var reset = function reset(i, el) {\n    for (i = 0; i < dragged.length;) {\n      el = dragged[i++];\n      el = el.container || el;\n      el[removeEventListener](mousedown, el.md, 0);\n\n      _window[removeEventListener](mouseup, el.mu, 0);\n\n      _window[removeEventListener](mousemove, el.mm, 0);\n    } // cloning into array since HTMLCollection is updated dynamically\n\n\n    dragged = [].slice.call(_document.getElementsByClassName('dragscroll'));\n\n    for (i = 0; i < dragged.length;) {\n      (function (el, lastClientX, lastClientY, pushed, scroller, cont) {\n        (cont = el.container || el)[addEventListener](mousedown, cont.md = function (e) {\n          if (!el.hasAttribute('nochilddrag') || _document.elementFromPoint(e.pageX, e.pageY) == cont) {\n            pushed = 1;\n            lastClientX = e.clientX;\n            lastClientY = e.clientY;\n            e.preventDefault();\n          }\n        }, 0);\n\n        _window[addEventListener](mouseup, cont.mu = function () {\n          pushed = 0;\n        }, 0);\n\n        _window[addEventListener](mousemove, cont.mm = function (e) {\n          if (pushed) {\n            (scroller = el.scroller || el).scrollLeft -= newScrollX = -lastClientX + (lastClientX = e.clientX);\n            scroller.scrollTop -= newScrollY = -lastClientY + (lastClientY = e.clientY);\n\n            if (el == _document.body) {\n              (scroller = _document.documentElement).scrollLeft -= newScrollX;\n              scroller.scrollTop -= newScrollY;\n            }\n          }\n        }, 0);\n      })(dragged[i++]);\n    }\n  };\n\n  if (_document.readyState == 'complete') {\n    reset();\n  } else {\n    _window[addEventListener]('load', reset, 0);\n  }\n\n  exports.reset = reset;\n});","map":{"version":3,"sources":["/Users/peterhahn/src/new/audio-boy/scroll.js"],"names":["SETTINGS","navBarTravelling","navBarTravelDirection","navBarTravelDistance","colours","document","documentElement","classList","remove","add","pnAdvancerLeft","getElementById","pnAdvancerRight","pnIndicator","pnProductNav","pnProductNavContents","setAttribute","determineOverflow","moveIndicator","querySelector","last_known_scroll_position","ticking","doSomething","scroll_pos","addEventListener","window","scrollY","requestAnimationFrame","availableScrollLeft","scrollLeft","style","transform","navBarRightEdge","getBoundingClientRect","right","navBarScrollerRightEdge","availableScrollRight","Math","floor","styleOfTransform","getComputedStyle","tr","getPropertyValue","amount","abs","split","e","links","slice","call","querySelectorAll","forEach","item","target","indexOf","color","textPosition","container","left","distance","scroll","width","backgroundColor","content","containerMetrics","containerMetricsRight","containerMetricsLeft","contentMetrics","contentMetricsRight","contentMetricsLeft","root","factory","define","amd","exports","dragscroll","_window","_document","mousemove","mouseup","mousedown","EventListener","removeEventListener","newScrollX","newScrollY","dragged","reset","i","el","length","md","mu","mm","getElementsByClassName","lastClientX","lastClientY","pushed","scroller","cont","hasAttribute","elementFromPoint","pageX","pageY","clientX","clientY","preventDefault","scrollTop","body","readyState"],"mappings":"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","sourcesContent":["\nvar SETTINGS = {\n    navBarTravelling: false,\n    navBarTravelDirection: \"\",\n     navBarTravelDistance: 150\n}\n\nvar colours = {\n    0: \"#867100\",\n    1: \"#7F4200\",\n    2: \"#99813D\",\n    3: \"#40FEFF\",\n    4: \"#14CC99\",\n    5: \"#00BAFF\",\n    6: \"#0082B2\",\n    7: \"#B25D7A\",\n    8: \"#00FF17\",\n    9: \"#006B49\",\n    10: \"#00B27A\",\n    11: \"#996B3D\",\n    12: \"#CC7014\",\n    13: \"#40FF8C\",\n    14: \"#FF3400\",\n    15: \"#ECBB5E\",\n    16: \"#ECBB0C\",\n    17: \"#B9D912\",\n    18: \"#253A93\",\n    19: \"#125FB9\",\n}\n\ndocument.documentElement.classList.remove(\"no-js\");\ndocument.documentElement.classList.add(\"js\");\n\n// Out advancer buttons\nvar pnAdvancerLeft = document.getElementById(\"pnAdvancerLeft\");\nvar pnAdvancerRight = document.getElementById(\"pnAdvancerRight\");\n// the indicator\nvar pnIndicator = document.getElementById(\"pnIndicator\");\n\nvar pnProductNav = document.getElementById(\"pnProductNav\");\nvar pnProductNavContents = document.getElementById(\"pnProductNavContents\");\n\npnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n\n// Set the indicator\nmoveIndicator(pnProductNav.querySelector(\"[aria-selected=\\\"true\\\"]\"), colours[0]);\n\n// Handle the scroll of the horizontal container\nvar last_known_scroll_position = 0;\nvar ticking = false;\n\nfunction doSomething(scroll_pos) {\n    pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n}\n\npnProductNav.addEventListener(\"scroll\", function() {\n    last_known_scroll_position = window.scrollY;\n    if (!ticking) {\n        window.requestAnimationFrame(function() {\n            doSomething(last_known_scroll_position);\n            ticking = false;\n        });\n    }\n    ticking = true;\n});\n\n\npnAdvancerLeft.addEventListener(\"click\", function() {\n    // If in the middle of a move return\n    if (SETTINGS.navBarTravelling === true) {\n        return;\n    }\n    // If we have content overflowing both sides or on the left\n    if (determineOverflow(pnProductNavContents, pnProductNav) === \"left\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n        // Find how far this panel has been scrolled\n        var availableScrollLeft = pnProductNav.scrollLeft;\n        // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n        if (availableScrollLeft < SETTINGS.navBarTravelDistance * 2) {\n            pnProductNavContents.style.transform = \"translateX(\" + availableScrollLeft + \"px)\";\n        } else {\n            pnProductNavContents.style.transform = \"translateX(\" + SETTINGS.navBarTravelDistance + \"px)\";\n        }\n        // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n        pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n        // Update our settings\n        SETTINGS.navBarTravelDirection = \"left\";\n        SETTINGS.navBarTravelling = true;\n    }\n    // Now update the attribute in the DOM\n    pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n});\n\npnAdvancerRight.addEventListener(\"click\", function() {\n    // If in the middle of a move return\n    if (SETTINGS.navBarTravelling === true) {\n        return;\n    }\n    // If we have content overflowing both sides or on the right\n    if (determineOverflow(pnProductNavContents, pnProductNav) === \"right\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n        // Get the right edge of the container and content\n        var navBarRightEdge = pnProductNavContents.getBoundingClientRect().right;\n        var navBarScrollerRightEdge = pnProductNav.getBoundingClientRect().right;\n        // Now we know how much space we have available to scroll\n        var availableScrollRight = Math.floor(navBarRightEdge - navBarScrollerRightEdge);\n        // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n        if (availableScrollRight < SETTINGS.navBarTravelDistance * 2) {\n            pnProductNavContents.style.transform = \"translateX(-\" + availableScrollRight + \"px)\";\n        } else {\n            pnProductNavContents.style.transform = \"translateX(-\" + SETTINGS.navBarTravelDistance + \"px)\";\n        }\n        // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n        pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n        // Update our settings\n        SETTINGS.navBarTravelDirection = \"right\";\n        SETTINGS.navBarTravelling = true;\n    }\n    // Now update the attribute in the DOM\n    pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n});\n\npnProductNavContents.addEventListener(\n    \"transitionend\",\n    function() {\n        // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform\n        var styleOfTransform = window.getComputedStyle(pnProductNavContents, null);\n        var tr = styleOfTransform.getPropertyValue(\"-webkit-transform\") || styleOfTransform.getPropertyValue(\"transform\");\n        // If there is no transition we want to default to 0 and not null\n        var amount = Math.abs(parseInt(tr.split(\",\")[4]) || 0);\n        pnProductNavContents.style.transform = \"none\";\n        pnProductNavContents.classList.add(\"pn-ProductNav_Contents-no-transition\");\n        // Now lets set the scroll position\n        if (SETTINGS.navBarTravelDirection === \"left\") {\n            pnProductNav.scrollLeft = pnProductNav.scrollLeft - amount;\n        } else {\n            pnProductNav.scrollLeft = pnProductNav.scrollLeft + amount;\n        }\n        SETTINGS.navBarTravelling = false;\n    },\n    false\n);\n\n// Handle setting the currently active link\npnProductNavContents.addEventListener(\"click\", function(e) {\n    var links = [].slice.call(document.querySelectorAll(\".pn-ProductNav_Link\"));\n    links.forEach(function(item) {\n        item.setAttribute(\"aria-selected\", \"false\");\n    })\n    e.target.setAttribute(\"aria-selected\", \"true\");\n    // Pass the clicked item and it's colour to the move indicator function\n    moveIndicator(e.target, colours[links.indexOf(e.target)]);\n});\n\n// var count = 0;\nfunction moveIndicator(item, color) {\n    var textPosition = item.getBoundingClientRect();\n    var container = pnProductNavContents.getBoundingClientRect().left;\n    var distance = textPosition.left - container;\n     var scroll = pnProductNavContents.scrollLeft;\n    pnIndicator.style.transform = \"translateX(\" + (distance + scroll) + \"px) scaleX(\" + textPosition.width * 0.01 + \")\";\n    // count = count += 100;\n    // pnIndicator.style.transform = \"translateX(\" + count + \"px)\";\n    \n    if (color) {\n        pnIndicator.style.backgroundColor = color;\n    }\n}\n\nfunction determineOverflow(content, container) {\n    var containerMetrics = container.getBoundingClientRect();\n    var containerMetricsRight = Math.floor(containerMetrics.right);\n    var containerMetricsLeft = Math.floor(containerMetrics.left);\n    var contentMetrics = content.getBoundingClientRect();\n    var contentMetricsRight = Math.floor(contentMetrics.right);\n    var contentMetricsLeft = Math.floor(contentMetrics.left);\n     if (containerMetricsLeft > contentMetricsLeft && containerMetricsRight < contentMetricsRight) {\n        return \"both\";\n    } else if (contentMetricsLeft < containerMetricsLeft) {\n        return \"left\";\n    } else if (contentMetricsRight > containerMetricsRight) {\n        return \"right\";\n    } else {\n        return \"none\";\n    }\n}\n\n/**\n * @fileoverview dragscroll - scroll area by dragging\n * @version 0.0.8\n * \n * @license MIT, see https://github.com/asvd/dragscroll\n * @copyright 2015 asvd <heliosframework@gmail.com> \n */\n\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== 'undefined') {\n        factory(exports);\n    } else {\n        factory((root.dragscroll = {}));\n    }\n}(this, function (exports) {\n    var _window = window;\n    var _document = document;\n    var mousemove = 'mousemove';\n    var mouseup = 'mouseup';\n    var mousedown = 'mousedown';\n    var EventListener = 'EventListener';\n    var addEventListener = 'add'+EventListener;\n    var removeEventListener = 'remove'+EventListener;\n    var newScrollX, newScrollY;\n\n    var dragged = [];\n    var reset = function(i, el) {\n        for (i = 0; i < dragged.length;) {\n            el = dragged[i++];\n            el = el.container || el;\n            el[removeEventListener](mousedown, el.md, 0);\n            _window[removeEventListener](mouseup, el.mu, 0);\n            _window[removeEventListener](mousemove, el.mm, 0);\n        }\n\n        // cloning into array since HTMLCollection is updated dynamically\n        dragged = [].slice.call(_document.getElementsByClassName('dragscroll'));\n        for (i = 0; i < dragged.length;) {\n            (function(el, lastClientX, lastClientY, pushed, scroller, cont){\n                (cont = el.container || el)[addEventListener](\n                    mousedown,\n                    cont.md = function(e) {\n                        if (!el.hasAttribute('nochilddrag') ||\n                            _document.elementFromPoint(\n                                e.pageX, e.pageY\n                            ) == cont\n                        ) {\n                            pushed = 1;\n                            lastClientX = e.clientX;\n                            lastClientY = e.clientY;\n\n                            e.preventDefault();\n                        }\n                    }, 0\n                );\n\n                _window[addEventListener](\n                    mouseup, cont.mu = function() {pushed = 0;}, 0\n                );\n\n                _window[addEventListener](\n                    mousemove,\n                    cont.mm = function(e) {\n                        if (pushed) {\n                            (scroller = el.scroller||el).scrollLeft -=\n                                newScrollX = (- lastClientX + (lastClientX=e.clientX));\n                            scroller.scrollTop -=\n                                newScrollY = (- lastClientY + (lastClientY=e.clientY));\n                            if (el == _document.body) {\n                                (scroller = _document.documentElement).scrollLeft -= newScrollX;\n                                scroller.scrollTop -= newScrollY;\n                            }\n                        }\n                    }, 0\n                );\n             })(dragged[i++]);\n        }\n    }\n\n      \n    if (_document.readyState == 'complete') {\n        reset();\n    } else {\n        _window[addEventListener]('load', reset, 0);\n    }\n\n    exports.reset = reset;\n}));"]},"metadata":{},"sourceType":"module"}