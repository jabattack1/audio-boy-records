{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\n\nif (process.browser) {\n  window.onload = function () {\n    var SETTINGS = {\n      navBarTravelling: false,\n      navBarTravelDirection: \"\",\n      navBarTravelDistance: 250\n    };\n    var colours = {\n      0: \"#867100\",\n      1: \"#7F4200\",\n      2: \"#99813D\",\n      3: \"#40FEFF\",\n      4: \"#14CC99\",\n      5: \"#00BAFF\",\n      6: \"#0082B2\",\n      7: \"#B25D7A\",\n      8: \"#00FF17\",\n      9: \"#006B49\",\n      10: \"#00B27A\",\n      11: \"#996B3D\",\n      12: \"#CC7014\",\n      13: \"#40FF8C\",\n      14: \"#FF3400\",\n      15: \"#ECBB5E\",\n      16: \"#ECBB0C\",\n      17: \"#B9D912\",\n      18: \"#253A93\",\n      19: \"#125FB9\"\n    };\n    document.documentElement.classList.remove(\"no-js\");\n    document.documentElement.classList.add(\"js\");\n    console.log('lion');\n    console.log(document.getElementById(\"pnAdvancerLeftStore\")); // Out advancer buttons\n\n    var pnAdvancerLeftStoreStore = document.getElementById(\"pnAdvancerLeftStore\");\n    var pnAdvancerRightStore = document.getElementById(\"pnAdvancerRightStore\"); // the indicator\n\n    var pnIndicatorStore = document.getElementById(\"pnIndicatorStore\");\n    var pnProductNavStore = document.getElementById(\"pnProductNavStore\");\n    var pnProductNavContentsStore = document.getElementById(\"pnProductNavContentsStore\");\n    pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContentsStore, pnProductNavStore)); // Set the indicator\n\n    moveIndicator(pnProductNavStore.querySelector(\"[aria-selected=\\\"true\\\"]\"), colours[0]); // Handle the scroll of the horizontal container\n\n    var last_known_scroll_positionStore = 0;\n    var tickingStore = false;\n\n    function doSomethingStore(scroll_pos) {\n      pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContentsStore, pnProductNavStore));\n    }\n\n    pnProductNavStore.addEventListener(\"scroll\", function () {\n      last_known_scroll_positionStore = window.scrollY;\n\n      if (!ticking) {\n        window.requestAnimationFrame(function () {\n          doSomething(last_known_scroll_positionStore);\n          tickingStore = false;\n        });\n      }\n\n      tickingStore = true;\n    });\n    pnAdvancerLeftStore.addEventListener(\"click\", function () {\n      // If in the middle of a move return\n      if (SETTINGS.navBarTravelling === true) {\n        return;\n      } // If we have content overflowing both sides or on the left\n\n\n      if (determineOverflow(pnProductNavContentsStore, pnProductNavStore) === \"left\" || determineOverflow(pnProductNavContentsStore, pnProductNavStore) === \"both\") {\n        // Find how far this panel has been scrolled\n        var availableScrollLeft = pnProductNav.scrollLeft; // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n\n        if (availableScrollLeft < SETTINGS.navBarTravelDistance * 2) {\n          pnProductNavContents.style.transform = \"translateX(\" + availableScrollLeft + \"px)\";\n        } else {\n          pnProductNavContents.style.transform = \"translateX(\" + SETTINGS.navBarTravelDistance + \"px)\";\n        } // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\n\n        pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\"); // Update our settings\n\n        SETTINGS.navBarTravelDirection = \"left\";\n        SETTINGS.navBarTravelling = true;\n      } // Now update the attribute in the DOM\n\n\n      pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n    });\n    pnAdvancerRight.addEventListener(\"click\", function () {\n      // If in the middle of a move return\n      if (SETTINGS.navBarTravelling === true) {\n        return;\n      } // If we have content overflowing both sides or on the right\n\n\n      if (determineOverflow(pnProductNavContents, pnProductNav) === \"right\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n        // Get the right edge of the container and content\n        var navBarRightEdge = pnProductNavContents.getBoundingClientRect().right;\n        var navBarScrollerRightEdge = pnProductNav.getBoundingClientRect().right; // Now we know how much space we have available to scroll\n\n        var availableScrollRight = Math.floor(navBarRightEdge - navBarScrollerRightEdge); // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n\n        if (availableScrollRight < SETTINGS.navBarTravelDistance * 2) {\n          pnProductNavContents.style.transform = \"translateX(-\" + availableScrollRight + \"px)\";\n        } else {\n          pnProductNavContents.style.transform = \"translateX(-\" + SETTINGS.navBarTravelDistance + \"px)\";\n        } // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\n\n        pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\"); // Update our settings\n\n        SETTINGS.navBarTravelDirection = \"right\";\n        SETTINGS.navBarTravelling = true;\n      } // Now update the attribute in the DOM\n\n\n      pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n    });\n    pnProductNavContents.addEventListener(\"transitionend\", function () {\n      // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform\n      var styleOfTransform = window.getComputedStyle(pnProductNavContents, null);\n      var tr = styleOfTransform.getPropertyValue(\"-webkit-transform\") || styleOfTransform.getPropertyValue(\"transform\"); // If there is no transition we want to default to 0 and not null\n\n      var amount = Math.abs(_parseInt(tr.split(\",\")[4]) || 0);\n      pnProductNavContents.style.transform = \"none\";\n      pnProductNavContents.classList.add(\"pn-ProductNav_Contents-no-transition\"); // Now lets set the scroll position\n\n      if (SETTINGS.navBarTravelDirection === \"left\") {\n        pnProductNav.scrollLeft = pnProductNav.scrollLeft - amount;\n      } else {\n        pnProductNav.scrollLeft = pnProductNav.scrollLeft + amount;\n      }\n\n      SETTINGS.navBarTravelling = false;\n    }, false); // Handle setting the currently active link\n\n    pnProductNavContents.addEventListener(\"click\", function (e) {\n      var links = [].slice.call(document.querySelectorAll(\".pn-ProductNav_Link\"));\n      links.forEach(function (item) {\n        item.setAttribute(\"aria-selected\", \"false\");\n      });\n      e.target.setAttribute(\"aria-selected\", \"true\"); // Pass the clicked item and it's colour to the move indicator function\n\n      moveIndicator(e.target, colours[links.indexOf(e.target)]);\n    }); // var count = 0;\n\n    function moveIndicator(item, color) {\n      var textPosition = item.getBoundingClientRect();\n      var container = pnProductNavContents.getBoundingClientRect().left;\n      var distance = textPosition.left - container;\n      var scroll = pnProductNavContents.scrollLeft;\n      pnIndicator.style.transform = \"translateX(\" + (distance + scroll) + \"px) scaleX(\" + textPosition.width * 0.01 + \")\"; // count = count += 100;\n      // pnIndicator.style.transform = \"translateX(\" + count + \"px)\";\n\n      if (color) {\n        pnIndicator.style.backgroundColor = color;\n      }\n    }\n\n    function determineOverflow(content, container) {\n      var containerMetrics = container.getBoundingClientRect();\n      var containerMetricsRight = Math.floor(containerMetrics.right);\n      var containerMetricsLeft = Math.floor(containerMetrics.left);\n      var contentMetrics = content.getBoundingClientRect();\n      var contentMetricsRight = Math.floor(contentMetrics.right);\n      var contentMetricsLeft = Math.floor(contentMetrics.left);\n\n      if (containerMetricsLeft > contentMetricsLeft && containerMetricsRight < contentMetricsRight) {\n        return \"both\";\n      } else if (contentMetricsLeft < containerMetricsLeft) {\n        return \"left\";\n      } else if (contentMetricsRight > containerMetricsRight) {\n        return \"right\";\n      } else {\n        return \"none\";\n      }\n    }\n    /**\n     * @fileoverview dragscroll - scroll area by dragging\n     * @version 0.0.8\n     * \n     * @license MIT, see https://github.com/asvd/dragscroll\n     * @copyright 2015 asvd <heliosframework@gmail.com> \n     */\n\n\n    (function (root, factory) {\n      if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n      } else if (typeof exports !== 'undefined') {\n        factory(exports);\n      } else {\n        factory(root.dragscroll = {});\n      }\n    })(this, function (exports) {\n      var _window = window;\n      var _document = document;\n      var mousemove = 'mousemove';\n      var mouseup = 'mouseup';\n      var mousedown = 'mousedown';\n      var EventListener = 'EventListener';\n      var addEventListener = 'add' + EventListener;\n      var removeEventListener = 'remove' + EventListener;\n      var newScrollX, newScrollY;\n      var dragged = [];\n\n      var reset = function reset(i, el) {\n        for (i = 0; i < dragged.length;) {\n          el = dragged[i++];\n          el = el.container || el;\n          el[removeEventListener](mousedown, el.md, 0);\n\n          _window[removeEventListener](mouseup, el.mu, 0);\n\n          _window[removeEventListener](mousemove, el.mm, 0);\n        } // cloning into array since HTMLCollection is updated dynamically\n\n\n        dragged = [].slice.call(_document.getElementsByClassName('dragscrollStore'));\n\n        for (i = 0; i < dragged.length;) {\n          (function (el, lastClientX, lastClientY, pushed, scroller, cont) {\n            (cont = el.container || el)[addEventListener](mousedown, cont.md = function (e) {\n              if (!el.hasAttribute('nochilddrag') || _document.elementFromPoint(e.pageX, e.pageY) == cont) {\n                pushed = 1;\n                lastClientX = e.clientX;\n                lastClientY = e.clientY;\n                e.preventDefault();\n              }\n            }, 0);\n\n            _window[addEventListener](mouseup, cont.mu = function () {\n              pushed = 0;\n            }, 0);\n\n            _window[addEventListener](mousemove, cont.mm = function (e) {\n              if (pushed) {\n                (scroller = el.scroller || el).scrollLeft -= newScrollX = -lastClientX + (lastClientX = e.clientX);\n                scroller.scrollTop -= newScrollY = -lastClientY + (lastClientY = e.clientY);\n\n                if (el == _document.body) {\n                  (scroller = _document.documentElement).scrollLeft -= newScrollX;\n                  scroller.scrollTop -= newScrollY;\n                }\n              }\n            }, 0);\n          })(dragged[i++]);\n        }\n      };\n\n      if (_document.readyState == 'complete') {\n        reset();\n      } else {\n        _window[addEventListener]('load', reset, 0);\n      }\n\n      exports.reset = reset;\n    });\n  };\n}","map":{"version":3,"sources":["/Users/peterhahn/src/new/audio-boy/scrollStore.js"],"names":["process","browser","window","onload","SETTINGS","navBarTravelling","navBarTravelDirection","navBarTravelDistance","colours","document","documentElement","classList","remove","add","console","log","getElementById","pnAdvancerLeftStoreStore","pnAdvancerRightStore","pnIndicatorStore","pnProductNavStore","pnProductNavContentsStore","setAttribute","determineOverflow","moveIndicator","querySelector","last_known_scroll_positionStore","tickingStore","doSomethingStore","scroll_pos","addEventListener","scrollY","ticking","requestAnimationFrame","doSomething","pnAdvancerLeftStore","availableScrollLeft","pnProductNav","scrollLeft","pnProductNavContents","style","transform","pnAdvancerRight","navBarRightEdge","getBoundingClientRect","right","navBarScrollerRightEdge","availableScrollRight","Math","floor","styleOfTransform","getComputedStyle","tr","getPropertyValue","amount","abs","split","e","links","slice","call","querySelectorAll","forEach","item","target","indexOf","color","textPosition","container","left","distance","scroll","pnIndicator","width","backgroundColor","content","containerMetrics","containerMetricsRight","containerMetricsLeft","contentMetrics","contentMetricsRight","contentMetricsLeft","root","factory","define","amd","exports","dragscroll","_window","_document","mousemove","mouseup","mousedown","EventListener","removeEventListener","newScrollX","newScrollY","dragged","reset","i","el","length","md","mu","mm","getElementsByClassName","lastClientX","lastClientY","pushed","scroller","cont","hasAttribute","elementFromPoint","pageX","pageY","clientX","clientY","preventDefault","scrollTop","body","readyState"],"mappings":"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","sourcesContent":["if (process.browser){\nwindow.onload = function(){\n\nvar SETTINGS = {\n    navBarTravelling: false,\n    navBarTravelDirection: \"\",\n     navBarTravelDistance: 250\n}\n\nvar colours = {\n    0: \"#867100\",\n    1: \"#7F4200\",\n    2: \"#99813D\",\n    3: \"#40FEFF\",\n    4: \"#14CC99\",\n    5: \"#00BAFF\",\n    6: \"#0082B2\",\n    7: \"#B25D7A\",\n    8: \"#00FF17\",\n    9: \"#006B49\",\n    10: \"#00B27A\",\n    11: \"#996B3D\",\n    12: \"#CC7014\",\n    13: \"#40FF8C\",\n    14: \"#FF3400\",\n    15: \"#ECBB5E\",\n    16: \"#ECBB0C\",\n    17: \"#B9D912\",\n    18: \"#253A93\",\n    19: \"#125FB9\",\n}\n\ndocument.documentElement.classList.remove(\"no-js\");\ndocument.documentElement.classList.add(\"js\");\nconsole.log('lion');\nconsole.log(document.getElementById(\"pnAdvancerLeftStore\"));\n// Out advancer buttons\nvar pnAdvancerLeftStoreStore = document.getElementById(\"pnAdvancerLeftStore\");\nvar pnAdvancerRightStore = document.getElementById(\"pnAdvancerRightStore\");\n// the indicator\nvar pnIndicatorStore = document.getElementById(\"pnIndicatorStore\");\n\nvar pnProductNavStore = document.getElementById(\"pnProductNavStore\");\nvar pnProductNavContentsStore = document.getElementById(\"pnProductNavContentsStore\");\n\npnProductNavStore.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContentsStore, pnProductNavStore));\n\n// Set the indicator\nmoveIndicator(pnProductNavStore.querySelector(\"[aria-selected=\\\"true\\\"]\"), colours[0]);\n\n// Handle the scroll of the horizontal container\nvar last_known_scroll_positionStore = 0;\nvar tickingStore = false;\n\nfunction doSomethingStore(scroll_pos) {\n    pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContentsStore, pnProductNavStore));\n}\n\npnProductNavStore.addEventListener(\"scroll\", function() {\n    last_known_scroll_positionStore = window.scrollY;\n    if (!ticking) {\n        window.requestAnimationFrame(function() {\n            doSomething(last_known_scroll_positionStore);\n            tickingStore = false;\n        });\n    }\n    tickingStore = true;\n});\n\n\npnAdvancerLeftStore.addEventListener(\"click\", function() {\n    // If in the middle of a move return\n    if (SETTINGS.navBarTravelling === true) {\n        return;\n    }\n    // If we have content overflowing both sides or on the left\n    if (determineOverflow(pnProductNavContentsStore, pnProductNavStore) === \"left\" || determineOverflow(pnProductNavContentsStore, pnProductNavStore) === \"both\") {\n        // Find how far this panel has been scrolled\n        var availableScrollLeft = pnProductNav.scrollLeft;\n        // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n        if (availableScrollLeft < SETTINGS.navBarTravelDistance * 2) {\n            pnProductNavContents.style.transform = \"translateX(\" + availableScrollLeft + \"px)\";\n        } else {\n            pnProductNavContents.style.transform = \"translateX(\" + SETTINGS.navBarTravelDistance + \"px)\";\n        }\n        // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n        pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n        // Update our settings\n        SETTINGS.navBarTravelDirection = \"left\";\n        SETTINGS.navBarTravelling = true;\n    }\n    // Now update the attribute in the DOM\n    pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n});\n\npnAdvancerRight.addEventListener(\"click\", function() {\n    // If in the middle of a move return\n    if (SETTINGS.navBarTravelling === true) {\n        return;\n    }\n    // If we have content overflowing both sides or on the right\n    if (determineOverflow(pnProductNavContents, pnProductNav) === \"right\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n        // Get the right edge of the container and content\n        var navBarRightEdge = pnProductNavContents.getBoundingClientRect().right;\n        var navBarScrollerRightEdge = pnProductNav.getBoundingClientRect().right;\n        // Now we know how much space we have available to scroll\n        var availableScrollRight = Math.floor(navBarRightEdge - navBarScrollerRightEdge);\n        // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n        if (availableScrollRight < SETTINGS.navBarTravelDistance * 2) {\n            pnProductNavContents.style.transform = \"translateX(-\" + availableScrollRight + \"px)\";\n        } else {\n            pnProductNavContents.style.transform = \"translateX(-\" + SETTINGS.navBarTravelDistance + \"px)\";\n        }\n        // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n        pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n        // Update our settings\n        SETTINGS.navBarTravelDirection = \"right\";\n        SETTINGS.navBarTravelling = true;\n    }\n    // Now update the attribute in the DOM\n    pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n});\n\npnProductNavContents.addEventListener(\n    \"transitionend\",\n    function() {\n        // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform\n        var styleOfTransform = window.getComputedStyle(pnProductNavContents, null);\n        var tr = styleOfTransform.getPropertyValue(\"-webkit-transform\") || styleOfTransform.getPropertyValue(\"transform\");\n        // If there is no transition we want to default to 0 and not null\n        var amount = Math.abs(parseInt(tr.split(\",\")[4]) || 0);\n        pnProductNavContents.style.transform = \"none\";\n        pnProductNavContents.classList.add(\"pn-ProductNav_Contents-no-transition\");\n        // Now lets set the scroll position\n        if (SETTINGS.navBarTravelDirection === \"left\") {\n            pnProductNav.scrollLeft = pnProductNav.scrollLeft - amount;\n        } else {\n            pnProductNav.scrollLeft = pnProductNav.scrollLeft + amount;\n        }\n        SETTINGS.navBarTravelling = false;\n    },\n    false\n);\n\n// Handle setting the currently active link\npnProductNavContents.addEventListener(\"click\", function(e) {\n    var links = [].slice.call(document.querySelectorAll(\".pn-ProductNav_Link\"));\n    links.forEach(function(item) {\n        item.setAttribute(\"aria-selected\", \"false\");\n    })\n    e.target.setAttribute(\"aria-selected\", \"true\");\n    // Pass the clicked item and it's colour to the move indicator function\n    moveIndicator(e.target, colours[links.indexOf(e.target)]);\n});\n\n// var count = 0;\nfunction moveIndicator(item, color) {\n    var textPosition = item.getBoundingClientRect();\n    var container = pnProductNavContents.getBoundingClientRect().left;\n    var distance = textPosition.left - container;\n     var scroll = pnProductNavContents.scrollLeft;\n    pnIndicator.style.transform = \"translateX(\" + (distance + scroll) + \"px) scaleX(\" + textPosition.width * 0.01 + \")\";\n    // count = count += 100;\n    // pnIndicator.style.transform = \"translateX(\" + count + \"px)\";\n    \n    if (color) {\n        pnIndicator.style.backgroundColor = color;\n    }\n}\n\nfunction determineOverflow(content, container) {\n    var containerMetrics = container.getBoundingClientRect();\n    var containerMetricsRight = Math.floor(containerMetrics.right);\n    var containerMetricsLeft = Math.floor(containerMetrics.left);\n    var contentMetrics = content.getBoundingClientRect();\n    var contentMetricsRight = Math.floor(contentMetrics.right);\n    var contentMetricsLeft = Math.floor(contentMetrics.left);\n     if (containerMetricsLeft > contentMetricsLeft && containerMetricsRight < contentMetricsRight) {\n        return \"both\";\n    } else if (contentMetricsLeft < containerMetricsLeft) {\n        return \"left\";\n    } else if (contentMetricsRight > containerMetricsRight) {\n        return \"right\";\n    } else {\n        return \"none\";\n    }\n}\n\n/**\n * @fileoverview dragscroll - scroll area by dragging\n * @version 0.0.8\n * \n * @license MIT, see https://github.com/asvd/dragscroll\n * @copyright 2015 asvd <heliosframework@gmail.com> \n */\n\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== 'undefined') {\n        factory(exports);\n    } else {\n        factory((root.dragscroll = {}));\n    }\n}(this, function (exports) {\n    var _window = window;\n    var _document = document;\n    var mousemove = 'mousemove';\n    var mouseup = 'mouseup';\n    var mousedown = 'mousedown';\n    var EventListener = 'EventListener';\n    var addEventListener = 'add'+EventListener;\n    var removeEventListener = 'remove'+EventListener;\n    var newScrollX, newScrollY;\n\n    var dragged = [];\n    var reset = function(i, el) {\n        for (i = 0; i < dragged.length;) {\n            el = dragged[i++];\n            el = el.container || el;\n            el[removeEventListener](mousedown, el.md, 0);\n            _window[removeEventListener](mouseup, el.mu, 0);\n            _window[removeEventListener](mousemove, el.mm, 0);\n        }\n\n        // cloning into array since HTMLCollection is updated dynamically\n        dragged = [].slice.call(_document.getElementsByClassName('dragscrollStore'));\n        for (i = 0; i < dragged.length;) {\n            (function(el, lastClientX, lastClientY, pushed, scroller, cont){\n                (cont = el.container || el)[addEventListener](\n                    mousedown,\n                    cont.md = function(e) {\n                        if (!el.hasAttribute('nochilddrag') ||\n                            _document.elementFromPoint(\n                                e.pageX, e.pageY\n                            ) == cont\n                        ) {\n                            pushed = 1;\n                            lastClientX = e.clientX;\n                            lastClientY = e.clientY;\n\n                            e.preventDefault();\n                        }\n                    }, 0\n                );\n\n                _window[addEventListener](\n                    mouseup, cont.mu = function() {pushed = 0;}, 0\n                );\n\n                _window[addEventListener](\n                    mousemove,\n                    cont.mm = function(e) {\n                        if (pushed) {\n                            (scroller = el.scroller||el).scrollLeft -=\n                                newScrollX = (- lastClientX + (lastClientX=e.clientX));\n                            scroller.scrollTop -=\n                                newScrollY = (- lastClientY + (lastClientY=e.clientY));\n                            if (el == _document.body) {\n                                (scroller = _document.documentElement).scrollLeft -= newScrollX;\n                                scroller.scrollTop -= newScrollY;\n                            }\n                        }\n                    }, 0\n                );\n             })(dragged[i++]);\n        }\n    }\n\n      \n    if (_document.readyState == 'complete') {\n        reset();\n    } else {\n        _window[addEventListener]('load', reset, 0);\n    }\n\n    exports.reset = reset;\n}));\n}\n}"]},"metadata":{},"sourceType":"module"}