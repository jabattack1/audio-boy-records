{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\n\nif (process.browser) {\n  window.onload = function () {\n    var SETTINGSStore = {\n      navBarTravellingStore: false,\n      navBarTravelDirectionStore: \"\",\n      navBarTravelDistanceStore: 250\n    };\n    var coloursStore = {\n      0: \"#867100\",\n      1: \"#7F4200\",\n      2: \"#99813D\",\n      3: \"#40FEFF\",\n      4: \"#14CC99\",\n      5: \"#00BAFF\",\n      6: \"#0082B2\",\n      7: \"#B25D7A\",\n      8: \"#00FF17\",\n      9: \"#006B49\",\n      10: \"#00B27A\",\n      11: \"#996B3D\",\n      12: \"#CC7014\",\n      13: \"#40FF8C\",\n      14: \"#FF3400\",\n      15: \"#ECBB5E\",\n      16: \"#ECBB0C\",\n      17: \"#B9D912\",\n      18: \"#253A93\",\n      19: \"#125FB9\"\n    };\n    document.documentElement.classList.remove(\"no-js\");\n    document.documentElement.classList.add(\"js\");\n    console.log('lionStore');\n    console.log(document.getElementById(\"pnAdvancerLeftStore\")); // Out advancer buttons\n\n    var pnAdvancerLeftStore = document.getElementById(\"pnAdvancerLeftStore\");\n    var pnAdvancerRightStore = document.getElementById(\"pnAdvancerRightStore\"); // the indicator\n\n    var pnIndicatorStore = document.getElementById(\"pnIndicatorStore\");\n    var pnProductNavStore = document.getElementById(\"pnProductNavStore\");\n    var pnProductNavContentsStore = document.getElementById(\"pnProductNavContentsStore\");\n    pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore)); // Set the indicator\n\n    moveIndicatorStore(pnProductNavStore.querySelector(\"[aria-selected=\\\"true\\\"]\"), coloursStore[0]); // Handle the scroll of the horizontal container\n\n    var last_known_scroll_positionStore = 0;\n    var tickingStore = false;\n\n    function doSomethingStore(scroll_pos) {\n      pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n    }\n\n    pnProductNavStore.addEventListener(\"scroll\", function () {\n      last_known_scroll_positionStore = window.scrollY;\n\n      if (!tickingStore) {\n        window.requestAnimationFrame(function () {\n          doSomethingStore(last_known_scroll_positionStore);\n          tickingStore = false;\n        });\n      }\n\n      tickingStore = true;\n    });\n    pnAdvancerLeftStore.addEventListener(\"click\", function () {\n      // If in the middle of a move return\n      if (SETTINGSStore.navBarTravellingStore === true) {\n        return;\n      } // If we have content overflowing both sides or on the left\n\n\n      if (determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"left\" || determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"both\") {\n        // Find how far this panel has been scrolled\n        var availableScrollLeftStore = pnProductNav.scrollLeftStore; // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n\n        if (availableScrollLeftStore < SETTINGSStore.navBarTravelDistanceStore * 2) {\n          pnProductNavContentsStore.style.transform = \"translateX(\" + availableScrollLeftStore + \"px)\";\n        } else {\n          pnProductNavContentsStore.style.transform = \"translateX(\" + SETTINGSStore.navBarTravelDistanceStore + \"px)\";\n        } // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\n\n        pnProductNavContentsStore.classList.remove(\"pn-ProductNav_Contents-no-transition\"); // Update our settings\n\n        SETTINGSStore.navBarTravelDirectionStore = \"left\";\n        SETTINGSStore.navBarTravellingStore = true;\n      } // Now update the attribute in the DOM\n\n\n      pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n    });\n    pnAdvancerRightStore.addEventListener(\"click\", function () {\n      // If in the middle of a move return\n      if (SETTINGSStore.navBarTravellingStore === true) {\n        return;\n      } // If we have content overflowing both sides or on the right\n\n\n      if (determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"right\" || determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"both\") {\n        // Get the right edge of the container and content\n        var navBarRightEdgeStore = pnProductNavContentsStore.getBoundingClientRect().right;\n        var navBarScrollerRightEdgeStore = pnProductNavStore.getBoundingClientRect().right; // Now we know how much space we have available to scroll\n\n        var availableScrollRightStore = Math.floor(navBarRightEdgeStore - navBarScrollerRightEdgeStore); // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n\n        if (availableScrollRightStore < SETTINGSStore.navBarTravelDistanceStore * 2) {\n          pnProductNavContentsStore.style.transform = \"translateX(-\" + availableScrollRightStore + \"px)\";\n        } else {\n          pnProductNavContentsStore.style.transform = \"translateX(-\" + SETTINGSStore.navBarTravelDistanceStore + \"px)\";\n        } // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\n\n        pnProductNavContentsStore.classList.remove(\"pn-ProductNav_Contents-no-transition\"); // Update our settings\n\n        SETTINGSStore.navBarTravelDirectionStore = \"right\";\n        SETTINGSStore.navBarTravellingStore = true;\n      } // Now update the attribute in the DOM\n\n\n      pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n    });\n    pnProductNavContentsStore.addEventListener(\"transitionend\", function () {\n      // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform\n      var styleOfTransformStore = window.getComputedStyle(pnProductNavContentsStore, null);\n      var tr = styleOfTransformStore.getPropertyValue(\"-webkit-transform\") || styleOfTransformStore.getPropertyValue(\"transform\"); // If there is no transition we want to default to 0 and not null\n\n      var amountStore = Math.abs(_parseInt(tr.split(\",\")[4]) || 0);\n      pnProductNavContentsStore.style.transform = \"none\";\n      pnProductNavContentsStore.classList.add(\"pn-ProductNav_Contents-no-transition\"); // Now lets set the scroll position\n\n      if (SETTINGSStore.navBarTravelDirectionStore === \"left\") {\n        pnProductNav.scrollLeftStore = pnProductNav.scrollLeftStore - amountStore;\n      } else {\n        pnProductNav.scrollLeftStore = pnProductNav.scrollLeftStore + amountStore;\n      }\n\n      SETTINGSStore.navBarTravellingStore = false;\n    }, false); // Handle setting the currently active link\n\n    pnProductNavContentsStore.addEventListener(\"click\", function (eStore) {\n      var linksStore = [].slice.call(document.querySelectorAll(\".pn-ProductNav_LinkStore\"));\n      linksStore.forEach(function (itemStore) {\n        itemStore.setAttribute(\"aria-selected\", \"false\");\n      });\n      eStore.target.setAttribute(\"aria-selected\", \"true\"); // Pass the clicked itemStore and it's colour to the move indicator function\n\n      moveIndicatorStore(eStore.target, coloursStore[linksStore.indexOf(eStore.target)]);\n    }); // var count = 0;\n\n    function moveIndicatorStore(itemStore, colorStore) {\n      var textPositionStore = itemStore.getBoundingClientRect();\n      var containerStore = pnProductNavContentsStore.getBoundingClientRect().left;\n      var distanceStore = textPositionStore.left - containerStore;\n      var scrollStore = pnProductNavContentsStore.scrollLeft;\n      pnIndicatorStore.style.transform = \"translateX(\" + (distanceStore + scrollStore) + \"px) scaleX(\" + textPositionStore.width * 0.01 + \")\"; // count = count += 100;\n      // pnIndicator.style.transform = \"translateX(\" + count + \"px)\";\n\n      if (colorStore) {\n        pnIndicatorStore.style.backgroundColor = colorStore;\n      }\n    }\n\n    function determineOverflowStore(contentStore, containerStore) {\n      var containerMetricsStore = containerStore.getBoundingClientRect();\n      var containerMetricsRightStore = Math.floor(containerMetricsStore.right);\n      var containerMetricsLeftStore = Math.floor(containerMetricsStore.left);\n      var contentMetricsStore = contentStore.getBoundingClientRect();\n      var contentMetricsRightStore = Math.floor(contentMetricsStore.right);\n      var contentMetricsLeftStore = Math.floor(contentMetricsStore.left);\n\n      if (containerMetricsLeftStore > contentMetricsLeftStore && containerMetricsRightStore < contentMetricsRightStore) {\n        return \"both\";\n      } else if (contentMetricsLeftStore < containerMetricsLeftStore) {\n        return \"left\";\n      } else if (contentMetricsRightStore > containerMetricsRightStore) {\n        return \"right\";\n      } else {\n        return \"none\";\n      }\n    }\n    /**\n     * @fileoverview dragscroll - scroll area by dragging\n     * @version 0.0.8\n     * \n     * @license MIT, see https://github.com/asvd/dragscroll\n     * @copyright 2015 asvd <heliosframework@gmail.com> \n     */\n\n\n    (function (rootStore, factoryStore) {\n      if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n      } else if (typeof exportsStore !== 'undefined') {\n        factoryStore(exportsStore);\n      } else {\n        factoryStore(rootStore.dragscrollStore = {});\n      }\n    })(this, function (exportsStore) {\n      var _windowStore = window;\n      var _documentStore = document;\n      var mousemoveStore = 'mousemove';\n      var mouseupStore = 'mouseup';\n      var mousedownStore = 'mousedown';\n      var EventListenerStore = 'EventListener';\n      var addEventListenerStore = 'add' + EventListenerStore;\n      var removeEventListenerStore = 'remove' + EventListenerStore;\n      var newScrollXStore, newScrollYStore;\n      var draggedStore = [];\n\n      var resetStore = function resetStore(iStore, elStore) {\n        for (iStore = 0; iStore < draggedStore.length;) {\n          elStore = draggedStore[iStore++];\n          elStore = elStore.containerStore || elStore;\n          elStore[removeEventListenerStore](mousedownStore, elStore.md, 0);\n\n          _windowStore[removeEventListenerStore](mouseupStore, elStore.mu, 0);\n\n          _windowStore[removeEventListenerStore](mousemoveStore, elStore.mm, 0);\n        } // cloning into array since HTMLCollection is updated dynamically\n\n\n        draggedStore = [].slice.call(_documentStore.getElementsByClassName('dragscroll'));\n\n        for (iStore = 0; iStore < draggedStore.length;) {\n          (function (elStore, lastClientXStore, lastClientYStore, pushedStore, scrollerStore, contStore) {\n            (contStore = elStore.container || el)[addEventListenerStore](mousedownStore, cont.md = function (e) {\n              if (!elStore.hasAttribute('nochilddrag') || _documentStoreStore.elementFromPoint(eStore.pageXStore, eStore.pageYStore) == contStore) {\n                pushedStore = 1;\n                lastClientXStore = e.clientXStore;\n                lastClientYStore = e.clientYStore;\n                eStore.preventDefault();\n              }\n            }, 0);\n\n            _windowStore[addEventListenerStore](mouseupStore, cont.mu = function () {\n              pushedStore = 0;\n            }, 0);\n\n            _windowStore[addEventListenerStore](mousemoveStore, cont.mm = function (eStore) {\n              if (pushedStore) {\n                (scrollerStore = elStore.scrollerStore || elStore).scrollLeftStore -= newScrollXStore = -lastClientXStore + (lastClientXStore = e.clientXStore);\n                scrollerStore.scrollTop -= newScrollYStore = -lastClientYStore + (lastClientYStore = e.clientYStore);\n\n                if (elStore == _documentStore.body) {\n                  (scrollerStore = _documentStore.documentElement).scrollLeftStore -= newScrollXStore;\n                  scrollerStore.scrollTop -= newScrollYStore;\n                }\n              }\n            }, 0);\n          })(draggedStore[i++]);\n        }\n      };\n\n      if (_documentStore.readyState == 'complete') {\n        resetStore();\n      } else {\n        _windowStore[addEventListenerStore]('load', resetStore, 0);\n      }\n\n      exportsStore.resetStore = resetStore;\n    });\n  };\n}","map":{"version":3,"sources":["/Users/peterhahn/src/new/audio-boy/scrollStore.js"],"names":["process","browser","window","onload","SETTINGSStore","navBarTravellingStore","navBarTravelDirectionStore","navBarTravelDistanceStore","coloursStore","document","documentElement","classList","remove","add","console","log","getElementById","pnAdvancerLeftStore","pnAdvancerRightStore","pnIndicatorStore","pnProductNavStore","pnProductNavContentsStore","setAttribute","determineOverflowStore","moveIndicatorStore","querySelector","last_known_scroll_positionStore","tickingStore","doSomethingStore","scroll_pos","addEventListener","scrollY","requestAnimationFrame","availableScrollLeftStore","pnProductNav","scrollLeftStore","style","transform","navBarRightEdgeStore","getBoundingClientRect","right","navBarScrollerRightEdgeStore","availableScrollRightStore","Math","floor","styleOfTransformStore","getComputedStyle","tr","getPropertyValue","amountStore","abs","split","eStore","linksStore","slice","call","querySelectorAll","forEach","itemStore","target","indexOf","colorStore","textPositionStore","containerStore","left","distanceStore","scrollStore","scrollLeft","width","backgroundColor","contentStore","containerMetricsStore","containerMetricsRightStore","containerMetricsLeftStore","contentMetricsStore","contentMetricsRightStore","contentMetricsLeftStore","rootStore","factoryStore","define","amd","factory","exportsStore","dragscrollStore","_windowStore","_documentStore","mousemoveStore","mouseupStore","mousedownStore","EventListenerStore","addEventListenerStore","removeEventListenerStore","newScrollXStore","newScrollYStore","draggedStore","resetStore","iStore","elStore","length","md","mu","mm","getElementsByClassName","lastClientXStore","lastClientYStore","pushedStore","scrollerStore","contStore","container","el","cont","e","hasAttribute","_documentStoreStore","elementFromPoint","pageXStore","pageYStore","clientXStore","clientYStore","preventDefault","scrollTop","body","i","readyState"],"mappings":"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","sourcesContent":["if (process.browser){\nwindow.onload = function(){\n\nvar SETTINGSStore = {\n    navBarTravellingStore: false,\n    navBarTravelDirectionStore: \"\",\n    navBarTravelDistanceStore: 250\n}\n\nvar coloursStore = {\n    0: \"#867100\",\n    1: \"#7F4200\",\n    2: \"#99813D\",\n    3: \"#40FEFF\",\n    4: \"#14CC99\",\n    5: \"#00BAFF\",\n    6: \"#0082B2\",\n    7: \"#B25D7A\",\n    8: \"#00FF17\",\n    9: \"#006B49\",\n    10: \"#00B27A\",\n    11: \"#996B3D\",\n    12: \"#CC7014\",\n    13: \"#40FF8C\",\n    14: \"#FF3400\",\n    15: \"#ECBB5E\",\n    16: \"#ECBB0C\",\n    17: \"#B9D912\",\n    18: \"#253A93\",\n    19: \"#125FB9\",\n}\n\ndocument.documentElement.classList.remove(\"no-js\");\ndocument.documentElement.classList.add(\"js\");\nconsole.log('lionStore');\nconsole.log(document.getElementById(\"pnAdvancerLeftStore\"));\n// Out advancer buttons\nvar pnAdvancerLeftStore = document.getElementById(\"pnAdvancerLeftStore\");\nvar pnAdvancerRightStore = document.getElementById(\"pnAdvancerRightStore\");\n// the indicator\nvar pnIndicatorStore = document.getElementById(\"pnIndicatorStore\");\n\nvar pnProductNavStore = document.getElementById(\"pnProductNavStore\");\nvar pnProductNavContentsStore = document.getElementById(\"pnProductNavContentsStore\");\n\npnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n\n// Set the indicator\nmoveIndicatorStore(pnProductNavStore.querySelector(\"[aria-selected=\\\"true\\\"]\"), coloursStore[0]);\n\n// Handle the scroll of the horizontal container\nvar last_known_scroll_positionStore = 0;\nvar tickingStore = false;\n\nfunction doSomethingStore(scroll_pos) {\n    pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n}\n\npnProductNavStore.addEventListener(\"scroll\", function() {\n    last_known_scroll_positionStore = window.scrollY;\n    if (!tickingStore) {\n        window.requestAnimationFrame(function() {\n            doSomethingStore(last_known_scroll_positionStore);\n            tickingStore = false;\n        });\n    }\n    tickingStore = true;\n});\n\n\npnAdvancerLeftStore.addEventListener(\"click\", function() {\n    // If in the middle of a move return\n    if (SETTINGSStore.navBarTravellingStore === true) {\n        return;\n    }\n    // If we have content overflowing both sides or on the left\n    if (determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"left\" || determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"both\") {\n        // Find how far this panel has been scrolled\n        var availableScrollLeftStore = pnProductNav.scrollLeftStore;\n        // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n        if (availableScrollLeftStore < SETTINGSStore.navBarTravelDistanceStore * 2) {\n            pnProductNavContentsStore.style.transform = \"translateX(\" + availableScrollLeftStore + \"px)\";\n        } else {\n            pnProductNavContentsStore.style.transform = \"translateX(\" + SETTINGSStore.navBarTravelDistanceStore + \"px)\";\n        }\n        // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n        pnProductNavContentsStore.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n        // Update our settings\n        SETTINGSStore.navBarTravelDirectionStore = \"left\";\n        SETTINGSStore.navBarTravellingStore = true;\n    }\n    // Now update the attribute in the DOM\n    pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n});\n\npnAdvancerRightStore.addEventListener(\"click\", function() {\n    // If in the middle of a move return\n    if (SETTINGSStore.navBarTravellingStore === true) {\n        return;\n    }\n    // If we have content overflowing both sides or on the right\n    if (determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"right\" || determineOverflowStore(pnProductNavContentsStore, pnProductNavStore) === \"both\") {\n        // Get the right edge of the container and content\n        var navBarRightEdgeStore = pnProductNavContentsStore.getBoundingClientRect().right;\n        var navBarScrollerRightEdgeStore = pnProductNavStore.getBoundingClientRect().right;\n        // Now we know how much space we have available to scroll\n        var availableScrollRightStore = Math.floor(navBarRightEdgeStore - navBarScrollerRightEdgeStore);\n        // If the space available is less than two lots of our desired distance, just move the whole amount\n        // otherwise, move by the amount in the settings\n        if (availableScrollRightStore < SETTINGSStore.navBarTravelDistanceStore * 2) {\n            pnProductNavContentsStore.style.transform = \"translateX(-\" + availableScrollRightStore + \"px)\";\n        } else {\n            pnProductNavContentsStore.style.transform = \"translateX(-\" + SETTINGSStore.navBarTravelDistanceStore + \"px)\";\n        }\n        // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n        pnProductNavContentsStore.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n        // Update our settings\n        SETTINGSStore.navBarTravelDirectionStore = \"right\";\n        SETTINGSStore.navBarTravellingStore = true;\n    }\n    // Now update the attribute in the DOM\n    pnProductNavStore.setAttribute(\"data-overflowing\", determineOverflowStore(pnProductNavContentsStore, pnProductNavStore));\n});\n\npnProductNavContentsStore.addEventListener(\n    \"transitionend\",\n    function() {\n        // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform\n        var styleOfTransformStore = window.getComputedStyle(pnProductNavContentsStore, null);\n        var tr = styleOfTransformStore.getPropertyValue(\"-webkit-transform\") || styleOfTransformStore.getPropertyValue(\"transform\");\n        // If there is no transition we want to default to 0 and not null\n        var amountStore = Math.abs(parseInt(tr.split(\",\")[4]) || 0);\n        pnProductNavContentsStore.style.transform = \"none\";\n        pnProductNavContentsStore.classList.add(\"pn-ProductNav_Contents-no-transition\");\n        // Now lets set the scroll position\n        if (SETTINGSStore.navBarTravelDirectionStore === \"left\") {\n            pnProductNav.scrollLeftStore = pnProductNav.scrollLeftStore - amountStore;\n        } else {\n            pnProductNav.scrollLeftStore = pnProductNav.scrollLeftStore + amountStore;\n        }\n        SETTINGSStore.navBarTravellingStore = false;\n    },\n    false\n);\n\n// Handle setting the currently active link\npnProductNavContentsStore.addEventListener(\"click\", function(eStore) {\n    var linksStore = [].slice.call(document.querySelectorAll(\".pn-ProductNav_LinkStore\"));\n    linksStore.forEach(function(itemStore) {\n        itemStore.setAttribute(\"aria-selected\", \"false\");\n    })\n    eStore.target.setAttribute(\"aria-selected\", \"true\");\n    // Pass the clicked itemStore and it's colour to the move indicator function\n    moveIndicatorStore(eStore.target, coloursStore[linksStore.indexOf(eStore.target)]);\n});\n\n// var count = 0;\nfunction moveIndicatorStore(itemStore, colorStore) {\n    var textPositionStore = itemStore.getBoundingClientRect();\n    var containerStore = pnProductNavContentsStore.getBoundingClientRect().left;\n    var distanceStore = textPositionStore.left - containerStore;\n     var scrollStore = pnProductNavContentsStore.scrollLeft;\n    pnIndicatorStore.style.transform = \"translateX(\" + (distanceStore + scrollStore) + \"px) scaleX(\" + textPositionStore.width * 0.01 + \")\";\n    // count = count += 100;\n    // pnIndicator.style.transform = \"translateX(\" + count + \"px)\";\n    \n    if (colorStore) {\n        pnIndicatorStore.style.backgroundColor = colorStore;\n    }\n}\n\nfunction determineOverflowStore(contentStore, containerStore) {\n    var containerMetricsStore = containerStore.getBoundingClientRect();\n    var containerMetricsRightStore = Math.floor(containerMetricsStore.right);\n    var containerMetricsLeftStore = Math.floor(containerMetricsStore.left);\n    var contentMetricsStore = contentStore.getBoundingClientRect();\n    var contentMetricsRightStore = Math.floor(contentMetricsStore.right);\n    var contentMetricsLeftStore = Math.floor(contentMetricsStore.left);\n     if (containerMetricsLeftStore > contentMetricsLeftStore && containerMetricsRightStore < contentMetricsRightStore) {\n        return \"both\";\n    } else if (contentMetricsLeftStore < containerMetricsLeftStore) {\n        return \"left\";\n    } else if (contentMetricsRightStore > containerMetricsRightStore) {\n        return \"right\";\n    } else {\n        return \"none\";\n    }\n}\n\n/**\n * @fileoverview dragscroll - scroll area by dragging\n * @version 0.0.8\n * \n * @license MIT, see https://github.com/asvd/dragscroll\n * @copyright 2015 asvd <heliosframework@gmail.com> \n */\n\n\n(function (rootStore, factoryStore) {\n    if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exportsStore !== 'undefined') {\n        factoryStore(exportsStore);\n    } else {\n        factoryStore((rootStore.dragscrollStore = {}));\n    }\n}(this, function (exportsStore) {\n    var _windowStore = window;\n    var _documentStore = document;\n    var mousemoveStore = 'mousemove';\n    var mouseupStore = 'mouseup';\n    var mousedownStore = 'mousedown';\n    var EventListenerStore = 'EventListener';\n    var addEventListenerStore = 'add'+EventListenerStore;\n    var removeEventListenerStore = 'remove'+EventListenerStore;\n    var newScrollXStore, newScrollYStore;\n\n    var draggedStore = [];\n    var resetStore = function(iStore, elStore) {\n        for (iStore = 0; iStore < draggedStore.length;) {\n            elStore = draggedStore[iStore++];\n            elStore = elStore.containerStore || elStore;\n            elStore[removeEventListenerStore](mousedownStore, elStore.md, 0);\n            _windowStore[removeEventListenerStore](mouseupStore, elStore.mu, 0);\n            _windowStore[removeEventListenerStore](mousemoveStore, elStore.mm, 0);\n        }\n\n        // cloning into array since HTMLCollection is updated dynamically\n        draggedStore = [].slice.call(_documentStore.getElementsByClassName('dragscroll'));\n        for (iStore = 0; iStore < draggedStore.length;) {\n            (function(elStore, lastClientXStore, lastClientYStore, pushedStore, scrollerStore, contStore){\n                (contStore = elStore.container || el)[addEventListenerStore](\n                    mousedownStore,\n                    cont.md = function(e) {\n                        if (!elStore.hasAttribute('nochilddrag') ||\n                            _documentStoreStore.elementFromPoint(\n                                eStore.pageXStore, eStore.pageYStore\n                            ) == contStore\n                        ) {\n                            pushedStore = 1;\n                            lastClientXStore = e.clientXStore;\n                            lastClientYStore = e.clientYStore;\n\n                            eStore.preventDefault();\n                        }\n                    }, 0\n                );\n\n                _windowStore[addEventListenerStore](\n                    mouseupStore, cont.mu = function() {pushedStore = 0;}, 0\n                );\n\n                _windowStore[addEventListenerStore](\n                    mousemoveStore,\n                    cont.mm = function(eStore) {\n                        if (pushedStore) {\n                            (scrollerStore = elStore.scrollerStore||elStore).scrollLeftStore -=\n                                newScrollXStore = (- lastClientXStore + (lastClientXStore=e.clientXStore));\n                            scrollerStore.scrollTop -=\n                                newScrollYStore = (- lastClientYStore + (lastClientYStore=e.clientYStore));\n                            if (elStore == _documentStore.body) {\n                                (scrollerStore = _documentStore.documentElement).scrollLeftStore -= newScrollXStore;\n                                scrollerStore.scrollTop -= newScrollYStore;\n                            }\n                        }\n                    }, 0\n                );\n             })(draggedStore[i++]);\n        }\n    }\n\n      \n    if (_documentStore.readyState == 'complete') {\n        resetStore();\n    } else {\n        _windowStore[addEventListenerStore]('load', resetStore, 0);\n    }\n\n    exportsStore.resetStore = resetStore;\n}));\n}\n}"]},"metadata":{},"sourceType":"module"}