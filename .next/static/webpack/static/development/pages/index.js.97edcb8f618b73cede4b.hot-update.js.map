{"version":3,"file":"static/webpack/static/development/pages/index.js.97edcb8f618b73cede4b.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\n\nimport styled from 'styled-components';\n\nimport Parent from '../components/parent.js';\nimport Layout from '../components/layout';\n\nimport data from '../data/artistList.js';\nimport newsData from '../data/news.js';\nimport store from '../data/store.js';\n\nimport '../scroll.js';\n\nimport '../css/normalize.css';\nimport '../css/skeleton.css';\nimport '../css/bootstrap.css';\nimport '../css/style.css';\nimport '../css/styleStore.css';\n\nclass Index extends React.Component {\n\n\tconstructor(){\n\n\t    super()\n\n\t}\n\n\tstate={\n\t\ttrigger:''\n\t}\n\n\tcomponentDidMount(props) {\n\t\tthis.art = data;\n\t\tthis.news = newsData;\n\t\tthis.store = store;\n\t\tvar loc = window.location.pathname;\n\t\tconsole.log(loc);\n\t\tvar SETTINGS = {\n\t\t    navBarTravelling: false,\n\t\t    navBarTravelDirection: \"\",\n\t\t     navBarTravelDistance: 500\n\t\t}\n\n\t\tvar colours = {\n\t\t    0: \"#867100\",\n\t\t    1: \"#7F4200\",\n\t\t    2: \"#99813D\",\n\t\t    3: \"#40FEFF\",\n\t\t    4: \"#14CC99\",\n\t\t    5: \"#00BAFF\",\n\t\t    6: \"#0082B2\",\n\t\t    7: \"#B25D7A\",\n\t\t    8: \"#00FF17\",\n\t\t    9: \"#006B49\",\n\t\t    10: \"#00B27A\",\n\t\t    11: \"#996B3D\",\n\t\t    12: \"#CC7014\",\n\t\t    13: \"#40FF8C\",\n\t\t    14: \"#FF3400\",\n\t\t    15: \"#ECBB5E\",\n\t\t    16: \"#ECBB0C\",\n\t\t    17: \"#B9D912\",\n\t\t    18: \"#253A93\",\n\t\t    19: \"#125FB9\",\n\t\t}\n\n\t\tdocument.documentElement.classList.remove(\"no-js\");\n\t\tdocument.documentElement.classList.add(\"js\");\n\n\t\t// Out advancer buttons\n\t\tvar pnAdvancerLeft = document.getElementById(\"pnAdvancerLeft\");\n\t\tvar pnAdvancerRight = document.getElementById(\"pnAdvancerRight\");\n\t\t// the indicator\n\t\tvar pnIndicator = document.getElementById(\"pnIndicator\");\n\n\t\tvar pnProductNav = document.getElementById(\"pnProductNav\");\n\t\tvar pnProductNavContents = document.getElementById(\"pnProductNavContents\");\n\n\t\tpnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n\n\t\t// Set the indicator\n\t\tmoveIndicator(pnProductNav.querySelector(\"[aria-selected=\\\"true\\\"]\"), colours[0]);\n\n\t\t// Handle the scroll of the horizontal container\n\t\tvar last_known_scroll_position = 0;\n\t\tvar ticking = false;\n\n\t\tfunction doSomething(scroll_pos) {\n\t\t    pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n\t\t}\n\n\t\tpnProductNav.addEventListener(\"scroll\", function() {\n\t\t    last_known_scroll_position = window.scrollY;\n\t\t    if (!ticking) {\n\t\t        window.requestAnimationFrame(function() {\n\t\t            doSomething(last_known_scroll_position);\n\t\t            ticking = false;\n\t\t        });\n\t\t    }\n\t\t    ticking = true;\n\t\t});\n\n\n\t\tpnAdvancerLeft.addEventListener(\"click\", function() {\n\t\t    // If in the middle of a move return\n\t\t    if (SETTINGS.navBarTravelling === true) {\n\t\t        return;\n\t\t    }\n\t\t    // If we have content overflowing both sides or on the left\n\t\t    if (determineOverflow(pnProductNavContents, pnProductNav) === \"left\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n\t\t        // Find how far this panel has been scrolled\n\t\t        var availableScrollLeft = pnProductNav.scrollLeft;\n\t\t        // If the space available is less than two lots of our desired distance, just move the whole amount\n\t\t        // otherwise, move by the amount in the settings\n\t\t        if (availableScrollLeft < SETTINGS.navBarTravelDistance * 2) {\n\t\t            pnProductNavContents.style.transform = \"translateX(\" + availableScrollLeft + \"px)\";\n\t\t        } else {\n\t\t            pnProductNavContents.style.transform = \"translateX(\" + SETTINGS.navBarTravelDistance + \"px)\";\n\t\t        }\n\t\t        // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\t\t        pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n\t\t        // Update our settings\n\t\t        SETTINGS.navBarTravelDirection = \"left\";\n\t\t        SETTINGS.navBarTravelling = true;\n\t\t    }\n\t\t    // Now update the attribute in the DOM\n\t\t    pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n\t\t});\n\n\t\tpnAdvancerRight.addEventListener(\"click\", function() {\n\t\t\tconsole.log('slave');\n\t\t    // If in the middle of a move return\n\t\t    if (SETTINGS.navBarTravelling === true) {\n\t\t        return;\n\t\t    }\n\t\t    // If we have content overflowing both sides or on the right\n\t\t    if (determineOverflow(pnProductNavContents, pnProductNav) === \"right\" || determineOverflow(pnProductNavContents, pnProductNav) === \"both\") {\n\t\t        // Get the right edge of the container and content\n\t\t        var navBarRightEdge = pnProductNavContents.getBoundingClientRect().right;\n\t\t        var navBarScrollerRightEdge = pnProductNav.getBoundingClientRect().right;\n\t\t        // Now we know how much space we have available to scroll\n\t\t        var availableScrollRight = Math.floor(navBarRightEdge - navBarScrollerRightEdge);\n\t\t        // If the space available is less than two lots of our desired distance, just move the whole amount\n\t\t        // otherwise, move by the amount in the settings\n\t\t        if (availableScrollRight < SETTINGS.navBarTravelDistance * 2) {\n\t\t            pnProductNavContents.style.transform = \"translateX(-\" + availableScrollRight + \"px)\";\n\t\t        } else {\n\t\t            pnProductNavContents.style.transform = \"translateX(-\" + SETTINGS.navBarTravelDistance + \"px)\";\n\t\t        }\n\t\t        // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that\n\t\t        pnProductNavContents.classList.remove(\"pn-ProductNav_Contents-no-transition\");\n\t\t        // Update our settings\n\t\t        SETTINGS.navBarTravelDirection = \"right\";\n\t\t        SETTINGS.navBarTravelling = true;\n\t\t    }\n\t\t    // Now update the attribute in the DOM\n\t\t    pnProductNav.setAttribute(\"data-overflowing\", determineOverflow(pnProductNavContents, pnProductNav));\n\t\t});\n\n\t\tpnProductNavContents.addEventListener(\n\t\t    \"transitionend\",\n\t\t    function() {\n\t\t        // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform\n\t\t        var styleOfTransform = window.getComputedStyle(pnProductNavContents, null);\n\t\t        var tr = styleOfTransform.getPropertyValue(\"-webkit-transform\") || styleOfTransform.getPropertyValue(\"transform\");\n\t\t        // If there is no transition we want to default to 0 and not null\n\t\t        var amount = Math.abs(parseInt(tr.split(\",\")[4]) || 0);\n\t\t        pnProductNavContents.style.transform = \"none\";\n\t\t        pnProductNavContents.classList.add(\"pn-ProductNav_Contents-no-transition\");\n\t\t        // Now lets set the scroll position\n\t\t        if (SETTINGS.navBarTravelDirection === \"left\") {\n\t\t            pnProductNav.scrollLeft = pnProductNav.scrollLeft - amount;\n\t\t        } else {\n\t\t            pnProductNav.scrollLeft = pnProductNav.scrollLeft + amount;\n\t\t        }\n\t\t        SETTINGS.navBarTravelling = false;\n\t\t    },\n\t\t    false\n\t\t);\n\n\t\t// Handle setting the currently active link\n\t\tpnProductNavContents.addEventListener(\"click\", function(e) {\n\t\t    var links = [].slice.call(document.querySelectorAll(\".pn-ProductNav_Link\"));\n\t\t    links.forEach(function(item) {\n\t\t        item.setAttribute(\"aria-selected\", \"false\");\n\t\t    })\n\t\t    e.target.setAttribute(\"aria-selected\", \"true\");\n\t\t    // Pass the clicked item and it's colour to the move indicator function\n\t\t    moveIndicator(e.target, colours[links.indexOf(e.target)]);\n\t\t});\n\n\t\t// var count = 0;\n\t\tfunction moveIndicator(item, color) {\n\t\t    var textPosition = item.getBoundingClientRect();\n\t\t    var container = pnProductNavContents.getBoundingClientRect().left;\n\t\t    var distance = textPosition.left - container;\n\t\t     var scroll = pnProductNavContents.scrollLeft;\n\t\t    pnIndicator.style.transform = \"translateX(\" + (distance + scroll) + \"px) scaleX(\" + textPosition.width * 0.01 + \")\";\n\t\t    // count = count += 100;\n\t\t    // pnIndicator.style.transform = \"translateX(\" + count + \"px)\";\n\t\t    \n\t\t    if (color) {\n\t\t        pnIndicator.style.backgroundColor = color;\n\t\t    }\n\t\t}\n\n\t\tfunction determineOverflow(content, container) {\n\t\t    var containerMetrics = container.getBoundingClientRect();\n\t\t    var containerMetricsRight = Math.floor(containerMetrics.right);\n\t\t    var containerMetricsLeft = Math.floor(containerMetrics.left);\n\t\t    var contentMetrics = content.getBoundingClientRect();\n\t\t    var contentMetricsRight = Math.floor(contentMetrics.right);\n\t\t    var contentMetricsLeft = Math.floor(contentMetrics.left);\n\t\t     if (containerMetricsLeft > contentMetricsLeft && containerMetricsRight < contentMetricsRight) {\n\t\t        return \"both\";\n\t\t    } else if (contentMetricsLeft < containerMetricsLeft) {\n\t\t        return \"left\";\n\t\t    } else if (contentMetricsRight > containerMetricsRight) {\n\t\t        return \"right\";\n\t\t    } else {\n\t\t        return \"none\";\n\t\t    }\n\t\t}\n\n\t\t(function (root, factory) {\n\t\t    if (typeof define === 'function' && define.amd) {\n\t\t        define(['exports'], factory);\n\t\t    } else if (typeof exports !== 'undefined') {\n\t\t        factory(exports);\n\t\t    } else {\n\t\t        factory((root.dragscroll = {}));\n\t\t    }\n\t\t}(this, function (exports) {\n\t\t    var _window = window;\n\t\t    var _document = document;\n\t\t    var mousemove = 'mousemove';\n\t\t    var mouseup = 'mouseup';\n\t\t    var mousedown = 'mousedown';\n\t\t    var EventListener = 'EventListener';\n\t\t    var addEventListener = 'add'+EventListener;\n\t\t    var removeEventListener = 'remove'+EventListener;\n\t\t    var newScrollX, newScrollY;\n\n\t\t    var dragged = [];\n\t\t    var reset = function(i, el) {\n\t\t        for (i = 0; i < dragged.length;) {\n\t\t            el = dragged[i++];\n\t\t            el = el.container || el;\n\t\t            el[removeEventListener](mousedown, el.md, 0);\n\t\t            _window[removeEventListener](mouseup, el.mu, 0);\n\t\t            _window[removeEventListener](mousemove, el.mm, 0);\n\t\t        }\n\n\t\t        // cloning into array since HTMLCollection is updated dynamically\n\t\t        dragged = [].slice.call(_document.getElementsByClassName('dragscroll'));\n\t\t        for (i = 0; i < dragged.length;) {\n\t\t            (function(el, lastClientX, lastClientY, pushed, scroller, cont){\n\t\t                (cont = el.container || el)[addEventListener](\n\t\t                    mousedown,\n\t\t                    cont.md = function(e) {\n\t\t                        if (!el.hasAttribute('nochilddrag') ||\n\t\t                            _document.elementFromPoint(\n\t\t                                e.pageX, e.pageY\n\t\t                            ) == cont\n\t\t                        ) {\n\t\t                            pushed = 1;\n\t\t                            lastClientX = e.clientX;\n\t\t                            lastClientY = e.clientY;\n\n\t\t                            e.preventDefault();\n\t\t                        }\n\t\t                    }, 0\n\t\t                );\n\n\t\t                _window[addEventListener](\n\t\t                    mouseup, cont.mu = function() {pushed = 0;}, 0\n\t\t                );\n\n\t\t                _window[addEventListener](\n\t\t                    mousemove,\n\t\t                    cont.mm = function(e) {\n\t\t                        if (pushed) {\n\t\t                            (scroller = el.scroller||el).scrollLeft -=\n\t\t                                newScrollX = (- lastClientX + (lastClientX=e.clientX));\n\t\t                            scroller.scrollTop -=\n\t\t                                newScrollY = (- lastClientY + (lastClientY=e.clientY));\n\t\t                            if (el == _document.body) {\n\t\t                                (scroller = _document.documentElement).scrollLeft -= newScrollX;\n\t\t                                scroller.scrollTop -= newScrollY;\n\t\t                            }\n\t\t                        }\n\t\t                    }, 0\n\t\t                );\n\t\t             })(dragged[i++]);\n\t\t        }\n\t\t    }\n\n\t\t      \n\t\t    if (_document.readyState == 'complete') {\n\t\t    \treset();\n\t\t    } \n\t\t    else {\n\t\t        _window[addEventListener]('load', reset, 0);\n\t\t    }\n\n\t\t    exports.reset = reset;\n\n\t\t\t}));\n\t}\n\n \trender () {\n\n\n    \treturn(\n    \t\t<Layout>   \n    \t\t\t<Parent artists={data} news={newsData} store={store}/>\t\t\t\t\n  \t\t\t</Layout>\n    \t)\n \t }\n\n}\n\nexport default Index;\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AAHA;AAOA;AADA;AACA;AAPA;AAIA;AACA;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAuBA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;AAEA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA3SA;AACA;AA8SA;;;;A","sourceRoot":""}